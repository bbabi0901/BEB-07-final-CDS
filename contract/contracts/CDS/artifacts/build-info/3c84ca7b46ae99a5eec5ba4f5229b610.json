{
	"id": "3c84ca7b46ae99a5eec5ba4f5229b610",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CDS/PriceConsumerGoerli.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\n\ncontract PriceConsumerGoerli {\n  AggregatorV3Interface private oracle;\n\n  constructor(uint32 _assetType) {\n    if (_assetType == 0) {\n      oracle = AggregatorV3Interface(0xA39434A63A52E749F02807ae27335515BA4b07F7);\n    } else if (_assetType == 1) {\n      oracle = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\n    } else if (_assetType == 2) {\n      oracle = AggregatorV3Interface(0x48731cF7e84dc94C5f84577882c14Be11a5B7456);\n    }\n  }\n\n  /**\n   * Returns the latest price\n   */\n  function getCurrPrice() public view returns (uint256) {\n    (, int price, , , ) = oracle.latestRoundData();\n\n    return uint(price);\n  }\n  \n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumerGoerli.sol": {
				"PriceConsumerGoerli": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumerGoerli.sol\":135:779  contract PriceConsumerGoerli {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":209:592  constructor(uint32 _assetType) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":264:265  0 */\n  0x00\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":250:260  _assetType */\n  dup2\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":250:265  _assetType == 0 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":246:588  if (_assetType == 0) {... */\n  iszero\n  tag_6\n  jumpi\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":306:348  0xA39434A63A52E749F02807ae27335515BA4b07F7 */\n  0xa39434a63a52e749f02807ae27335515ba4b07f7\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":275:281  oracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":275:349  oracle = AggregatorV3Interface(0xA39434A63A52E749F02807ae27335515BA4b07F7) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":246:588  if (_assetType == 0) {... */\n  jump(tag_7)\ntag_6:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":380:381  1 */\n  0x01\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":366:376  _assetType */\n  dup2\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":366:381  _assetType == 1 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":362:588  if (_assetType == 1) {... */\n  iszero\n  tag_8\n  jumpi\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":422:464  0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e */\n  0xd4a33860578de61dbabdc8bfdb98fd742fa7028e\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":391:397  oracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":391:465  oracle = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":362:588  if (_assetType == 1) {... */\n  jump(tag_9)\ntag_8:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":496:497  2 */\n  0x02\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":482:492  _assetType */\n  dup2\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":482:497  _assetType == 2 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":478:588  if (_assetType == 2) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":538:580  0x48731cF7e84dc94C5f84577882c14Be11a5B7456 */\n  0x48731cf7e84dc94c5f84577882c14be11a5b7456\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":507:513  oracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":507:581  oracle = AggregatorV3Interface(0x48731cF7e84dc94C5f84577882c14Be11a5B7456) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":478:588  if (_assetType == 2) {... */\ntag_10:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":362:588  if (_assetType == 1) {... */\ntag_9:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":246:588  if (_assetType == 0) {... */\ntag_7:\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":209:592  constructor(uint32 _assetType) {... */\n  pop\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":135:779  contract PriceConsumerGoerli {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:427   */\ntag_15:\n    /* \"#utility.yul\":370:377   */\n  0x00\n    /* \"#utility.yul\":410:420   */\n  0xffffffff\n    /* \"#utility.yul\":403:408   */\n  dup3\n    /* \"#utility.yul\":399:421   */\n  and\n    /* \"#utility.yul\":388:421   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:427   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":433:553   */\ntag_16:\n    /* \"#utility.yul\":505:528   */\n  tag_24\n    /* \"#utility.yul\":522:527   */\n  dup2\n    /* \"#utility.yul\":505:528   */\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":498:503   */\n  dup2\n    /* \"#utility.yul\":495:529   */\n  eq\n    /* \"#utility.yul\":485:547   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":540:541   */\n  dup1\n    /* \"#utility.yul\":533:545   */\n  revert\n    /* \"#utility.yul\":485:547   */\ntag_25:\n    /* \"#utility.yul\":433:553   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":559:700   */\ntag_17:\n    /* \"#utility.yul\":615:620   */\n  0x00\n    /* \"#utility.yul\":646:652   */\n  dup2\n    /* \"#utility.yul\":640:653   */\n  mload\n    /* \"#utility.yul\":631:653   */\n  swap1\n  pop\n    /* \"#utility.yul\":662:694   */\n  tag_27\n    /* \"#utility.yul\":688:693   */\n  dup2\n    /* \"#utility.yul\":662:694   */\n  tag_16\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":559:700   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":706:1055   */\ntag_3:\n    /* \"#utility.yul\":775:781   */\n  0x00\n    /* \"#utility.yul\":824:826   */\n  0x20\n    /* \"#utility.yul\":812:821   */\n  dup3\n    /* \"#utility.yul\":803:810   */\n  dup5\n    /* \"#utility.yul\":799:822   */\n  sub\n    /* \"#utility.yul\":795:827   */\n  slt\n    /* \"#utility.yul\":792:911   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":830:909   */\n  tag_30\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":792:911   */\ntag_29:\n    /* \"#utility.yul\":950:951   */\n  0x00\n    /* \"#utility.yul\":975:1038   */\n  tag_31\n    /* \"#utility.yul\":1030:1037   */\n  dup5\n    /* \"#utility.yul\":1021:1027   */\n  dup3\n    /* \"#utility.yul\":1010:1019   */\n  dup6\n    /* \"#utility.yul\":1006:1028   */\n  add\n    /* \"#utility.yul\":975:1038   */\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":965:1038   */\n  swap2\n  pop\n    /* \"#utility.yul\":921:1048   */\n  pop\n    /* \"#utility.yul\":706:1055   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/PriceConsumerGoerli.sol\":135:779  contract PriceConsumerGoerli {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":135:779  contract PriceConsumerGoerli {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47fe810f\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":638:774  function getCurrPrice() public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":683:690  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":701:710  int price */\n      dup1\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":720:726  oracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":720:742  oracle.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":720:744  oracle.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_10\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_10:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":698:744  (, int price, , , ) = oracle.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":763:768  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":751:769  return uint(price) */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumerGoerli.sol\":638:774  function getCurrPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_13:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_14:\n        /* \"#utility.yul\":177:201   */\n      tag_29\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_13\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_31\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_14\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_16:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:874   */\n    tag_18:\n        /* \"#utility.yul\":805:812   */\n      0x00\n        /* \"#utility.yul\":845:867   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":838:843   */\n      dup3\n        /* \"#utility.yul\":834:868   */\n      and\n        /* \"#utility.yul\":823:868   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":880:1000   */\n    tag_19:\n        /* \"#utility.yul\":952:975   */\n      tag_37\n        /* \"#utility.yul\":969:974   */\n      dup2\n        /* \"#utility.yul\":952:975   */\n      tag_18\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":945:950   */\n      dup2\n        /* \"#utility.yul\":942:976   */\n      eq\n        /* \"#utility.yul\":932:994   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":932:994   */\n    tag_38:\n        /* \"#utility.yul\":880:1000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1006:1147   */\n    tag_20:\n        /* \"#utility.yul\":1062:1067   */\n      0x00\n        /* \"#utility.yul\":1093:1099   */\n      dup2\n        /* \"#utility.yul\":1087:1100   */\n      mload\n        /* \"#utility.yul\":1078:1100   */\n      swap1\n      pop\n        /* \"#utility.yul\":1109:1141   */\n      tag_40\n        /* \"#utility.yul\":1135:1140   */\n      dup2\n        /* \"#utility.yul\":1109:1141   */\n      tag_19\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1006:1147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1229   */\n    tag_21:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1218:1223   */\n      dup2\n        /* \"#utility.yul\":1207:1223   */\n      swap1\n      pop\n        /* \"#utility.yul\":1153:1229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1235:1355   */\n    tag_22:\n        /* \"#utility.yul\":1307:1330   */\n      tag_43\n        /* \"#utility.yul\":1324:1329   */\n      dup2\n        /* \"#utility.yul\":1307:1330   */\n      tag_21\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1300:1305   */\n      dup2\n        /* \"#utility.yul\":1297:1331   */\n      eq\n        /* \"#utility.yul\":1287:1349   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1345:1346   */\n      0x00\n        /* \"#utility.yul\":1342:1343   */\n      dup1\n        /* \"#utility.yul\":1335:1347   */\n      revert\n        /* \"#utility.yul\":1287:1349   */\n    tag_44:\n        /* \"#utility.yul\":1235:1355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1361:1502   */\n    tag_23:\n        /* \"#utility.yul\":1417:1422   */\n      0x00\n        /* \"#utility.yul\":1448:1454   */\n      dup2\n        /* \"#utility.yul\":1442:1455   */\n      mload\n        /* \"#utility.yul\":1433:1455   */\n      swap1\n      pop\n        /* \"#utility.yul\":1464:1496   */\n      tag_46\n        /* \"#utility.yul\":1490:1495   */\n      dup2\n        /* \"#utility.yul\":1464:1496   */\n      tag_22\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1361:1502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1508:1630   */\n    tag_24:\n        /* \"#utility.yul\":1581:1605   */\n      tag_48\n        /* \"#utility.yul\":1599:1604   */\n      dup2\n        /* \"#utility.yul\":1581:1605   */\n      tag_13\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1574:1579   */\n      dup2\n        /* \"#utility.yul\":1571:1606   */\n      eq\n        /* \"#utility.yul\":1561:1624   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1617:1618   */\n      dup1\n        /* \"#utility.yul\":1610:1622   */\n      revert\n        /* \"#utility.yul\":1561:1624   */\n    tag_49:\n        /* \"#utility.yul\":1508:1630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1636:1779   */\n    tag_25:\n        /* \"#utility.yul\":1693:1698   */\n      0x00\n        /* \"#utility.yul\":1724:1730   */\n      dup2\n        /* \"#utility.yul\":1718:1731   */\n      mload\n        /* \"#utility.yul\":1709:1731   */\n      swap1\n      pop\n        /* \"#utility.yul\":1740:1773   */\n      tag_51\n        /* \"#utility.yul\":1767:1772   */\n      dup2\n        /* \"#utility.yul\":1740:1773   */\n      tag_24\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1636:1779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1785:2756   */\n    tag_12:\n        /* \"#utility.yul\":1888:1894   */\n      0x00\n        /* \"#utility.yul\":1896:1902   */\n      dup1\n        /* \"#utility.yul\":1904:1910   */\n      0x00\n        /* \"#utility.yul\":1912:1918   */\n      dup1\n        /* \"#utility.yul\":1920:1926   */\n      0x00\n        /* \"#utility.yul\":1969:1972   */\n      0xa0\n        /* \"#utility.yul\":1957:1966   */\n      dup7\n        /* \"#utility.yul\":1948:1955   */\n      dup9\n        /* \"#utility.yul\":1944:1967   */\n      sub\n        /* \"#utility.yul\":1940:1973   */\n      slt\n        /* \"#utility.yul\":1937:2057   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1976:2055   */\n      tag_54\n      tag_16\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1937:2057   */\n    tag_53:\n        /* \"#utility.yul\":2096:2097   */\n      0x00\n        /* \"#utility.yul\":2121:2184   */\n      tag_55\n        /* \"#utility.yul\":2176:2183   */\n      dup9\n        /* \"#utility.yul\":2167:2173   */\n      dup3\n        /* \"#utility.yul\":2156:2165   */\n      dup10\n        /* \"#utility.yul\":2152:2174   */\n      add\n        /* \"#utility.yul\":2121:2184   */\n      tag_20\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2111:2184   */\n      swap6\n      pop\n        /* \"#utility.yul\":2067:2194   */\n      pop\n        /* \"#utility.yul\":2233:2235   */\n      0x20\n        /* \"#utility.yul\":2259:2322   */\n      tag_56\n        /* \"#utility.yul\":2314:2321   */\n      dup9\n        /* \"#utility.yul\":2305:2311   */\n      dup3\n        /* \"#utility.yul\":2294:2303   */\n      dup10\n        /* \"#utility.yul\":2290:2312   */\n      add\n        /* \"#utility.yul\":2259:2322   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2249:2322   */\n      swap5\n      pop\n        /* \"#utility.yul\":2204:2332   */\n      pop\n        /* \"#utility.yul\":2371:2373   */\n      0x40\n        /* \"#utility.yul\":2397:2461   */\n      tag_57\n        /* \"#utility.yul\":2453:2460   */\n      dup9\n        /* \"#utility.yul\":2444:2450   */\n      dup3\n        /* \"#utility.yul\":2433:2442   */\n      dup10\n        /* \"#utility.yul\":2429:2451   */\n      add\n        /* \"#utility.yul\":2397:2461   */\n      tag_25\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2387:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2342:2471   */\n      pop\n        /* \"#utility.yul\":2510:2512   */\n      0x60\n        /* \"#utility.yul\":2536:2600   */\n      tag_58\n        /* \"#utility.yul\":2592:2599   */\n      dup9\n        /* \"#utility.yul\":2583:2589   */\n      dup3\n        /* \"#utility.yul\":2572:2581   */\n      dup10\n        /* \"#utility.yul\":2568:2590   */\n      add\n        /* \"#utility.yul\":2536:2600   */\n      tag_25\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2526:2600   */\n      swap3\n      pop\n        /* \"#utility.yul\":2481:2610   */\n      pop\n        /* \"#utility.yul\":2649:2652   */\n      0x80\n        /* \"#utility.yul\":2676:2739   */\n      tag_59\n        /* \"#utility.yul\":2731:2738   */\n      dup9\n        /* \"#utility.yul\":2722:2728   */\n      dup3\n        /* \"#utility.yul\":2711:2720   */\n      dup10\n        /* \"#utility.yul\":2707:2729   */\n      add\n        /* \"#utility.yul\":2676:2739   */\n      tag_20\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2666:2739   */\n      swap2\n      pop\n        /* \"#utility.yul\":2620:2749   */\n      pop\n        /* \"#utility.yul\":1785:2756   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d716a5fb320b17c412db52d22a1444da35477736a8187f3fa72678f4e432c9cc64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_90": {
									"entryPoint": null,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32_fromMemory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1058:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:2",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:2",
														"type": ""
													}
												],
												"src": "334:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:2"
															},
															"nodeType": "YulIf",
															"src": "485:62:2"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:2",
														"type": ""
													}
												],
												"src": "433:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "621:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "631:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "640:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "631:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "688:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "662:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "662:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "662:32:2"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "599:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "607:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:2",
														"type": ""
													}
												],
												"src": "559:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "782:273:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "828:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "830:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "830:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "824:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:32:2"
															},
															"nodeType": "YulIf",
															"src": "792:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "921:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "940:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "965:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1010:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1021:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1006:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1006:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "975:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "965:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "763:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "775:6:2",
														"type": ""
													}
												],
												"src": "706:349:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610466380380610466833981810160405281019061003291906101af565b60008163ffffffff16141561009a5773a39434a63a52e749f02807ae27335515ba4b07f76000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610168565b60018163ffffffff1614156101025773d4a33860578de61dbabdc8bfdb98fd742fa7028e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610167565b60028163ffffffff161415610166577348731cf7e84dc94c5f84577882c14be11a5b74566000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b506101dc565b600080fd5b600063ffffffff82169050919050565b61018c81610173565b811461019757600080fd5b50565b6000815190506101a981610183565b92915050565b6000602082840312156101c5576101c461016e565b5b60006101d38482850161019a565b91505092915050565b61027b806101eb6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806347fe810f14610030575b600080fd5b61003861004e565b6040516100459190610106565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e091906101ca565b5050509150508091505090565b6000819050919050565b610100816100ed565b82525050565b600060208201905061011b60008301846100f7565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61014581610126565b811461015057600080fd5b50565b6000815190506101628161013c565b92915050565b6000819050919050565b61017b81610168565b811461018657600080fd5b50565b60008151905061019881610172565b92915050565b6101a7816100ed565b81146101b257600080fd5b50565b6000815190506101c48161019e565b92915050565b600080600080600060a086880312156101e6576101e5610121565b5b60006101f488828901610153565b955050602061020588828901610189565b9450506040610216888289016101b5565b9350506060610227888289016101b5565b925050608061023888828901610153565b915050929550929590935056fea2646970667358221220d716a5fb320b17c412db52d22a1444da35477736a8187f3fa72678f4e432c9cc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x466 CODESIZE SUB DUP1 PUSH2 0x466 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x9A JUMPI PUSH20 0xA39434A63A52E749F02807AE27335515BA4B07F7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x168 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x102 JUMPI PUSH20 0xD4A33860578DE61DBABDC8BFDB98FD742FA7028E PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x167 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x166 JUMPI PUSH20 0x48731CF7E84DC94C5F84577882C14BE11A5B7456 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C DUP2 PUSH2 0x173 JUMP JUMPDEST DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A9 DUP2 PUSH2 0x183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C4 PUSH2 0x16E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D3 DUP5 DUP3 DUP6 ADD PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B DUP1 PUSH2 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47FE810F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP2 PUSH2 0xED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x126 JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162 DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B DUP2 PUSH2 0x168 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x198 DUP2 PUSH2 0x172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A7 DUP2 PUSH2 0xED JUMP JUMPDEST DUP2 EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C4 DUP2 PUSH2 0x19E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP9 DUP3 DUP10 ADD PUSH2 0x153 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x205 DUP9 DUP3 DUP10 ADD PUSH2 0x189 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x216 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x227 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x238 DUP9 DUP3 DUP10 ADD PUSH2 0x153 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 AND 0xA5 0xFB ORIGIN SIGNEXTEND OR 0xC4 SLT 0xDB MSTORE 0xD2 0x2A EQ DIFFICULTY 0xDA CALLDATALOAD SELFBALANCE PUSH24 0x36A8187F3FA72678F4E432C9CC64736F6C634300080A0033 ",
							"sourceMap": "135:644:1:-:0;;;209:383;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;264:1;250:10;:15;;;246:342;;;306:42;275:6;;:74;;;;;;;;;;;;;;;;;;246:342;;;380:1;366:10;:15;;;362:226;;;422:42;391:6;;:74;;;;;;;;;;;;;;;;;;362:226;;;496:1;482:10;:15;;;478:110;;;538:42;507:6;;:74;;;;;;;;;;;;;;;;;;478:110;362:226;246:342;209:383;135:644;;88:117:2;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:141::-;615:5;646:6;640:13;631:22;;662:32;688:5;662:32;:::i;:::-;559:141;;;;:::o;706:349::-;775:6;824:2;812:9;803:7;799:23;795:32;792:119;;;830:79;;:::i;:::-;792:119;950:1;975:63;1030:7;1021:6;1010:9;1006:22;975:63;:::i;:::-;965:73;;921:127;706:349;;;;:::o;135:644:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getCurrPrice_108": {
									"entryPoint": 78,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2759:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "813:61:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "823:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "838:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:22:2",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:34:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "823:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "795:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "805:7:2",
														"type": ""
													}
												],
												"src": "769:105:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "978:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "945:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "969:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "952:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "952:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "942:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:42:2"
															},
															"nodeType": "YulIf",
															"src": "932:62:2"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "915:5:2",
														"type": ""
													}
												],
												"src": "880:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1093:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1087:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1078:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1135:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "1109:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1109:32:2"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1046:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1054:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:2",
														"type": ""
													}
												],
												"src": "1006:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1197:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1207:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1218:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1179:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1189:7:2",
														"type": ""
													}
												],
												"src": "1153:76:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1277:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1333:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1335:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1335:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1335:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1300:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1324:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "1307:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1307:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1297:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:42:2"
															},
															"nodeType": "YulIf",
															"src": "1287:62:2"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1270:5:2",
														"type": ""
													}
												],
												"src": "1235:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1433:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1448:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1442:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1433:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "1464:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1464:32:2"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1401:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1409:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:2",
														"type": ""
													}
												],
												"src": "1361:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1551:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1608:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1617:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1620:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1610:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1610:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1610:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1574:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1599:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1581:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1581:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1571:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:43:2"
															},
															"nodeType": "YulIf",
															"src": "1561:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:2",
														"type": ""
													}
												],
												"src": "1508:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1709:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1718:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1709:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1767:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1740:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1740:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1677:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1685:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1693:5:2",
														"type": ""
													}
												],
												"src": "1636:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:829:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1974:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1976:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1948:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1957:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1944:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1944:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:33:2"
															},
															"nodeType": "YulIf",
															"src": "1937:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2067:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2082:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2096:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2086:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2111:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2156:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2167:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2152:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2152:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2121:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2121:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2111:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2204:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2219:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2233:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2223:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2249:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2294:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2290:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2259:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2259:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2249:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2342:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2357:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2361:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2387:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2433:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2444:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2429:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2429:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2453:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2397:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2397:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2387:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2481:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2496:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2510:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2526:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2572:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2583:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2568:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2568:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2536:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2536:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2526:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2620:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2635:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2639:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2666:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2711:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2722:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2707:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2707:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2731:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2676:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2676:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2666:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1865:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1876:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1888:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1896:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1904:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1912:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1920:6:2",
														"type": ""
													}
												],
												"src": "1785:971:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806347fe810f14610030575b600080fd5b61003861004e565b6040516100459190610106565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e091906101ca565b5050509150508091505090565b6000819050919050565b610100816100ed565b82525050565b600060208201905061011b60008301846100f7565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61014581610126565b811461015057600080fd5b50565b6000815190506101628161013c565b92915050565b6000819050919050565b61017b81610168565b811461018657600080fd5b50565b60008151905061019881610172565b92915050565b6101a7816100ed565b81146101b257600080fd5b50565b6000815190506101c48161019e565b92915050565b600080600080600060a086880312156101e6576101e5610121565b5b60006101f488828901610153565b955050602061020588828901610189565b9450506040610216888289016101b5565b9350506060610227888289016101b5565b925050608061023888828901610153565b915050929550929590935056fea2646970667358221220d716a5fb320b17c412db52d22a1444da35477736a8187f3fa72678f4e432c9cc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47FE810F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP2 PUSH2 0xED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x126 JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162 DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B DUP2 PUSH2 0x168 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x198 DUP2 PUSH2 0x172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A7 DUP2 PUSH2 0xED JUMP JUMPDEST DUP2 EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C4 DUP2 PUSH2 0x19E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP9 DUP3 DUP10 ADD PUSH2 0x153 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x205 DUP9 DUP3 DUP10 ADD PUSH2 0x189 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x216 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x227 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x238 DUP9 DUP3 DUP10 ADD PUSH2 0x153 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 AND 0xA5 0xFB ORIGIN SIGNEXTEND OR 0xC4 SLT 0xDB MSTORE 0xD2 0x2A EQ DIFFICULTY 0xDA CALLDATALOAD SELFBALANCE PUSH24 0x36A8187F3FA72678F4E432C9CC64736F6C634300080A0033 ",
							"sourceMap": "135:644:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:136;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;683:7;701:9;720:6;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;698:46;;;;;;763:5;751:18;;;638:136;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:105;805:7;845:22;838:5;834:34;823:45;;769:105;;;:::o;880:120::-;952:23;969:5;952:23;:::i;:::-;945:5;942:34;932:62;;990:1;987;980:12;932:62;880:120;:::o;1006:141::-;1062:5;1093:6;1087:13;1078:22;;1109:32;1135:5;1109:32;:::i;:::-;1006:141;;;;:::o;1153:76::-;1189:7;1218:5;1207:16;;1153:76;;;:::o;1235:120::-;1307:23;1324:5;1307:23;:::i;:::-;1300:5;1297:34;1287:62;;1345:1;1342;1335:12;1287:62;1235:120;:::o;1361:141::-;1417:5;1448:6;1442:13;1433:22;;1464:32;1490:5;1464:32;:::i;:::-;1361:141;;;;:::o;1508:122::-;1581:24;1599:5;1581:24;:::i;:::-;1574:5;1571:35;1561:63;;1620:1;1617;1610:12;1561:63;1508:122;:::o;1636:143::-;1693:5;1724:6;1718:13;1709:22;;1740:33;1767:5;1740:33;:::i;:::-;1636:143;;;;:::o;1785:971::-;1888:6;1896;1904;1912;1920;1969:3;1957:9;1948:7;1944:23;1940:33;1937:120;;;1976:79;;:::i;:::-;1937:120;2096:1;2121:63;2176:7;2167:6;2156:9;2152:22;2121:63;:::i;:::-;2111:73;;2067:127;2233:2;2259:63;2314:7;2305:6;2294:9;2290:22;2259:63;:::i;:::-;2249:73;;2204:128;2371:2;2397:64;2453:7;2444:6;2433:9;2429:22;2397:64;:::i;:::-;2387:74;;2342:129;2510:2;2536:64;2592:7;2583:6;2572:9;2568:22;2536:64;:::i;:::-;2526:74;;2481:129;2649:3;2676:63;2731:7;2722:6;2711:9;2707:22;2676:63;:::i;:::-;2666:73;;2620:129;1785:971;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "127000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 265,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 250,
									"end": 265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 250,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 250,
									"end": 265,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 246,
									"end": 588,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 246,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 588,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "A39434A63A52E749F02807AE27335515BA4B07F7"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 275,
									"end": 349,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 275,
									"end": 349,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 275,
									"end": 349,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 275,
									"end": 349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 246,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 588,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 246,
									"end": 588,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 380,
									"end": 381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 366,
									"end": 381,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 366,
									"end": 381,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 366,
									"end": 381,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 362,
									"end": 588,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 362,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 362,
									"end": 588,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 422,
									"end": 464,
									"name": "PUSH",
									"source": 1,
									"value": "D4A33860578DE61DBABDC8BFDB98FD742FA7028E"
								},
								{
									"begin": 391,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 397,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 391,
									"end": 465,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 465,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 465,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 391,
									"end": 465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 362,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 362,
									"end": 588,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 362,
									"end": 588,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 362,
									"end": 588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 492,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 482,
									"end": 497,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 482,
									"end": 497,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 478,
									"end": 588,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 478,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 478,
									"end": 588,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 538,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "48731CF7E84DC94C5F84577882C14BE11A5B7456"
								},
								{
									"begin": 507,
									"end": 513,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 507,
									"end": 581,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 507,
									"end": 581,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 507,
									"end": 581,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 507,
									"end": 581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 478,
									"end": 588,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 478,
									"end": 588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 362,
									"end": 588,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 362,
									"end": 588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 246,
									"end": 588,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 209,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 427,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 427,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 370,
									"end": 377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 403,
									"end": 408,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 399,
									"end": 421,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 388,
									"end": 421,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 388,
									"end": 421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 427,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 427,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 427,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 427,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 433,
									"end": 553,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 433,
									"end": 553,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 505,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 522,
									"end": 527,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 505,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 505,
									"end": 528,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 505,
									"end": 528,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 505,
									"end": 528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 498,
									"end": 503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 495,
									"end": 529,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 485,
									"end": 547,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 485,
									"end": 547,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 541,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 545,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 485,
									"end": 547,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 485,
									"end": 547,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 433,
									"end": 553,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 433,
									"end": 553,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 559,
									"end": 700,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 559,
									"end": 700,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 615,
									"end": 620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 640,
									"end": 653,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 631,
									"end": 653,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 631,
									"end": 653,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 662,
									"end": 694,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 662,
									"end": 694,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 700,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 700,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 700,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 700,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 700,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 775,
									"end": 781,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 812,
									"end": 821,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 803,
									"end": 810,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 799,
									"end": 822,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 795,
									"end": 827,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 792,
									"end": 911,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 792,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 792,
									"end": 911,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 830,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 830,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 830,
									"end": 909,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 830,
									"end": 909,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 830,
									"end": 909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 792,
									"end": 911,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 792,
									"end": 911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 950,
									"end": 951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1030,
									"end": 1037,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1027,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1010,
									"end": 1019,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 975,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 975,
									"end": 1038,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 975,
									"end": 1038,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 975,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 965,
									"end": 1038,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 965,
									"end": 1038,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1048,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 706,
									"end": 1055,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 135,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d716a5fb320b17c412db52d22a1444da35477736a8187f3fa72678f4e432c9cc64736f6c634300080a0033",
									".code": [
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "47FE810F"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "FEAF968C"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 720,
											"end": 744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 874,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 769,
											"end": 874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 805,
											"end": 812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 834,
											"end": 868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 823,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 823,
											"end": 868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 874,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 880,
											"end": 1000,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 880,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 969,
											"end": 974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 952,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 952,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 952,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 976,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 932,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 932,
											"end": 994,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 932,
											"end": 994,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 932,
											"end": 994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 1000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 1000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1229,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1235,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1331,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1287,
											"end": 1349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1287,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1355,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1490,
											"end": 1495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1502,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1508,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1581,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1581,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1581,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1606,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1561,
											"end": 1624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1624,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1561,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1740,
											"end": 1773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1740,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1955,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2057,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1937,
											"end": 2057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1976,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1976,
											"end": 2055,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1976,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1937,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2184,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2121,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2184,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2322,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2450,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2397,
											"end": 2461,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2397,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2461,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2600,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2676,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2731,
											"end": 2738,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2720,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2739,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2676,
											"end": 2739,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2676,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2739,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2756,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrPrice()": "47fe810f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrPrice()\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumerGoerli.sol\":\"PriceConsumerGoerli\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"contracts/CDS/PriceConsumerGoerli.sol\":{\"keccak256\":\"0x5d5b38b68af065c7c5f7714e6e3c010f435206bc4ddb074b19914869dc1a1176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://480344969a240437bd7b1f8ad5144b5879eda1a2e629ad72d283a0d69738c59b\",\"dweb:/ipfs/QmZ2cam4LJVoaJv91W8b39m4cxjt3iGrfcx7sAuCYBpB7c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 51,
								"contract": "contracts/CDS/PriceConsumerGoerli.sol:PriceConsumerGoerli",
								"label": "oracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							}
						],
						"types": {
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getCurrPrice()": {
								"notice": "Returns the latest price"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "296:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "399:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "391:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "424:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "416:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "448:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "441:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:129:0"
									},
									"scope": 45,
									"src": "267:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "483:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "594:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "586:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "619:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "643:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:129:0"
									},
									"scope": 45,
									"src": "474:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:610:0",
							"usedErrors": []
						}
					],
					"src": "32:636:0"
				},
				"id": 0
			},
			"contracts/CDS/PriceConsumerGoerli.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumerGoerli.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"PriceConsumerGoerli": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 46,
							"src": "57:76:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumerGoerli",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109
							],
							"name": "PriceConsumerGoerli",
							"nameLocation": "144:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "198:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "168:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 50,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 49,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "168:21:1"
										},
										"referencedDeclaration": 45,
										"src": "168:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "240:352:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 56,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "250:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "264:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "250:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "366:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "380:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "366:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 76,
																"name": "_assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "482:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "496:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "482:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 86,
														"nodeType": "IfStatement",
														"src": "478:110:1",
														"trueBody": {
															"id": 85,
															"nodeType": "Block",
															"src": "499:89:1",
															"statements": [
																{
																	"expression": {
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 79,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "507:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"hexValue": "307834383733316346376538346463393443356638343537373838326331344265313161354237343536",
																					"id": 81,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "538:42:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"value": "0x48731cF7e84dc94C5f84577882c14Be11a5B7456"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 80,
																				"name": "AggregatorV3Interface",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "516:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																					"typeString": "type(contract AggregatorV3Interface)"
																				}
																			},
																			"id": 82,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "516:65:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"src": "507:74:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 84,
																	"nodeType": "ExpressionStatement",
																	"src": "507:74:1"
																}
															]
														}
													},
													"id": 87,
													"nodeType": "IfStatement",
													"src": "362:226:1",
													"trueBody": {
														"id": 75,
														"nodeType": "Block",
														"src": "383:89:1",
														"statements": [
															{
																"expression": {
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 69,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "391:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "307844346133333836303537384465363144424162446338424664623938464437343266413730323865",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "422:42:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"value": "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 70,
																			"name": "AggregatorV3Interface",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "400:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																				"typeString": "type(contract AggregatorV3Interface)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "400:65:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"src": "391:74:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"id": 74,
																"nodeType": "ExpressionStatement",
																"src": "391:74:1"
															}
														]
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "246:342:1",
												"trueBody": {
													"id": 65,
													"nodeType": "Block",
													"src": "267:89:1",
													"statements": [
														{
															"expression": {
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "275:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "307841333934333441363341353245373439463032383037616532373333353531354241346230374637",
																			"id": 61,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "306:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"value": "0xA39434A63A52E749F02807ae27335515BA4b07F7"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 60,
																		"name": "AggregatorV3Interface",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "284:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																			"typeString": "type(contract AggregatorV3Interface)"
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "284:65:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"src": "275:74:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 64,
															"nodeType": "ExpressionStatement",
															"src": "275:74:1"
														}
													]
												}
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "228:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "221:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 52,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "221:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:19:1"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:0:1"
									},
									"scope": 109,
									"src": "209:383:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "692:82:1",
										"statements": [
											{
												"assignments": [
													null,
													97,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "705:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "701:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 96,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "701:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 101,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 98,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "720:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "720:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "758:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 102,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "758:4:1",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 106,
												"nodeType": "Return",
												"src": "751:18:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "596:39:1",
										"text": " Returns the latest price"
									},
									"functionSelector": "47fe810f",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "647:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "683:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:9:1"
									},
									"scope": 109,
									"src": "638:136:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "135:644:1",
							"usedErrors": []
						}
					],
					"src": "32:748:1"
				},
				"id": 1
			}
		}
	}
}