{
	"id": "14503d417bf4a435ca9dc75f0d7b4cc0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CDS/CDS.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport './PriceConsumer.sol';\nimport '../libs/LibSwap.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n// PriceConsumberGoerli({assetType})\ncontract CDS is Ownable, PriceConsumer(0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5) {\n  using LibSwap for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  enum Status {\n    inactive,\n    pending,\n    active,\n    claimed,\n    expired\n  }\n  Status public status;\n\n  uint256 public initAssetPrice;\n  uint256 public claimPrice;\n  uint256 public liquidationPrice;\n  uint256 public premium;\n  uint256 public sellerDeposit;\n  uint256 public amountOfAsset;\n  address private buyer;\n  address private seller;\n  uint32 public rounds;\n  uint32 public totalRounds;\n  uint32 public assetType;\n\n  constructor(\n    uint256 _initAssetPrice,\n    uint256 _claimPrice,\n    uint256 _liquidationPrice,\n    uint256 _premium,\n    uint256 _sellerDeposit,\n    uint32 _rounds,\n    uint32 _assetType\n  ) {\n    initAssetPrice = _initAssetPrice;\n    claimPrice = _claimPrice;\n    liquidationPrice = _liquidationPrice;\n    premium = _premium;\n    sellerDeposit = _sellerDeposit;\n    rounds = _rounds;\n    totalRounds = _rounds;\n    amountOfAsset = initAssetPrice.calcAmountOfAsset(\n      liquidationPrice,\n      sellerDeposit\n    );\n    require(\n      _assetType == 0 || _assetType == 1 || _assetType == 2,\n      'BTC:0, ETH:1, LINK:2'\n    );\n    assetType = _assetType;\n\n    buyer = address(0);\n    seller = address(0);\n    status = Status.pending;\n  }\n\n  function getPrices() public view returns (uint256[5] memory) {\n    return [\n      initAssetPrice,\n      claimPrice,\n      liquidationPrice,\n      premium,\n      sellerDeposit\n    ];\n  }\n\n  function getBuyer() public view returns (address) {\n    return buyer;\n  }\n\n  function getSeller() public view returns (address) {\n    return seller;\n  }\n\n  function getClaimReward() public view returns (uint256) {\n    uint256 currPrice = getCurrPrice(assetType);\n    if (claimPrice < currPrice) {\n      return 0;\n    }\n    return\n      sellerDeposit.calcClaimReward(\n        liquidationPrice,\n        initAssetPrice,\n        currPrice\n      );\n  }\n\n  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {\n    initAssetPrice = _initAssetPrice;\n    return initAssetPrice;\n  }\n\n  function setStatus(Status _status) public onlyOwner returns (Status) {\n    status = _status;\n    return status;\n  }\n\n  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {\n    _isBuyer ? setBuyer(_participants) : setSeller(_participants);\n  }\n\n  function setBuyer(address _buyer) public onlyOwner returns (address) {\n    buyer = _buyer;\n    return buyer;\n  }\n\n  function setSeller(address _seller) public onlyOwner returns (address) {\n    seller = _seller;\n    return seller;\n  }\n\n  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {\n    rounds = _rounds;\n    return rounds;\n  }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/libs/LibSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\nlibrary LibSwap {\n  using SafeMath for uint256;\n\n  function calcClaimReward(\n    uint256 _deposit,\n    uint256 _liquidation,\n    uint256 _initial,\n    uint256 _current\n  ) internal pure returns (uint256) {\n    uint256 claimReward;\n    if (_liquidation >= _current) {\n      claimReward = _deposit;\n    } else {\n      uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation));\n      claimReward = numOfAsset.mul(_initial.sub(_current));\n    }\n    return claimReward;\n  }\n\n  function calcAmountOfAsset(\n    uint256 _initial,\n    uint256 _liquidation,\n    uint256 _sellerDeposit\n  ) internal pure returns (uint256) {\n    return _sellerDeposit.div(_initial.sub(_liquidation));\n  }\n}\n"
			},
			"contracts/CDS/PriceConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../Oracle/PriceOracleMock.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n\ncontract PriceConsumer {\n  using SafeMath for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  constructor(address _address) {\n    priceOracle = PriceOracleMock(_address);\n  }\n\n  function getCurrPrice(uint32 _assetType) public view returns (uint256) {\n    uint256 price;\n    if (_assetType == 0) {\n      price = priceOracle.btcPrice().div(10 ** 8);\n    } else if (_assetType == 1) {\n      price = priceOracle.ethPrice().div(10 ** 8);\n    } else if (_assetType == 2) {\n      price = priceOracle.linkPrice().div(10 ** 8);\n    }\n    return price;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract PriceOracleMock {\n  uint256 public btcPrice;\n  uint256 public ethPrice;\n  uint256 public linkPrice;\n\n  constructor(\n  ) {\n    btcPrice = 2500000000000;\n    ethPrice = 160000000000;\n    linkPrice = 750000000;\n  }\n\n  function setBTCPrice(uint256 _price) public returns (uint256) {\n    btcPrice = _price;\n    return btcPrice;\n  }\n\n  function setETHPrice(uint256 _price) public returns (uint256) {\n    ethPrice = _price;\n    return ethPrice;\n  }\n\n  function setLinkPrice(uint256 _price) public returns (uint256) {\n    linkPrice = _price;\n    return linkPrice;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/CDS.sol": {
				"CDS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_claimPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidationPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellerDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "amountOfAsset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetType",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrices",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premium",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellerDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								}
							],
							"name": "setBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								}
							],
							"name": "setInitAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_participants",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBuyer",
									"type": "bool"
								}
							],
							"name": "setParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								}
							],
							"name": "setRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "setSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "setStatus",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/CDS.sol\":208:2957  contract CDS is Ownable, PriceConsumer(0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/CDS.sol\":793:1533  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/CDS.sol\":247:289  0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5 */\n  0xf2a3fa0266a0feffa87da45f0d3c45ac66fe05c5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x01\n  0x00\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/CDS.sol\":1010:1025  _initAssetPrice */\n  dup7\n    /* \"contracts/CDS/CDS.sol\":993:1007  initAssetPrice */\n  0x03\n    /* \"contracts/CDS/CDS.sol\":993:1025  initAssetPrice = _initAssetPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1044:1055  _claimPrice */\n  dup6\n    /* \"contracts/CDS/CDS.sol\":1031:1041  claimPrice */\n  0x04\n    /* \"contracts/CDS/CDS.sol\":1031:1055  claimPrice = _claimPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1080:1097  _liquidationPrice */\n  dup5\n    /* \"contracts/CDS/CDS.sol\":1061:1077  liquidationPrice */\n  0x05\n    /* \"contracts/CDS/CDS.sol\":1061:1097  liquidationPrice = _liquidationPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1113:1121  _premium */\n  dup4\n    /* \"contracts/CDS/CDS.sol\":1103:1110  premium */\n  0x06\n    /* \"contracts/CDS/CDS.sol\":1103:1121  premium = _premium */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1143:1157  _sellerDeposit */\n  dup3\n    /* \"contracts/CDS/CDS.sol\":1127:1140  sellerDeposit */\n  0x07\n    /* \"contracts/CDS/CDS.sol\":1127:1157  sellerDeposit = _sellerDeposit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1172:1179  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1163:1169  rounds */\n  0x0a\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1163:1179  rounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1199:1206  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1185:1196  totalRounds */\n  0x0a\n  0x18\n    /* \"contracts/CDS/CDS.sol\":1185:1206  totalRounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1228:1311  initAssetPrice.calcAmountOfAsset(... */\n  tag_14\n    /* \"contracts/CDS/CDS.sol\":1268:1284  liquidationPrice */\n  sload(0x05)\n    /* \"contracts/CDS/CDS.sol\":1292:1305  sellerDeposit */\n  sload(0x07)\n    /* \"contracts/CDS/CDS.sol\":1228:1242  initAssetPrice */\n  sload(0x03)\n    /* \"contracts/CDS/CDS.sol\":1228:1260  initAssetPrice.calcAmountOfAsset */\n  or(tag_0_117, shl(0x20, tag_15))\n  swap1\n    /* \"contracts/CDS/CDS.sol\":1228:1311  initAssetPrice.calcAmountOfAsset(... */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/CDS/CDS.sol\":1212:1225  amountOfAsset */\n  0x08\n    /* \"contracts/CDS/CDS.sol\":1212:1311  amountOfAsset = initAssetPrice.calcAmountOfAsset(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1346:1347  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1332:1342  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1332:1347  _assetType == 0 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1332:1366  _assetType == 0 || _assetType == 1 */\n  dup1\n  tag_16\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1365:1366  1 */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1351:1361  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1351:1366  _assetType == 1 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1332:1366  _assetType == 0 || _assetType == 1 */\ntag_16:\n    /* \"contracts/CDS/CDS.sol\":1332:1385  _assetType == 0 || _assetType == 1 || _assetType == 2 */\n  dup1\n  tag_17\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1384:1385  2 */\n  0x02\n    /* \"contracts/CDS/CDS.sol\":1370:1380  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1370:1385  _assetType == 2 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1332:1385  _assetType == 0 || _assetType == 1 || _assetType == 2 */\ntag_17:\n    /* \"contracts/CDS/CDS.sol\":1317:1421  require(... */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CDS/CDS.sol\":1439:1449  _assetType */\n  dup1\n    /* \"contracts/CDS/CDS.sol\":1427:1436  assetType */\n  0x0a\n  0x1c\n    /* \"contracts/CDS/CDS.sol\":1427:1449  assetType = _assetType */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1472:1473  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1456:1461  buyer */\n  0x09\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1456:1474  buyer = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1497:1498  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1480:1486  seller */\n  0x0a\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1480:1499  seller = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1514:1528  Status.pending */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1505:1511  status */\n  0x02\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1505:1528  status = Status.pending */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\ntag_21:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":793:1533  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CDS/CDS.sol\":208:2957  contract CDS is Ownable, PriceConsumer(0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5) {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\ntag_15:\n    /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n  0x00\n    /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n  tag_28\n    /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n  tag_29\n    /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n  dup5\n    /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n  dup7\n    /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n  or(tag_0_118, shl(0x20, tag_30))\n  swap1\n    /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n  dup4\n    /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n  or(tag_0_119, shl(0x20, tag_31))\n  swap1\n    /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n  swap1\n  pop\n    /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_39:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_41:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_42:\n    /* \"#utility.yul\":490:514   */\n  tag_58\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_41\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_59:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_43:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_61\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_42\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:787   */\ntag_44:\n    /* \"#utility.yul\":730:737   */\n  0x00\n    /* \"#utility.yul\":770:780   */\n  0xffffffff\n    /* \"#utility.yul\":763:768   */\n  dup3\n    /* \"#utility.yul\":759:781   */\n  and\n    /* \"#utility.yul\":748:781   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":793:913   */\ntag_45:\n    /* \"#utility.yul\":865:888   */\n  tag_64\n    /* \"#utility.yul\":882:887   */\n  dup2\n    /* \"#utility.yul\":865:888   */\n  tag_44\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":858:863   */\n  dup2\n    /* \"#utility.yul\":855:889   */\n  eq\n    /* \"#utility.yul\":845:907   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":903:904   */\n  0x00\n    /* \"#utility.yul\":900:901   */\n  dup1\n    /* \"#utility.yul\":893:905   */\n  revert\n    /* \"#utility.yul\":845:907   */\ntag_65:\n    /* \"#utility.yul\":793:913   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":919:1060   */\ntag_46:\n    /* \"#utility.yul\":975:980   */\n  0x00\n    /* \"#utility.yul\":1006:1012   */\n  dup2\n    /* \"#utility.yul\":1000:1013   */\n  mload\n    /* \"#utility.yul\":991:1013   */\n  swap1\n  pop\n    /* \"#utility.yul\":1022:1054   */\n  tag_67\n    /* \"#utility.yul\":1048:1053   */\n  dup2\n    /* \"#utility.yul\":1022:1054   */\n  tag_45\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":919:1060   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:2353   */\ntag_3:\n    /* \"#utility.yul\":1188:1194   */\n  0x00\n    /* \"#utility.yul\":1196:1202   */\n  dup1\n    /* \"#utility.yul\":1204:1210   */\n  0x00\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1220:1226   */\n  0x00\n    /* \"#utility.yul\":1228:1234   */\n  dup1\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1285:1288   */\n  0xe0\n    /* \"#utility.yul\":1273:1282   */\n  dup9\n    /* \"#utility.yul\":1264:1271   */\n  dup11\n    /* \"#utility.yul\":1260:1283   */\n  sub\n    /* \"#utility.yul\":1256:1289   */\n  slt\n    /* \"#utility.yul\":1253:1373   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1292:1371   */\n  tag_70\n  tag_39\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1253:1373   */\ntag_69:\n    /* \"#utility.yul\":1412:1413   */\n  0x00\n    /* \"#utility.yul\":1437:1501   */\n  tag_71\n    /* \"#utility.yul\":1493:1500   */\n  dup11\n    /* \"#utility.yul\":1484:1490   */\n  dup3\n    /* \"#utility.yul\":1473:1482   */\n  dup12\n    /* \"#utility.yul\":1469:1491   */\n  add\n    /* \"#utility.yul\":1437:1501   */\n  tag_43\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1427:1501   */\n  swap8\n  pop\n    /* \"#utility.yul\":1383:1511   */\n  pop\n    /* \"#utility.yul\":1550:1552   */\n  0x20\n    /* \"#utility.yul\":1576:1640   */\n  tag_72\n    /* \"#utility.yul\":1632:1639   */\n  dup11\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1612:1621   */\n  dup12\n    /* \"#utility.yul\":1608:1630   */\n  add\n    /* \"#utility.yul\":1576:1640   */\n  tag_43\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1566:1640   */\n  swap7\n  pop\n    /* \"#utility.yul\":1521:1650   */\n  pop\n    /* \"#utility.yul\":1689:1691   */\n  0x40\n    /* \"#utility.yul\":1715:1779   */\n  tag_73\n    /* \"#utility.yul\":1771:1778   */\n  dup11\n    /* \"#utility.yul\":1762:1768   */\n  dup3\n    /* \"#utility.yul\":1751:1760   */\n  dup12\n    /* \"#utility.yul\":1747:1769   */\n  add\n    /* \"#utility.yul\":1715:1779   */\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1705:1779   */\n  swap6\n  pop\n    /* \"#utility.yul\":1660:1789   */\n  pop\n    /* \"#utility.yul\":1828:1830   */\n  0x60\n    /* \"#utility.yul\":1854:1918   */\n  tag_74\n    /* \"#utility.yul\":1910:1917   */\n  dup11\n    /* \"#utility.yul\":1901:1907   */\n  dup3\n    /* \"#utility.yul\":1890:1899   */\n  dup12\n    /* \"#utility.yul\":1886:1908   */\n  add\n    /* \"#utility.yul\":1854:1918   */\n  tag_43\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1844:1918   */\n  swap5\n  pop\n    /* \"#utility.yul\":1799:1928   */\n  pop\n    /* \"#utility.yul\":1967:1970   */\n  0x80\n    /* \"#utility.yul\":1994:2058   */\n  tag_75\n    /* \"#utility.yul\":2050:2057   */\n  dup11\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2030:2039   */\n  dup12\n    /* \"#utility.yul\":2026:2048   */\n  add\n    /* \"#utility.yul\":1994:2058   */\n  tag_43\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1984:2058   */\n  swap4\n  pop\n    /* \"#utility.yul\":1938:2068   */\n  pop\n    /* \"#utility.yul\":2107:2110   */\n  0xa0\n    /* \"#utility.yul\":2134:2197   */\n  tag_76\n    /* \"#utility.yul\":2189:2196   */\n  dup11\n    /* \"#utility.yul\":2180:2186   */\n  dup3\n    /* \"#utility.yul\":2169:2178   */\n  dup12\n    /* \"#utility.yul\":2165:2187   */\n  add\n    /* \"#utility.yul\":2134:2197   */\n  tag_46\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2124:2197   */\n  swap3\n  pop\n    /* \"#utility.yul\":2078:2207   */\n  pop\n    /* \"#utility.yul\":2246:2249   */\n  0xc0\n    /* \"#utility.yul\":2273:2336   */\n  tag_77\n    /* \"#utility.yul\":2328:2335   */\n  dup11\n    /* \"#utility.yul\":2319:2325   */\n  dup3\n    /* \"#utility.yul\":2308:2317   */\n  dup12\n    /* \"#utility.yul\":2304:2326   */\n  add\n    /* \"#utility.yul\":2273:2336   */\n  tag_46\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2263:2336   */\n  swap2\n  pop\n    /* \"#utility.yul\":2217:2346   */\n  pop\n    /* \"#utility.yul\":1066:2353   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2359:2528   */\ntag_47:\n    /* \"#utility.yul\":2443:2454   */\n  0x00\n    /* \"#utility.yul\":2477:2483   */\n  dup3\n    /* \"#utility.yul\":2472:2475   */\n  dup3\n    /* \"#utility.yul\":2465:2484   */\n  mstore\n    /* \"#utility.yul\":2517:2521   */\n  0x20\n    /* \"#utility.yul\":2512:2515   */\n  dup3\n    /* \"#utility.yul\":2508:2522   */\n  add\n    /* \"#utility.yul\":2493:2522   */\n  swap1\n  pop\n    /* \"#utility.yul\":2359:2528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2534:2704   */\ntag_48:\n    /* \"#utility.yul\":2674:2696   */\n  0x4254433a302c204554483a312c204c494e4b3a32000000000000000000000000\n    /* \"#utility.yul\":2670:2671   */\n  0x00\n    /* \"#utility.yul\":2662:2668   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2651:2697   */\n  mstore\n    /* \"#utility.yul\":2534:2704   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2710:3076   */\ntag_49:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2873:2940   */\n  tag_81\n    /* \"#utility.yul\":2937:2939   */\n  0x14\n    /* \"#utility.yul\":2932:2935   */\n  dup4\n    /* \"#utility.yul\":2873:2940   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2866:2940   */\n  swap2\n  pop\n    /* \"#utility.yul\":2949:3042   */\n  tag_82\n    /* \"#utility.yul\":3038:3041   */\n  dup3\n    /* \"#utility.yul\":2949:3042   */\n  tag_48\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3067:3069   */\n  0x20\n    /* \"#utility.yul\":3062:3065   */\n  dup3\n    /* \"#utility.yul\":3058:3070   */\n  add\n    /* \"#utility.yul\":3051:3070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2710:3076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3082:3501   */\ntag_20:\n    /* \"#utility.yul\":3248:3252   */\n  0x00\n    /* \"#utility.yul\":3286:3288   */\n  0x20\n    /* \"#utility.yul\":3275:3284   */\n  dup3\n    /* \"#utility.yul\":3271:3289   */\n  add\n    /* \"#utility.yul\":3263:3289   */\n  swap1\n  pop\n    /* \"#utility.yul\":3335:3344   */\n  dup2\n    /* \"#utility.yul\":3329:3333   */\n  dup2\n    /* \"#utility.yul\":3325:3345   */\n  sub\n    /* \"#utility.yul\":3321:3322   */\n  0x00\n    /* \"#utility.yul\":3310:3319   */\n  dup4\n    /* \"#utility.yul\":3306:3323   */\n  add\n    /* \"#utility.yul\":3299:3346   */\n  mstore\n    /* \"#utility.yul\":3363:3494   */\n  tag_84\n    /* \"#utility.yul\":3489:3493   */\n  dup2\n    /* \"#utility.yul\":3363:3494   */\n  tag_49\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3355:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3082:3501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3507:3687   */\ntag_23:\n    /* \"#utility.yul\":3555:3632   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3545:3633   */\n  mstore\n    /* \"#utility.yul\":3652:3656   */\n  0x21\n    /* \"#utility.yul\":3649:3650   */\n  0x04\n    /* \"#utility.yul\":3642:3657   */\n  mstore\n    /* \"#utility.yul\":3676:3680   */\n  0x24\n    /* \"#utility.yul\":3673:3674   */\n  0x00\n    /* \"#utility.yul\":3666:3681   */\n  revert\n    /* \"#utility.yul\":3693:3873   */\ntag_50:\n    /* \"#utility.yul\":3741:3818   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3738:3739   */\n  0x00\n    /* \"#utility.yul\":3731:3819   */\n  mstore\n    /* \"#utility.yul\":3838:3842   */\n  0x11\n    /* \"#utility.yul\":3835:3836   */\n  0x04\n    /* \"#utility.yul\":3828:3843   */\n  mstore\n    /* \"#utility.yul\":3862:3866   */\n  0x24\n    /* \"#utility.yul\":3859:3860   */\n  0x00\n    /* \"#utility.yul\":3852:3867   */\n  revert\n    /* \"#utility.yul\":3879:4070   */\ntag_34:\n    /* \"#utility.yul\":3919:3923   */\n  0x00\n    /* \"#utility.yul\":3939:3959   */\n  tag_88\n    /* \"#utility.yul\":3957:3958   */\n  dup3\n    /* \"#utility.yul\":3939:3959   */\n  tag_41\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3934:3959   */\n  swap2\n  pop\n    /* \"#utility.yul\":3973:3993   */\n  tag_89\n    /* \"#utility.yul\":3991:3992   */\n  dup4\n    /* \"#utility.yul\":3973:3993   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3968:3993   */\n  swap3\n  pop\n    /* \"#utility.yul\":4012:4013   */\n  dup3\n    /* \"#utility.yul\":4009:4010   */\n  dup3\n    /* \"#utility.yul\":4006:4014   */\n  lt\n    /* \"#utility.yul\":4003:4037   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4017:4035   */\n  tag_91\n  tag_50\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4003:4037   */\ntag_90:\n    /* \"#utility.yul\":4062:4063   */\n  dup3\n    /* \"#utility.yul\":4059:4060   */\n  dup3\n    /* \"#utility.yul\":4055:4064   */\n  sub\n    /* \"#utility.yul\":4047:4064   */\n  swap1\n  pop\n    /* \"#utility.yul\":3879:4070   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4076:4256   */\ntag_51:\n    /* \"#utility.yul\":4124:4201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4121:4122   */\n  0x00\n    /* \"#utility.yul\":4114:4202   */\n  mstore\n    /* \"#utility.yul\":4221:4225   */\n  0x12\n    /* \"#utility.yul\":4218:4219   */\n  0x04\n    /* \"#utility.yul\":4211:4226   */\n  mstore\n    /* \"#utility.yul\":4245:4249   */\n  0x24\n    /* \"#utility.yul\":4242:4243   */\n  0x00\n    /* \"#utility.yul\":4235:4250   */\n  revert\n    /* \"#utility.yul\":4262:4447   */\ntag_37:\n    /* \"#utility.yul\":4302:4303   */\n  0x00\n    /* \"#utility.yul\":4319:4339   */\n  tag_94\n    /* \"#utility.yul\":4337:4338   */\n  dup3\n    /* \"#utility.yul\":4319:4339   */\n  tag_41\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4314:4339   */\n  swap2\n  pop\n    /* \"#utility.yul\":4353:4373   */\n  tag_95\n    /* \"#utility.yul\":4371:4372   */\n  dup4\n    /* \"#utility.yul\":4353:4373   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4348:4373   */\n  swap3\n  pop\n    /* \"#utility.yul\":4392:4393   */\n  dup3\n    /* \"#utility.yul\":4382:4417   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4397:4415   */\n  tag_97\n  tag_51\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4382:4417   */\ntag_96:\n    /* \"#utility.yul\":4439:4440   */\n  dup3\n    /* \"#utility.yul\":4436:4437   */\n  dup3\n    /* \"#utility.yul\":4432:4441   */\n  div\n    /* \"#utility.yul\":4427:4441   */\n  swap1\n  pop\n    /* \"#utility.yul\":4262:4447   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/CDS.sol\":208:2957  contract CDS is Ownable, PriceConsumer(0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5) {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/CDS.sol\":208:2957  contract CDS is Ownable, PriceConsumer(0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3f09ad6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd2895e93\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd2895e93\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdbd0e1b6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe0a73a93\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe99d2866\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf26cc58e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0xa3f09ad6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6fc2d5f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbab215f8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbd9a548b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbef904e3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcbed2449\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x762db7ee\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x86be75b7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8a568299\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa2e800ad\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x15d655c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e49d78b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fe3347a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4c1786ea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x603daf9a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/CDS.sol\":507:532  uint256 public claimPrice */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":449:469  Status public status */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2328:2443  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":765:788  uint32 public assetType */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":597:625  uint256 public sellerDeposit */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1726:1799  function getBuyer() public view returns (address) {... */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/CDS/CDS.sol\":629:657  uint256 public amountOfAsset */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":474:503  uint256 public initAssetPrice */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":736:761  uint32 public totalRounds */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":712:732  uint32 public rounds */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2603:2715  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":536:567  uint256 public liquidationPrice */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2447:2599  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/CDS/CDS.sol\":1537:1722  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2177:2324  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2840:2955  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1803:1878  function getSeller() public view returns (address) {... */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":571:593  uint256 public premium */\n    tag_23:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2719:2836  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_24:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1882:2173  function getClaimReward() public view returns (uint256) {... */\n    tag_25:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/CDS/CDS.sol\":507:532  uint256 public claimPrice */\n    tag_31:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":449:469  Status public status */\n    tag_35:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2328:2443  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n    tag_41:\n        /* \"contracts/CDS/CDS.sol\":2389:2395  Status */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/CDS/CDS.sol\":2412:2419  _status */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2403:2409  status */\n      0x02\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2403:2419  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_124\n      jumpi\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n    tag_124:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2432:2438  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":2425:2438  return status */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2328:2443  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":765:788  uint32 public assetType */\n    tag_44:\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":597:625  uint256 public sellerDeposit */\n    tag_48:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1726:1799  function getBuyer() public view returns (address) {... */\n    tag_51:\n        /* \"contracts/CDS/CDS.sol\":1767:1774  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1789:1794  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1782:1794  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1726:1799  function getBuyer() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":629:657  uint256 public amountOfAsset */\n    tag_57:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":474:503  uint256 public initAssetPrice */\n    tag_60:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":736:761  uint32 public totalRounds */\n    tag_63:\n      0x0a\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":712:732  uint32 public rounds */\n    tag_69:\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2603:2715  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_74:\n        /* \"contracts/CDS/CDS.sol\":2663:2670  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/CDS/CDS.sol\":2686:2692  _buyer */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2678:2683  buyer */\n      0x09\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2678:2692  buyer = _buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2705:2710  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2698:2710  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2603:2715  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":536:567  uint256 public liquidationPrice */\n    tag_77:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2447:2599  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/CDS/CDS.sol\":2533:2541  _isBuyer */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":2533:2594  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      tag_140\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2570:2594  setSeller(_participants) */\n      tag_141\n        /* \"contracts/CDS/CDS.sol\":2580:2593  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2570:2579  setSeller */\n      tag_109\n        /* \"contracts/CDS/CDS.sol\":2570:2594  setSeller(_participants) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/CDS/CDS.sol\":2533:2594  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      jump(tag_142)\n    tag_140:\n        /* \"contracts/CDS/CDS.sol\":2544:2567  setBuyer(_participants) */\n      tag_143\n        /* \"contracts/CDS/CDS.sol\":2553:2566  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2544:2552  setBuyer */\n      tag_74\n        /* \"contracts/CDS/CDS.sol\":2544:2567  setBuyer(_participants) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/CDS/CDS.sol\":2533:2594  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n    tag_142:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2447:2599  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1537:1722  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_84:\n        /* \"contracts/CDS/CDS.sol\":1579:1596  uint256[5] memory */\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1619:1633  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1641:1651  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1659:1675  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1683:1690  premium */\n      sload(0x06)\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1698:1711  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":1604:1717  return [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1537:1722  function getPrices() public view returns (uint256[5] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2177:2324  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_90:\n        /* \"contracts/CDS/CDS.sol\":2245:2252  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2277:2292  _initAssetPrice */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2260:2274  initAssetPrice */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2260:2292  initAssetPrice = _initAssetPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2305:2319  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2298:2319  return initAssetPrice */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2177:2324  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_95:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_150\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_119\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_155)\n    tag_149:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_157\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_160:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_119\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_161)\n    tag_156:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_163\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_166:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_119\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_162:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_161:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_155:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2840:2955  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n    tag_99:\n        /* \"contracts/CDS/CDS.sol\":2901:2907  uint32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/CDS/CDS.sol\":2924:2931  _rounds */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2915:2921  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2915:2931  rounds = _rounds */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2944:2950  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2937:2950  return rounds */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2840:2955  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1803:1878  function getSeller() public view returns (address) {... */\n    tag_102:\n        /* \"contracts/CDS/CDS.sol\":1845:1852  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1867:1873  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1860:1873  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1803:1878  function getSeller() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":571:593  uint256 public premium */\n    tag_105:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2719:2836  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_109:\n        /* \"contracts/CDS/CDS.sol\":2781:2788  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/CDS/CDS.sol\":2805:2812  _seller */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2796:2802  seller */\n      0x0a\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2796:2812  seller = _seller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2825:2831  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2818:2831  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2719:2836  function setSeller(address _seller) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1882:2173  function getClaimReward() public view returns (uint256) {... */\n    tag_112:\n        /* \"contracts/CDS/CDS.sol\":1929:1936  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1944:1961  uint256 currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1964:1987  getCurrPrice(assetType) */\n      tag_175\n        /* \"contracts/CDS/CDS.sol\":1977:1986  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1964:1976  getCurrPrice */\n      tag_95\n        /* \"contracts/CDS/CDS.sol\":1964:1987  getCurrPrice(assetType) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/CDS/CDS.sol\":1944:1987  uint256 currPrice = getCurrPrice(assetType) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2010:2019  currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1997:2007  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":1997:2019  claimPrice < currPrice */\n      lt\n        /* \"contracts/CDS/CDS.sol\":1993:2044  if (claimPrice < currPrice) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2036:2037  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2029:2037  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_174)\n        /* \"contracts/CDS/CDS.sol\":1993:2044  if (claimPrice < currPrice) {... */\n    tag_176:\n        /* \"contracts/CDS/CDS.sol\":2062:2168  sellerDeposit.calcClaimReward(... */\n      tag_177\n        /* \"contracts/CDS/CDS.sol\":2101:2117  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":2127:2141  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2151:2160  currPrice */\n      dup4\n        /* \"contracts/CDS/CDS.sol\":2062:2075  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":2062:2091  sellerDeposit.calcClaimReward */\n      tag_178\n      swap1\n        /* \"contracts/CDS/CDS.sol\":2062:2168  sellerDeposit.calcClaimReward(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/CDS/CDS.sol\":2049:2168  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/CDS.sol\":1882:2173  function getClaimReward() public view returns (uint256) {... */\n    tag_174:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n    tag_117:\n        /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      tag_187\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      tag_188\n        /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n      dup5\n        /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n      dup7\n        /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n      tag_118\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n      dup4\n        /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n      tag_119\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n    tag_178:\n        /* \"contracts/libs/LibSwap.sol\":311:318  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":326:345  uint256 claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":371:379  _current */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":355:367  _liquidation */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":355:379  _liquidation >= _current */\n      lt\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      tag_204\n      jumpi\n        /* \"contracts/libs/LibSwap.sol\":403:411  _deposit */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":389:411  claimReward = _deposit */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      jump(tag_205)\n    tag_204:\n        /* \"contracts/libs/LibSwap.sol\":432:450  uint256 numOfAsset */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      tag_206\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      tag_207\n        /* \"contracts/libs/LibSwap.sol\":479:491  _liquidation */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:474  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:478  _initial.sub */\n      tag_118\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/libs/LibSwap.sol\":453:461  _deposit */\n      dup9\n        /* \"contracts/libs/LibSwap.sol\":453:465  _deposit.div */\n      tag_119\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/libs/LibSwap.sol\":432:493  uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      tag_208\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      tag_209\n        /* \"contracts/libs/LibSwap.sol\":543:551  _current */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":530:538  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":530:542  _initial.sub */\n      tag_118\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/libs/LibSwap.sol\":515:525  numOfAsset */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":515:529  numOfAsset.mul */\n      tag_210\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/libs/LibSwap.sol\":501:553  claimReward = numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      pop\n        /* \"contracts/libs/LibSwap.sol\":424:560  {... */\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n    tag_205:\n        /* \"contracts/libs/LibSwap.sol\":572:583  claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":565:583  return claimReward */\n      swap2\n      pop\n      pop\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_145:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_215:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_216:\n        /* \"#utility.yul\":177:201   */\n      tag_258\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_215\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_33:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_260\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_216\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_126:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x21\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:743   */\n    tag_217:\n        /* \"#utility.yul\":711:712   */\n      0x05\n        /* \"#utility.yul\":704:709   */\n      dup2\n        /* \"#utility.yul\":701:713   */\n      lt\n        /* \"#utility.yul\":691:737   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":717:735   */\n      tag_264\n      tag_126\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":691:737   */\n    tag_263:\n        /* \"#utility.yul\":628:743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:880   */\n    tag_218:\n        /* \"#utility.yul\":796:803   */\n      0x00\n        /* \"#utility.yul\":825:830   */\n      dup2\n        /* \"#utility.yul\":814:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:874   */\n      tag_266\n        /* \"#utility.yul\":868:873   */\n      dup3\n        /* \"#utility.yul\":831:874   */\n      tag_217\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":749:880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":886:1017   */\n    tag_219:\n        /* \"#utility.yul\":944:953   */\n      0x00\n        /* \"#utility.yul\":977:1011   */\n      tag_268\n        /* \"#utility.yul\":1005:1010   */\n      dup3\n        /* \"#utility.yul\":977:1011   */\n      tag_218\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":964:1011   */\n      swap1\n      pop\n        /* \"#utility.yul\":886:1017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1023:1170   */\n    tag_220:\n        /* \"#utility.yul\":1118:1163   */\n      tag_270\n        /* \"#utility.yul\":1157:1162   */\n      dup2\n        /* \"#utility.yul\":1118:1163   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1113:1116   */\n      dup3\n        /* \"#utility.yul\":1106:1164   */\n      mstore\n        /* \"#utility.yul\":1023:1170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1414   */\n    tag_37:\n        /* \"#utility.yul\":1277:1281   */\n      0x00\n        /* \"#utility.yul\":1315:1317   */\n      0x20\n        /* \"#utility.yul\":1304:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1292:1318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1407   */\n      tag_272\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1393:1402   */\n      dup4\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1380:1386   */\n      dup5\n        /* \"#utility.yul\":1328:1407   */\n      tag_220\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1176:1414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1501:1618   */\n    tag_222:\n        /* \"#utility.yul\":1610:1611   */\n      0x00\n        /* \"#utility.yul\":1607:1608   */\n      dup1\n        /* \"#utility.yul\":1600:1612   */\n      revert\n        /* \"#utility.yul\":1747:1856   */\n    tag_224:\n        /* \"#utility.yul\":1830:1831   */\n      0x05\n        /* \"#utility.yul\":1823:1828   */\n      dup2\n        /* \"#utility.yul\":1820:1832   */\n      lt\n        /* \"#utility.yul\":1810:1850   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1843:1844   */\n      dup1\n        /* \"#utility.yul\":1836:1848   */\n      revert\n        /* \"#utility.yul\":1810:1850   */\n    tag_277:\n        /* \"#utility.yul\":1747:1856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2021   */\n    tag_225:\n        /* \"#utility.yul\":1918:1923   */\n      0x00\n        /* \"#utility.yul\":1956:1962   */\n      dup2\n        /* \"#utility.yul\":1943:1963   */\n      calldataload\n        /* \"#utility.yul\":1934:1963   */\n      swap1\n      pop\n        /* \"#utility.yul\":1972:2015   */\n      tag_279\n        /* \"#utility.yul\":2009:2014   */\n      dup2\n        /* \"#utility.yul\":1972:2015   */\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1862:2021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2376   */\n    tag_40:\n        /* \"#utility.yul\":2096:2102   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2133:2142   */\n      dup3\n        /* \"#utility.yul\":2124:2131   */\n      dup5\n        /* \"#utility.yul\":2120:2143   */\n      sub\n        /* \"#utility.yul\":2116:2148   */\n      slt\n        /* \"#utility.yul\":2113:2232   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2151:2230   */\n      tag_282\n      tag_222\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2113:2232   */\n    tag_281:\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2296:2359   */\n      tag_283\n        /* \"#utility.yul\":2351:2358   */\n      dup5\n        /* \"#utility.yul\":2342:2348   */\n      dup3\n        /* \"#utility.yul\":2331:2340   */\n      dup6\n        /* \"#utility.yul\":2327:2349   */\n      add\n        /* \"#utility.yul\":2296:2359   */\n      tag_225\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2286:2359   */\n      swap2\n      pop\n        /* \"#utility.yul\":2242:2369   */\n      pop\n        /* \"#utility.yul\":2027:2376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2382:2475   */\n    tag_226:\n        /* \"#utility.yul\":2418:2425   */\n      0x00\n        /* \"#utility.yul\":2458:2468   */\n      0xffffffff\n        /* \"#utility.yul\":2451:2456   */\n      dup3\n        /* \"#utility.yul\":2447:2469   */\n      and\n        /* \"#utility.yul\":2436:2469   */\n      swap1\n      pop\n        /* \"#utility.yul\":2382:2475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2481:2596   */\n    tag_227:\n        /* \"#utility.yul\":2566:2589   */\n      tag_286\n        /* \"#utility.yul\":2583:2588   */\n      dup2\n        /* \"#utility.yul\":2566:2589   */\n      tag_226\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2561:2564   */\n      dup3\n        /* \"#utility.yul\":2554:2590   */\n      mstore\n        /* \"#utility.yul\":2481:2596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2820   */\n    tag_46:\n        /* \"#utility.yul\":2693:2697   */\n      0x00\n        /* \"#utility.yul\":2731:2733   */\n      0x20\n        /* \"#utility.yul\":2720:2729   */\n      dup3\n        /* \"#utility.yul\":2716:2734   */\n      add\n        /* \"#utility.yul\":2708:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:2813   */\n      tag_288\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2799:2808   */\n      dup4\n        /* \"#utility.yul\":2795:2812   */\n      add\n        /* \"#utility.yul\":2786:2792   */\n      dup5\n        /* \"#utility.yul\":2744:2813   */\n      tag_227\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2602:2820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2952   */\n    tag_228:\n        /* \"#utility.yul\":2863:2870   */\n      0x00\n        /* \"#utility.yul\":2903:2945   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2896:2901   */\n      dup3\n        /* \"#utility.yul\":2892:2946   */\n      and\n        /* \"#utility.yul\":2881:2946   */\n      swap1\n      pop\n        /* \"#utility.yul\":2826:2952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2958:3054   */\n    tag_229:\n        /* \"#utility.yul\":2995:3002   */\n      0x00\n        /* \"#utility.yul\":3024:3048   */\n      tag_291\n        /* \"#utility.yul\":3042:3047   */\n      dup3\n        /* \"#utility.yul\":3024:3048   */\n      tag_228\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3013:3048   */\n      swap1\n      pop\n        /* \"#utility.yul\":2958:3054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3178   */\n    tag_230:\n        /* \"#utility.yul\":3147:3171   */\n      tag_293\n        /* \"#utility.yul\":3165:3170   */\n      dup2\n        /* \"#utility.yul\":3147:3171   */\n      tag_229\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3142:3145   */\n      dup3\n        /* \"#utility.yul\":3135:3172   */\n      mstore\n        /* \"#utility.yul\":3060:3178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3184:3406   */\n    tag_53:\n        /* \"#utility.yul\":3277:3281   */\n      0x00\n        /* \"#utility.yul\":3315:3317   */\n      0x20\n        /* \"#utility.yul\":3304:3313   */\n      dup3\n        /* \"#utility.yul\":3300:3318   */\n      add\n        /* \"#utility.yul\":3292:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3328:3399   */\n      tag_295\n        /* \"#utility.yul\":3396:3397   */\n      0x00\n        /* \"#utility.yul\":3385:3394   */\n      dup4\n        /* \"#utility.yul\":3381:3398   */\n      add\n        /* \"#utility.yul\":3372:3378   */\n      dup5\n        /* \"#utility.yul\":3328:3399   */\n      tag_230\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3184:3406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3412:3534   */\n    tag_231:\n        /* \"#utility.yul\":3485:3509   */\n      tag_297\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3485:3509   */\n      tag_229\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3475:3510   */\n      eq\n        /* \"#utility.yul\":3465:3528   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3521:3522   */\n      dup1\n        /* \"#utility.yul\":3514:3526   */\n      revert\n        /* \"#utility.yul\":3465:3528   */\n    tag_298:\n        /* \"#utility.yul\":3412:3534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3679   */\n    tag_232:\n        /* \"#utility.yul\":3586:3591   */\n      0x00\n        /* \"#utility.yul\":3624:3630   */\n      dup2\n        /* \"#utility.yul\":3611:3631   */\n      calldataload\n        /* \"#utility.yul\":3602:3631   */\n      swap1\n      pop\n        /* \"#utility.yul\":3640:3673   */\n      tag_300\n        /* \"#utility.yul\":3667:3672   */\n      dup2\n        /* \"#utility.yul\":3640:3673   */\n      tag_231\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3540:3679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:4014   */\n    tag_73:\n        /* \"#utility.yul\":3744:3750   */\n      0x00\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3781:3790   */\n      dup3\n        /* \"#utility.yul\":3772:3779   */\n      dup5\n        /* \"#utility.yul\":3768:3791   */\n      sub\n        /* \"#utility.yul\":3764:3796   */\n      slt\n        /* \"#utility.yul\":3761:3880   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3799:3878   */\n      tag_303\n      tag_222\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3761:3880   */\n    tag_302:\n        /* \"#utility.yul\":3919:3920   */\n      0x00\n        /* \"#utility.yul\":3944:3997   */\n      tag_304\n        /* \"#utility.yul\":3989:3996   */\n      dup5\n        /* \"#utility.yul\":3980:3986   */\n      dup3\n        /* \"#utility.yul\":3969:3978   */\n      dup6\n        /* \"#utility.yul\":3965:3987   */\n      add\n        /* \"#utility.yul\":3944:3997   */\n      tag_232\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3934:3997   */\n      swap2\n      pop\n        /* \"#utility.yul\":3890:4007   */\n      pop\n        /* \"#utility.yul\":3685:4014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4020:4110   */\n    tag_233:\n        /* \"#utility.yul\":4054:4061   */\n      0x00\n        /* \"#utility.yul\":4097:4102   */\n      dup2\n        /* \"#utility.yul\":4090:4103   */\n      iszero\n        /* \"#utility.yul\":4083:4104   */\n      iszero\n        /* \"#utility.yul\":4072:4104   */\n      swap1\n      pop\n        /* \"#utility.yul\":4020:4110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4116:4232   */\n    tag_234:\n        /* \"#utility.yul\":4186:4207   */\n      tag_307\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4186:4207   */\n      tag_233\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4179:4184   */\n      dup2\n        /* \"#utility.yul\":4176:4208   */\n      eq\n        /* \"#utility.yul\":4166:4226   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4222:4223   */\n      0x00\n        /* \"#utility.yul\":4219:4220   */\n      dup1\n        /* \"#utility.yul\":4212:4224   */\n      revert\n        /* \"#utility.yul\":4166:4226   */\n    tag_308:\n        /* \"#utility.yul\":4116:4232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4238:4371   */\n    tag_235:\n        /* \"#utility.yul\":4281:4286   */\n      0x00\n        /* \"#utility.yul\":4319:4325   */\n      dup2\n        /* \"#utility.yul\":4306:4326   */\n      calldataload\n        /* \"#utility.yul\":4297:4326   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4365   */\n      tag_310\n        /* \"#utility.yul\":4359:4364   */\n      dup2\n        /* \"#utility.yul\":4335:4365   */\n      tag_234\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4238:4371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4377:4845   */\n    tag_81:\n        /* \"#utility.yul\":4442:4448   */\n      0x00\n        /* \"#utility.yul\":4450:4456   */\n      dup1\n        /* \"#utility.yul\":4499:4501   */\n      0x40\n        /* \"#utility.yul\":4487:4496   */\n      dup4\n        /* \"#utility.yul\":4478:4485   */\n      dup6\n        /* \"#utility.yul\":4474:4497   */\n      sub\n        /* \"#utility.yul\":4470:4502   */\n      slt\n        /* \"#utility.yul\":4467:4586   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4505:4584   */\n      tag_313\n      tag_222\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4467:4586   */\n    tag_312:\n        /* \"#utility.yul\":4625:4626   */\n      0x00\n        /* \"#utility.yul\":4650:4703   */\n      tag_314\n        /* \"#utility.yul\":4695:4702   */\n      dup6\n        /* \"#utility.yul\":4686:4692   */\n      dup3\n        /* \"#utility.yul\":4675:4684   */\n      dup7\n        /* \"#utility.yul\":4671:4693   */\n      add\n        /* \"#utility.yul\":4650:4703   */\n      tag_232\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4640:4703   */\n      swap3\n      pop\n        /* \"#utility.yul\":4596:4713   */\n      pop\n        /* \"#utility.yul\":4752:4754   */\n      0x20\n        /* \"#utility.yul\":4778:4828   */\n      tag_315\n        /* \"#utility.yul\":4820:4827   */\n      dup6\n        /* \"#utility.yul\":4811:4817   */\n      dup3\n        /* \"#utility.yul\":4800:4809   */\n      dup7\n        /* \"#utility.yul\":4796:4818   */\n      add\n        /* \"#utility.yul\":4778:4828   */\n      tag_235\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4768:4828   */\n      swap2\n      pop\n        /* \"#utility.yul\":4723:4838   */\n      pop\n        /* \"#utility.yul\":4377:4845   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4851:4955   */\n    tag_236:\n        /* \"#utility.yul\":4916:4922   */\n      0x00\n        /* \"#utility.yul\":4944:4948   */\n      0x05\n        /* \"#utility.yul\":4934:4948   */\n      swap1\n      pop\n        /* \"#utility.yul\":4851:4955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5104   */\n    tag_237:\n        /* \"#utility.yul\":5058:5069   */\n      0x00\n        /* \"#utility.yul\":5095:5098   */\n      dup2\n        /* \"#utility.yul\":5080:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":4961:5104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5208   */\n    tag_238:\n        /* \"#utility.yul\":5175:5179   */\n      0x00\n        /* \"#utility.yul\":5198:5201   */\n      dup2\n        /* \"#utility.yul\":5190:5201   */\n      swap1\n      pop\n        /* \"#utility.yul\":5110:5208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5214:5322   */\n    tag_239:\n        /* \"#utility.yul\":5291:5315   */\n      tag_320\n        /* \"#utility.yul\":5309:5314   */\n      dup2\n        /* \"#utility.yul\":5291:5315   */\n      tag_215\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5279:5316   */\n      mstore\n        /* \"#utility.yul\":5214:5322   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5507   */\n    tag_240:\n        /* \"#utility.yul\":5397:5407   */\n      0x00\n        /* \"#utility.yul\":5418:5464   */\n      tag_322\n        /* \"#utility.yul\":5460:5463   */\n      dup4\n        /* \"#utility.yul\":5452:5458   */\n      dup4\n        /* \"#utility.yul\":5418:5464   */\n      tag_239\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5496:5500   */\n      0x20\n        /* \"#utility.yul\":5491:5494   */\n      dup4\n        /* \"#utility.yul\":5487:5501   */\n      add\n        /* \"#utility.yul\":5473:5501   */\n      swap1\n      pop\n        /* \"#utility.yul\":5328:5507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5513:5624   */\n    tag_241:\n        /* \"#utility.yul\":5581:5585   */\n      0x00\n        /* \"#utility.yul\":5613:5617   */\n      0x20\n        /* \"#utility.yul\":5608:5611   */\n      dup3\n        /* \"#utility.yul\":5604:5618   */\n      add\n        /* \"#utility.yul\":5596:5618   */\n      swap1\n      pop\n        /* \"#utility.yul\":5513:5624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5662:6356   */\n    tag_242:\n        /* \"#utility.yul\":5798:5850   */\n      tag_325\n        /* \"#utility.yul\":5844:5849   */\n      dup2\n        /* \"#utility.yul\":5798:5850   */\n      tag_236\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5866:5950   */\n      tag_326\n        /* \"#utility.yul\":5943:5949   */\n      dup2\n        /* \"#utility.yul\":5938:5941   */\n      dup5\n        /* \"#utility.yul\":5866:5950   */\n      tag_237\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5859:5950   */\n      swap3\n      pop\n        /* \"#utility.yul\":5974:6028   */\n      tag_327\n        /* \"#utility.yul\":6022:6027   */\n      dup3\n        /* \"#utility.yul\":5974:6028   */\n      tag_238\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6051:6058   */\n      dup1\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6067:6349   */\n    tag_328:\n        /* \"#utility.yul\":6092:6098   */\n      dup4\n        /* \"#utility.yul\":6089:6090   */\n      dup2\n        /* \"#utility.yul\":6086:6099   */\n      lt\n        /* \"#utility.yul\":6067:6349   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":6168:6174   */\n      dup2\n        /* \"#utility.yul\":6162:6175   */\n      mload\n        /* \"#utility.yul\":6195:6258   */\n      tag_331\n        /* \"#utility.yul\":6254:6257   */\n      dup8\n        /* \"#utility.yul\":6239:6252   */\n      dup3\n        /* \"#utility.yul\":6195:6258   */\n      tag_240\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6188:6258   */\n      swap7\n      pop\n        /* \"#utility.yul\":6281:6339   */\n      tag_332\n        /* \"#utility.yul\":6332:6338   */\n      dup4\n        /* \"#utility.yul\":6281:6339   */\n      tag_241\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6271:6339   */\n      swap3\n      pop\n        /* \"#utility.yul\":6127:6349   */\n      pop\n        /* \"#utility.yul\":6114:6115   */\n      0x01\n        /* \"#utility.yul\":6111:6112   */\n      dup2\n        /* \"#utility.yul\":6107:6116   */\n      add\n        /* \"#utility.yul\":6102:6116   */\n      swap1\n      pop\n        /* \"#utility.yul\":6067:6349   */\n      jump(tag_328)\n    tag_330:\n        /* \"#utility.yul\":6071:6085   */\n      pop\n        /* \"#utility.yul\":5774:6356   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5662:6356   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6362:6677   */\n    tag_86:\n        /* \"#utility.yul\":6501:6505   */\n      0x00\n        /* \"#utility.yul\":6539:6542   */\n      0xa0\n        /* \"#utility.yul\":6528:6537   */\n      dup3\n        /* \"#utility.yul\":6524:6543   */\n      add\n        /* \"#utility.yul\":6516:6543   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6670   */\n      tag_334\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6656:6665   */\n      dup4\n        /* \"#utility.yul\":6652:6669   */\n      add\n        /* \"#utility.yul\":6643:6649   */\n      dup5\n        /* \"#utility.yul\":6553:6670   */\n      tag_242\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6362:6677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6683:6805   */\n    tag_243:\n        /* \"#utility.yul\":6756:6780   */\n      tag_336\n        /* \"#utility.yul\":6774:6779   */\n      dup2\n        /* \"#utility.yul\":6756:6780   */\n      tag_215\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6749:6754   */\n      dup2\n        /* \"#utility.yul\":6746:6781   */\n      eq\n        /* \"#utility.yul\":6736:6799   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6795:6796   */\n      0x00\n        /* \"#utility.yul\":6792:6793   */\n      dup1\n        /* \"#utility.yul\":6785:6797   */\n      revert\n        /* \"#utility.yul\":6736:6799   */\n    tag_337:\n        /* \"#utility.yul\":6683:6805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:6950   */\n    tag_244:\n        /* \"#utility.yul\":6857:6862   */\n      0x00\n        /* \"#utility.yul\":6895:6901   */\n      dup2\n        /* \"#utility.yul\":6882:6902   */\n      calldataload\n        /* \"#utility.yul\":6873:6902   */\n      swap1\n      pop\n        /* \"#utility.yul\":6911:6944   */\n      tag_339\n        /* \"#utility.yul\":6938:6943   */\n      dup2\n        /* \"#utility.yul\":6911:6944   */\n      tag_243\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6811:6950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6956:7285   */\n    tag_89:\n        /* \"#utility.yul\":7015:7021   */\n      0x00\n        /* \"#utility.yul\":7064:7066   */\n      0x20\n        /* \"#utility.yul\":7052:7061   */\n      dup3\n        /* \"#utility.yul\":7043:7050   */\n      dup5\n        /* \"#utility.yul\":7039:7062   */\n      sub\n        /* \"#utility.yul\":7035:7067   */\n      slt\n        /* \"#utility.yul\":7032:7151   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7070:7149   */\n      tag_342\n      tag_222\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7032:7151   */\n    tag_341:\n        /* \"#utility.yul\":7190:7191   */\n      0x00\n        /* \"#utility.yul\":7215:7268   */\n      tag_343\n        /* \"#utility.yul\":7260:7267   */\n      dup5\n        /* \"#utility.yul\":7251:7257   */\n      dup3\n        /* \"#utility.yul\":7240:7249   */\n      dup6\n        /* \"#utility.yul\":7236:7258   */\n      add\n        /* \"#utility.yul\":7215:7268   */\n      tag_244\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7205:7268   */\n      swap2\n      pop\n        /* \"#utility.yul\":7161:7278   */\n      pop\n        /* \"#utility.yul\":6956:7285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7291:7411   */\n    tag_245:\n        /* \"#utility.yul\":7363:7386   */\n      tag_345\n        /* \"#utility.yul\":7380:7385   */\n      dup2\n        /* \"#utility.yul\":7363:7386   */\n      tag_226\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7356:7361   */\n      dup2\n        /* \"#utility.yul\":7353:7387   */\n      eq\n        /* \"#utility.yul\":7343:7405   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7401:7402   */\n      0x00\n        /* \"#utility.yul\":7398:7399   */\n      dup1\n        /* \"#utility.yul\":7391:7403   */\n      revert\n        /* \"#utility.yul\":7343:7405   */\n    tag_346:\n        /* \"#utility.yul\":7291:7411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7417:7554   */\n    tag_246:\n        /* \"#utility.yul\":7462:7467   */\n      0x00\n        /* \"#utility.yul\":7500:7506   */\n      dup2\n        /* \"#utility.yul\":7487:7507   */\n      calldataload\n        /* \"#utility.yul\":7478:7507   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7548   */\n      tag_348\n        /* \"#utility.yul\":7542:7547   */\n      dup2\n        /* \"#utility.yul\":7516:7548   */\n      tag_245\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7417:7554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7560:7887   */\n    tag_94:\n        /* \"#utility.yul\":7618:7624   */\n      0x00\n        /* \"#utility.yul\":7667:7669   */\n      0x20\n        /* \"#utility.yul\":7655:7664   */\n      dup3\n        /* \"#utility.yul\":7646:7653   */\n      dup5\n        /* \"#utility.yul\":7642:7665   */\n      sub\n        /* \"#utility.yul\":7638:7670   */\n      slt\n        /* \"#utility.yul\":7635:7754   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":7673:7752   */\n      tag_351\n      tag_222\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7635:7754   */\n    tag_350:\n        /* \"#utility.yul\":7793:7794   */\n      0x00\n        /* \"#utility.yul\":7818:7870   */\n      tag_352\n        /* \"#utility.yul\":7862:7869   */\n      dup5\n        /* \"#utility.yul\":7853:7859   */\n      dup3\n        /* \"#utility.yul\":7842:7851   */\n      dup6\n        /* \"#utility.yul\":7838:7860   */\n      add\n        /* \"#utility.yul\":7818:7870   */\n      tag_246\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7808:7870   */\n      swap2\n      pop\n        /* \"#utility.yul\":7764:7880   */\n      pop\n        /* \"#utility.yul\":7560:7887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7893:8036   */\n    tag_247:\n        /* \"#utility.yul\":7950:7955   */\n      0x00\n        /* \"#utility.yul\":7981:7987   */\n      dup2\n        /* \"#utility.yul\":7975:7988   */\n      mload\n        /* \"#utility.yul\":7966:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":7997:8030   */\n      tag_354\n        /* \"#utility.yul\":8024:8029   */\n      dup2\n        /* \"#utility.yul\":7997:8030   */\n      tag_243\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7893:8036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8042:8393   */\n    tag_154:\n        /* \"#utility.yul\":8112:8118   */\n      0x00\n        /* \"#utility.yul\":8161:8163   */\n      0x20\n        /* \"#utility.yul\":8149:8158   */\n      dup3\n        /* \"#utility.yul\":8140:8147   */\n      dup5\n        /* \"#utility.yul\":8136:8159   */\n      sub\n        /* \"#utility.yul\":8132:8164   */\n      slt\n        /* \"#utility.yul\":8129:8248   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":8167:8246   */\n      tag_357\n      tag_222\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8129:8248   */\n    tag_356:\n        /* \"#utility.yul\":8287:8288   */\n      0x00\n        /* \"#utility.yul\":8312:8376   */\n      tag_358\n        /* \"#utility.yul\":8368:8375   */\n      dup5\n        /* \"#utility.yul\":8359:8365   */\n      dup3\n        /* \"#utility.yul\":8348:8357   */\n      dup6\n        /* \"#utility.yul\":8344:8366   */\n      add\n        /* \"#utility.yul\":8312:8376   */\n      tag_247\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8302:8376   */\n      swap2\n      pop\n        /* \"#utility.yul\":8258:8386   */\n      pop\n        /* \"#utility.yul\":8042:8393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8399:8568   */\n    tag_248:\n        /* \"#utility.yul\":8483:8494   */\n      0x00\n        /* \"#utility.yul\":8517:8523   */\n      dup3\n        /* \"#utility.yul\":8512:8515   */\n      dup3\n        /* \"#utility.yul\":8505:8524   */\n      mstore\n        /* \"#utility.yul\":8557:8561   */\n      0x20\n        /* \"#utility.yul\":8552:8555   */\n      dup3\n        /* \"#utility.yul\":8548:8562   */\n      add\n        /* \"#utility.yul\":8533:8562   */\n      swap1\n      pop\n        /* \"#utility.yul\":8399:8568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8574:8799   */\n    tag_249:\n        /* \"#utility.yul\":8714:8748   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8710:8711   */\n      0x00\n        /* \"#utility.yul\":8702:8708   */\n      dup3\n        /* \"#utility.yul\":8698:8712   */\n      add\n        /* \"#utility.yul\":8691:8749   */\n      mstore\n        /* \"#utility.yul\":8783:8791   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8778:8780   */\n      0x20\n        /* \"#utility.yul\":8770:8776   */\n      dup3\n        /* \"#utility.yul\":8766:8781   */\n      add\n        /* \"#utility.yul\":8759:8792   */\n      mstore\n        /* \"#utility.yul\":8574:8799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8805:9171   */\n    tag_250:\n        /* \"#utility.yul\":8947:8950   */\n      0x00\n        /* \"#utility.yul\":8968:9035   */\n      tag_362\n        /* \"#utility.yul\":9032:9034   */\n      0x26\n        /* \"#utility.yul\":9027:9030   */\n      dup4\n        /* \"#utility.yul\":8968:9035   */\n      tag_248\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8961:9035   */\n      swap2\n      pop\n        /* \"#utility.yul\":9044:9137   */\n      tag_363\n        /* \"#utility.yul\":9133:9136   */\n      dup3\n        /* \"#utility.yul\":9044:9137   */\n      tag_249\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9162:9164   */\n      0x40\n        /* \"#utility.yul\":9157:9160   */\n      dup3\n        /* \"#utility.yul\":9153:9165   */\n      add\n        /* \"#utility.yul\":9146:9165   */\n      swap1\n      pop\n        /* \"#utility.yul\":8805:9171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9177:9596   */\n    tag_184:\n        /* \"#utility.yul\":9343:9347   */\n      0x00\n        /* \"#utility.yul\":9381:9383   */\n      0x20\n        /* \"#utility.yul\":9370:9379   */\n      dup3\n        /* \"#utility.yul\":9366:9384   */\n      add\n        /* \"#utility.yul\":9358:9384   */\n      swap1\n      pop\n        /* \"#utility.yul\":9430:9439   */\n      dup2\n        /* \"#utility.yul\":9424:9428   */\n      dup2\n        /* \"#utility.yul\":9420:9440   */\n      sub\n        /* \"#utility.yul\":9416:9417   */\n      0x00\n        /* \"#utility.yul\":9405:9414   */\n      dup4\n        /* \"#utility.yul\":9401:9418   */\n      add\n        /* \"#utility.yul\":9394:9441   */\n      mstore\n        /* \"#utility.yul\":9458:9589   */\n      tag_365\n        /* \"#utility.yul\":9584:9588   */\n      dup2\n        /* \"#utility.yul\":9458:9589   */\n      tag_250\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9450:9589   */\n      swap1\n      pop\n        /* \"#utility.yul\":9177:9596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9602:9782   */\n    tag_251:\n        /* \"#utility.yul\":9650:9727   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9647:9648   */\n      0x00\n        /* \"#utility.yul\":9640:9728   */\n      mstore\n        /* \"#utility.yul\":9747:9751   */\n      0x11\n        /* \"#utility.yul\":9744:9745   */\n      0x04\n        /* \"#utility.yul\":9737:9752   */\n      mstore\n        /* \"#utility.yul\":9771:9775   */\n      0x24\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9761:9776   */\n      revert\n        /* \"#utility.yul\":9788:9979   */\n    tag_191:\n        /* \"#utility.yul\":9828:9832   */\n      0x00\n        /* \"#utility.yul\":9848:9868   */\n      tag_368\n        /* \"#utility.yul\":9866:9867   */\n      dup3\n        /* \"#utility.yul\":9848:9868   */\n      tag_215\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9843:9868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9882:9902   */\n      tag_369\n        /* \"#utility.yul\":9900:9901   */\n      dup4\n        /* \"#utility.yul\":9882:9902   */\n      tag_215\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9877:9902   */\n      swap3\n      pop\n        /* \"#utility.yul\":9921:9922   */\n      dup3\n        /* \"#utility.yul\":9918:9919   */\n      dup3\n        /* \"#utility.yul\":9915:9923   */\n      lt\n        /* \"#utility.yul\":9912:9946   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":9926:9944   */\n      tag_371\n      tag_251\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9912:9946   */\n    tag_370:\n        /* \"#utility.yul\":9971:9972   */\n      dup3\n        /* \"#utility.yul\":9968:9969   */\n      dup3\n        /* \"#utility.yul\":9964:9973   */\n      sub\n        /* \"#utility.yul\":9956:9973   */\n      swap1\n      pop\n        /* \"#utility.yul\":9788:9979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9985:10165   */\n    tag_252:\n        /* \"#utility.yul\":10033:10110   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10030:10031   */\n      0x00\n        /* \"#utility.yul\":10023:10111   */\n      mstore\n        /* \"#utility.yul\":10130:10134   */\n      0x12\n        /* \"#utility.yul\":10127:10128   */\n      0x04\n        /* \"#utility.yul\":10120:10135   */\n      mstore\n        /* \"#utility.yul\":10154:10158   */\n      0x24\n        /* \"#utility.yul\":10151:10152   */\n      0x00\n        /* \"#utility.yul\":10144:10159   */\n      revert\n        /* \"#utility.yul\":10171:10356   */\n    tag_194:\n        /* \"#utility.yul\":10211:10212   */\n      0x00\n        /* \"#utility.yul\":10228:10248   */\n      tag_374\n        /* \"#utility.yul\":10246:10247   */\n      dup3\n        /* \"#utility.yul\":10228:10248   */\n      tag_215\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10223:10248   */\n      swap2\n      pop\n        /* \"#utility.yul\":10262:10282   */\n      tag_375\n        /* \"#utility.yul\":10280:10281   */\n      dup4\n        /* \"#utility.yul\":10262:10282   */\n      tag_215\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10257:10282   */\n      swap3\n      pop\n        /* \"#utility.yul\":10301:10302   */\n      dup3\n        /* \"#utility.yul\":10291:10326   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":10306:10324   */\n      tag_377\n      tag_252\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10291:10326   */\n    tag_376:\n        /* \"#utility.yul\":10348:10349   */\n      dup3\n        /* \"#utility.yul\":10345:10346   */\n      dup3\n        /* \"#utility.yul\":10341:10350   */\n      div\n        /* \"#utility.yul\":10336:10350   */\n      swap1\n      pop\n        /* \"#utility.yul\":10171:10356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:10544   */\n    tag_253:\n        /* \"#utility.yul\":10502:10536   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10498:10499   */\n      0x00\n        /* \"#utility.yul\":10490:10496   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10479:10537   */\n      mstore\n        /* \"#utility.yul\":10362:10544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10550:10916   */\n    tag_254:\n        /* \"#utility.yul\":10692:10695   */\n      0x00\n        /* \"#utility.yul\":10713:10780   */\n      tag_380\n        /* \"#utility.yul\":10777:10779   */\n      0x20\n        /* \"#utility.yul\":10772:10775   */\n      dup4\n        /* \"#utility.yul\":10713:10780   */\n      tag_248\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10706:10780   */\n      swap2\n      pop\n        /* \"#utility.yul\":10789:10882   */\n      tag_381\n        /* \"#utility.yul\":10878:10881   */\n      dup3\n        /* \"#utility.yul\":10789:10882   */\n      tag_253\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10907:10909   */\n      0x20\n        /* \"#utility.yul\":10902:10905   */\n      dup3\n        /* \"#utility.yul\":10898:10910   */\n      add\n        /* \"#utility.yul\":10891:10910   */\n      swap1\n      pop\n        /* \"#utility.yul\":10550:10916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10922:11341   */\n    tag_201:\n        /* \"#utility.yul\":11088:11092   */\n      0x00\n        /* \"#utility.yul\":11126:11128   */\n      0x20\n        /* \"#utility.yul\":11115:11124   */\n      dup3\n        /* \"#utility.yul\":11111:11129   */\n      add\n        /* \"#utility.yul\":11103:11129   */\n      swap1\n      pop\n        /* \"#utility.yul\":11175:11184   */\n      dup2\n        /* \"#utility.yul\":11169:11173   */\n      dup2\n        /* \"#utility.yul\":11165:11185   */\n      sub\n        /* \"#utility.yul\":11161:11162   */\n      0x00\n        /* \"#utility.yul\":11150:11159   */\n      dup4\n        /* \"#utility.yul\":11146:11163   */\n      add\n        /* \"#utility.yul\":11139:11186   */\n      mstore\n        /* \"#utility.yul\":11203:11334   */\n      tag_383\n        /* \"#utility.yul\":11329:11333   */\n      dup2\n        /* \"#utility.yul\":11203:11334   */\n      tag_254\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11195:11334   */\n      swap1\n      pop\n        /* \"#utility.yul\":10922:11341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11347:11695   */\n    tag_214:\n        /* \"#utility.yul\":11387:11394   */\n      0x00\n        /* \"#utility.yul\":11410:11430   */\n      tag_385\n        /* \"#utility.yul\":11428:11429   */\n      dup3\n        /* \"#utility.yul\":11410:11430   */\n      tag_215\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11405:11430   */\n      swap2\n      pop\n        /* \"#utility.yul\":11444:11464   */\n      tag_386\n        /* \"#utility.yul\":11462:11463   */\n      dup4\n        /* \"#utility.yul\":11444:11464   */\n      tag_215\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11439:11464   */\n      swap3\n      pop\n        /* \"#utility.yul\":11632:11633   */\n      dup2\n        /* \"#utility.yul\":11564:11630   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11560:11634   */\n      div\n        /* \"#utility.yul\":11557:11558   */\n      dup4\n        /* \"#utility.yul\":11554:11635   */\n      gt\n        /* \"#utility.yul\":11549:11550   */\n      dup3\n        /* \"#utility.yul\":11542:11551   */\n      iszero\n        /* \"#utility.yul\":11535:11552   */\n      iszero\n        /* \"#utility.yul\":11531:11636   */\n      and\n        /* \"#utility.yul\":11528:11659   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":11639:11657   */\n      tag_388\n      tag_251\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11528:11659   */\n    tag_387:\n        /* \"#utility.yul\":11687:11688   */\n      dup3\n        /* \"#utility.yul\":11684:11685   */\n      dup3\n        /* \"#utility.yul\":11680:11689   */\n      mul\n        /* \"#utility.yul\":11669:11689   */\n      swap1\n      pop\n        /* \"#utility.yul\":11347:11695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc59a868dc75531b9051ad931d0ec0445ccd16e2a8f06987917cfbda2668dedb64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_764": {
									"entryPoint": null,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 651,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 659,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_968": {
									"entryPoint": 855,
									"id": 968,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@div_355": {
									"entryPoint": 941,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_325": {
									"entryPoint": 917,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4450:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "748:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "748:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "730:7:7",
														"type": ""
													}
												],
												"src": "694:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "891:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "903:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "893:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "893:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "858:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "882:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "865:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "855:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:42:7"
															},
															"nodeType": "YulIf",
															"src": "845:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:7",
														"type": ""
													}
												],
												"src": "793:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "991:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1006:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1000:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "991:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1022:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1022:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "959:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "967:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:7",
														"type": ""
													}
												],
												"src": "919:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:1110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1290:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1292:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1292:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1264:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1285:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:33:7"
															},
															"nodeType": "YulIf",
															"src": "1253:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1383:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1398:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1402:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1427:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1473:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1484:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1469:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1469:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1493:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1437:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1427:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1521:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1536:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1540:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1566:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1612:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1623:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1608:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1608:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1576:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1566:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1660:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1675:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1679:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1705:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1751:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1762:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1747:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1771:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1715:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1715:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1799:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1814:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1818:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1844:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1854:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1844:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1938:130:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1953:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1957:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1984:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1994:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2078:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2124:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2169:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2165:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2165:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2189:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2134:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2124:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2217:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2232:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2236:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2263:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2308:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2319:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2304:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2273:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "2263:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1165:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1176:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1196:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1204:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1212:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1220:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1236:6:7",
														"type": ""
													}
												],
												"src": "1066:1287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:7",
														"type": ""
													}
												],
												"src": "2359:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:14:7"
																	},
																	{
																		"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2674:22:7",
																		"type": "",
																		"value": "BTC:0, ETH:1, LINK:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2632:6:7",
														"type": ""
													}
												],
												"src": "2534:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2932:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2873:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																	"nodeType": "YulIdentifier",
																	"src": "2949:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2844:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2852:3:7",
														"type": ""
													}
												],
												"src": "2710:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3263:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3263:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3489:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3355:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3233:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3248:4:7",
														"type": ""
													}
												],
												"src": "3082:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3507:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3721:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3741:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3835:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3693:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3924:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3934:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3957:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3939:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3939:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3934:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3968:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3991:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3973:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3968:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4009:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4012:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4006:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:8:7"
															},
															"nodeType": "YulIf",
															"src": "4003:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4047:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4059:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4062:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4055:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4047:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3910:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3913:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3919:4:7",
														"type": ""
													}
												],
												"src": "3879:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4104:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4124:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4076:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4304:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4314:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4337:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4319:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4314:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4348:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4371:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4353:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4348:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4395:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4397:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4397:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4397:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4392:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:9:7"
															},
															"nodeType": "YulIf",
															"src": "4382:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4427:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4436:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4439:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4427:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4293:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4296:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4302:1:7",
														"type": ""
													}
												],
												"src": "4262:185:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTC:0, ETH:1, LINK:2\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001a1738038062001a17833981810160405281019062000037919062000446565b73f2a3fa0266a0feffa87da45f0d3c45ac66fe05c56200006c620000606200028b60201b60201c565b6200029360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050866003819055508560048190555084600581905550836006819055508260078190555081600a60146101000a81548163ffffffff021916908363ffffffff16021790555081600a60186101000a81548163ffffffff021916908363ffffffff160217905550620001356005546007546003546200035760201b62000a9d179092919060201c565b60088190555060008163ffffffff16148062000157575060018163ffffffff16145b8062000169575060028163ffffffff16145b620001ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a2906200055a565b60405180910390fd5b80600a601c6101000a81548163ffffffff021916908363ffffffff1602179055506000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff021916908360048111156200027957620002786200057c565b5b0217905550505050505050506200067c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006200038c6200037784866200039560201b62000acd1790919060201c565b83620003ad60201b62000ae31790919060201c565b90509392505050565b60008183620003a59190620005da565b905092915050565b60008183620003bd919062000644565b905092915050565b600080fd5b6000819050919050565b620003df81620003ca565b8114620003eb57600080fd5b50565b600081519050620003ff81620003d4565b92915050565b600063ffffffff82169050919050565b620004208162000405565b81146200042c57600080fd5b50565b600081519050620004408162000415565b92915050565b600080600080600080600060e0888a031215620004685762000467620003c5565b5b6000620004788a828b01620003ee565b97505060206200048b8a828b01620003ee565b96505060406200049e8a828b01620003ee565b9550506060620004b18a828b01620003ee565b9450506080620004c48a828b01620003ee565b93505060a0620004d78a828b016200042f565b92505060c0620004ea8a828b016200042f565b91505092959891949750929550565b600082825260208201905092915050565b7f4254433a302c204554483a312c204c494e4b3a32000000000000000000000000600082015250565b600062000542601483620004f9565b91506200054f826200050a565b602082019050919050565b60006020820190508181036000830152620005758162000533565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005e782620003ca565b9150620005f483620003ca565b9250828210156200060a5762000609620005ab565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200065182620003ca565b91506200065e83620003ca565b92508262000671576200067062000615565b5b828204905092915050565b61138b806200068c6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063a3f09ad6116100c3578063d2895e931161007c578063d2895e93146103ab578063dbd0e1b6146103db578063e0a73a93146103f9578063e99d286614610417578063f26cc58e14610447578063f2fde38b1461046557610158565b8063a3f09ad6146102c3578063b6fc2d5f146102f3578063bab215f814610311578063bd9a548b1461032d578063bef904e31461034b578063cbed24491461037b57610158565b8063715018a611610115578063715018a614610223578063762db7ee1461022d57806386be75b71461024b5780638a568299146102695780638da5cb5b14610287578063a2e800ad146102a557610158565b806315d655c91461015d578063200d2ed21461017b5780632e49d78b146101995780633fe3347a146101c95780634c1786ea146101e7578063603daf9a14610205575b600080fd5b610165610481565b6040516101729190610d04565b60405180910390f35b610183610487565b6040516101909190610d96565b60405180910390f35b6101b360048036038101906101ae9190610ddb565b61049a565b6040516101c09190610d96565b60405180910390f35b6101d16104e5565b6040516101de9190610e27565b60405180910390f35b6101ef6104fb565b6040516101fc9190610d04565b60405180910390f35b61020d610501565b60405161021a9190610e83565b60405180910390f35b61022b61052b565b005b61023561053f565b6040516102429190610d04565b60405180910390f35b610253610545565b6040516102609190610d04565b60405180910390f35b61027161054b565b60405161027e9190610e27565b60405180910390f35b61028f610561565b60405161029c9190610e83565b60405180910390f35b6102ad61058a565b6040516102ba9190610e27565b60405180910390f35b6102dd60048036038101906102d89190610eca565b6105a0565b6040516102ea9190610e83565b60405180910390f35b6102fb610615565b6040516103089190610d04565b60405180910390f35b61032b60048036038101906103269190610f2f565b61061b565b005b610335610645565b604051610342919061101a565b60405180910390f35b61036560048036038101906103609190611061565b610683565b6040516103729190610d04565b60405180910390f35b610395600480360381019061039091906110ba565b610696565b6040516103a29190610d04565b60405180910390f35b6103c560048036038101906103c091906110ba565b6108d7565b6040516103d29190610e27565b60405180910390f35b6103e361091c565b6040516103f09190610e83565b60405180910390f35b610401610946565b60405161040e9190610d04565b60405180910390f35b610431600480360381019061042c9190610eca565b61094c565b60405161043e9190610e83565b60405180910390f35b61044f6109c1565b60405161045c9190610d04565b60405180910390f35b61047f600480360381019061047a9190610eca565b610a19565b005b60045481565b600260149054906101000a900460ff1681565b60006104a4610af9565b81600260146101000a81548160ff021916908360048111156104c9576104c8610d1f565b5b0217905550600260149054906101000a900460ff169050919050565b600a601c9054906101000a900463ffffffff1681565b60075481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610533610af9565b61053d6000610b77565b565b60085481565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b60006105aa610af9565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b610623610af9565b80610636576106318261094c565b610640565b61063f826105a0565b5b505050565b61064d610cc9565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b60008060008363ffffffff1614156107565761074f6305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074191906110fc565b610ae390919063ffffffff16565b90506108ce565b60018363ffffffff1614156108135761080c6305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe91906110fc565b610ae390919063ffffffff16565b90506108cd565b60028363ffffffff1614156108cc576108c96305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb91906110fc565b610ae390919063ffffffff16565b90505b5b5b80915050919050565b60006108e1610af9565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000610956610af9565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109df600a601c9054906101000a900463ffffffff16610696565b90508060045410156109f5576000915050610a16565b610a1260055460035483600754610c3b909392919063ffffffff16565b9150505b90565b610a21610af9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a88906111ac565b60405180910390fd5b610a9a81610b77565b50565b6000610ac4610ab58486610acd90919063ffffffff16565b83610ae390919063ffffffff16565b90509392505050565b60008183610adb91906111fb565b905092915050565b60008183610af1919061125e565b905092915050565b610b01610cab565b73ffffffffffffffffffffffffffffffffffffffff16610b1f610561565b73ffffffffffffffffffffffffffffffffffffffff1614610b75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6c906112db565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080828510610c4d57859050610c9f565b6000610c74610c658787610acd90919063ffffffff16565b88610ae390919063ffffffff16565b9050610c9b610c8c8587610acd90919063ffffffff16565b82610cb390919063ffffffff16565b9150505b80915050949350505050565b600033905090565b60008183610cc191906112fb565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b610cfe81610ceb565b82525050565b6000602082019050610d196000830184610cf5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610d5f57610d5e610d1f565b5b50565b6000819050610d7082610d4e565b919050565b6000610d8082610d62565b9050919050565b610d9081610d75565b82525050565b6000602082019050610dab6000830184610d87565b92915050565b600080fd5b60058110610dc357600080fd5b50565b600081359050610dd581610db6565b92915050565b600060208284031215610df157610df0610db1565b5b6000610dff84828501610dc6565b91505092915050565b600063ffffffff82169050919050565b610e2181610e08565b82525050565b6000602082019050610e3c6000830184610e18565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6d82610e42565b9050919050565b610e7d81610e62565b82525050565b6000602082019050610e986000830184610e74565b92915050565b610ea781610e62565b8114610eb257600080fd5b50565b600081359050610ec481610e9e565b92915050565b600060208284031215610ee057610edf610db1565b5b6000610eee84828501610eb5565b91505092915050565b60008115159050919050565b610f0c81610ef7565b8114610f1757600080fd5b50565b600081359050610f2981610f03565b92915050565b60008060408385031215610f4657610f45610db1565b5b6000610f5485828601610eb5565b9250506020610f6585828601610f1a565b9150509250929050565b600060059050919050565b600081905092915050565b6000819050919050565b610f9881610ceb565b82525050565b6000610faa8383610f8f565b60208301905092915050565b6000602082019050919050565b610fcc81610f6f565b610fd68184610f7a565b9250610fe182610f85565b8060005b83811015611012578151610ff98782610f9e565b965061100483610fb6565b925050600181019050610fe5565b505050505050565b600060a08201905061102f6000830184610fc3565b92915050565b61103e81610ceb565b811461104957600080fd5b50565b60008135905061105b81611035565b92915050565b60006020828403121561107757611076610db1565b5b60006110858482850161104c565b91505092915050565b61109781610e08565b81146110a257600080fd5b50565b6000813590506110b48161108e565b92915050565b6000602082840312156110d0576110cf610db1565b5b60006110de848285016110a5565b91505092915050565b6000815190506110f681611035565b92915050565b60006020828403121561111257611111610db1565b5b6000611120848285016110e7565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611196602683611129565b91506111a18261113a565b604082019050919050565b600060208201905081810360008301526111c581611189565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120682610ceb565b915061121183610ceb565b925082821015611224576112236111cc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061126982610ceb565b915061127483610ceb565b9250826112845761128361122f565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112c5602083611129565b91506112d08261128f565b602082019050919050565b600060208201905081810360008301526112f4816112b8565b9050919050565b600061130682610ceb565b915061131183610ceb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561134a576113496111cc565b5b82820290509291505056fea2646970667358221220fc59a868dc75531b9051ad931d0ec0445ccd16e2a8f06987917cfbda2668dedb64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A17 CODESIZE SUB DUP1 PUSH3 0x1A17 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x446 JUMP JUMPDEST PUSH20 0xF2A3FA0266A0FEFFA87DA45F0D3C45AC66FE05C5 PUSH3 0x6C PUSH3 0x60 PUSH3 0x28B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x293 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x135 PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH3 0x357 PUSH1 0x20 SHL PUSH3 0xA9D OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH3 0x157 JUMPI POP PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x169 JUMPI POP PUSH1 0x2 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH3 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A2 SWAP1 PUSH3 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH3 0x278 PUSH3 0x57C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x67C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x38C PUSH3 0x377 DUP5 DUP7 PUSH3 0x395 PUSH1 0x20 SHL PUSH3 0xACD OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0x3AD PUSH1 0x20 SHL PUSH3 0xAE3 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x3A5 SWAP2 SWAP1 PUSH3 0x5DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x3BD SWAP2 SWAP1 PUSH3 0x644 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DF DUP2 PUSH3 0x3CA JUMP JUMPDEST DUP2 EQ PUSH3 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3FF DUP2 PUSH3 0x3D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x420 DUP2 PUSH3 0x405 JUMP JUMPDEST DUP2 EQ PUSH3 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x440 DUP2 PUSH3 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x468 JUMPI PUSH3 0x467 PUSH3 0x3C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x478 DUP11 DUP3 DUP12 ADD PUSH3 0x3EE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x48B DUP11 DUP3 DUP12 ADD PUSH3 0x3EE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x49E DUP11 DUP3 DUP12 ADD PUSH3 0x3EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x4B1 DUP11 DUP3 DUP12 ADD PUSH3 0x3EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x4C4 DUP11 DUP3 DUP12 ADD PUSH3 0x3EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x4D7 DUP11 DUP3 DUP12 ADD PUSH3 0x42F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x4EA DUP11 DUP3 DUP12 ADD PUSH3 0x42F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254433A302C204554483A312C204C494E4B3A32000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x542 PUSH1 0x14 DUP4 PUSH3 0x4F9 JUMP JUMPDEST SWAP2 POP PUSH3 0x54F DUP3 PUSH3 0x50A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x575 DUP2 PUSH3 0x533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x5E7 DUP3 PUSH3 0x3CA JUMP JUMPDEST SWAP2 POP PUSH3 0x5F4 DUP4 PUSH3 0x3CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x60A JUMPI PUSH3 0x609 PUSH3 0x5AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x651 DUP3 PUSH3 0x3CA JUMP JUMPDEST SWAP2 POP PUSH3 0x65E DUP4 PUSH3 0x3CA JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x671 JUMPI PUSH3 0x670 PUSH3 0x615 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x138B DUP1 PUSH3 0x68C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F09AD6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD2895E93 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2895E93 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x465 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x37B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x762DB7EE EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x2A5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A4 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4C9 JUMPI PUSH2 0x4C8 PUSH2 0xD1F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x533 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x53D PUSH1 0x0 PUSH2 0xB77 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x623 PUSH2 0xAF9 JUMP JUMPDEST DUP1 PUSH2 0x636 JUMPI PUSH2 0x631 DUP3 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x63F DUP3 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64D PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x756 JUMPI PUSH2 0x74F PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x813 JUMPI PUSH2 0x80C PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x8CC JUMPI PUSH2 0x8C9 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E1 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x956 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9DF PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x696 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA12 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0xC3B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA21 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA88 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0xB77 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC4 PUSH2 0xAB5 DUP5 DUP7 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB01 PUSH2 0xCAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0xC4D JUMPI DUP6 SWAP1 POP PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH2 0xC65 DUP8 DUP8 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9B PUSH2 0xC8C DUP6 DUP8 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0xCB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFE DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0xD1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xD70 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD80 DUP3 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD90 DUP2 PUSH2 0xD75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFF DUP5 DUP3 DUP6 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE21 DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEDF PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP5 DUP3 DUP6 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF29 DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF65 DUP6 DUP3 DUP7 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA DUP4 DUP4 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCC DUP2 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xFD6 DUP2 DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 POP PUSH2 0xFE1 DUP3 PUSH2 0xF85 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1012 JUMPI DUP2 MLOAD PUSH2 0xFF9 DUP8 DUP3 PUSH2 0xF9E JUMP JUMPDEST SWAP7 POP PUSH2 0x1004 DUP4 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFE5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x102F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105B DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1085 DUP5 DUP3 DUP6 ADD PUSH2 0x104C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1097 DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B4 DUP2 PUSH2 0x108E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D0 JUMPI PUSH2 0x10CF PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10DE DUP5 DUP3 DUP6 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F6 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP5 DUP3 DUP6 ADD PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 PUSH1 0x26 DUP4 PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A1 DUP3 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11C5 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1206 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1211 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x1223 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1274 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1284 JUMPI PUSH2 0x1283 PUSH2 0x122F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C5 PUSH1 0x20 DUP4 PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D0 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F4 DUP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC MSIZE 0xA8 PUSH9 0xDC75531B9051AD931D 0xE 0xC0 DIFFICULTY 0x5C 0xCD AND 0xE2 0xA8 CREATE PUSH10 0x87917CFBDA2668DEDB64 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "208:2749:3:-:0;;;793:740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;247:42;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;321:8:4;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;1010:15:3;993:14;:32;;;;1044:11;1031:10;:24;;;;1080:17;1061:16;:36;;;;1113:8;1103:7;:18;;;;1143:14;1127:13;:30;;;;1172:7;1163:6;;:16;;;;;;;;;;;;;;;;;;1199:7;1185:11;;:21;;;;;;;;;;;;;;;;;;1228:83;1268:16;;1292:13;;1228:14;;:32;;;;;;:83;;;;;:::i;:::-;1212:13;:99;;;;1346:1;1332:10;:15;;;:34;;;;1365:1;1351:10;:15;;;1332:34;:53;;;;1384:1;1370:10;:15;;;1332:53;1317:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1439:10;1427:9;;:22;;;;;;;;;;;;;;;;;;1472:1;1456:5;;:18;;;;;;;;;;;;;;;;;;1497:1;1480:6;;:19;;;;;;;;;;;;;;;;;;1514:14;1505:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;793:740;;;;;;;208:2749;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;592:203:6:-;722:7;744:46;763:26;776:12;763:8;:12;;;;;;:26;;;;:::i;:::-;744:14;:18;;;;;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;3122:96:2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:93::-;730:7;770:10;763:5;759:22;748:33;;694:93;;;:::o;793:120::-;865:23;882:5;865:23;:::i;:::-;858:5;855:34;845:62;;903:1;900;893:12;845:62;793:120;:::o;919:141::-;975:5;1006:6;1000:13;991:22;;1022:32;1048:5;1022:32;:::i;:::-;919:141;;;;:::o;1066:1287::-;1188:6;1196;1204;1212;1220;1228;1236;1285:3;1273:9;1264:7;1260:23;1256:33;1253:120;;;1292:79;;:::i;:::-;1253:120;1412:1;1437:64;1493:7;1484:6;1473:9;1469:22;1437:64;:::i;:::-;1427:74;;1383:128;1550:2;1576:64;1632:7;1623:6;1612:9;1608:22;1576:64;:::i;:::-;1566:74;;1521:129;1689:2;1715:64;1771:7;1762:6;1751:9;1747:22;1715:64;:::i;:::-;1705:74;;1660:129;1828:2;1854:64;1910:7;1901:6;1890:9;1886:22;1854:64;:::i;:::-;1844:74;;1799:129;1967:3;1994:64;2050:7;2041:6;2030:9;2026:22;1994:64;:::i;:::-;1984:74;;1938:130;2107:3;2134:63;2189:7;2180:6;2169:9;2165:22;2134:63;:::i;:::-;2124:73;;2078:129;2246:3;2273:63;2328:7;2319:6;2308:9;2304:22;2273:63;:::i;:::-;2263:73;;2217:129;1066:1287;;;;;;;;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:170::-;2674:22;2670:1;2662:6;2658:14;2651:46;2534:170;:::o;2710:366::-;2852:3;2873:67;2937:2;2932:3;2873:67;:::i;:::-;2866:74;;2949:93;3038:3;2949:93;:::i;:::-;3067:2;3062:3;3058:12;3051:19;;2710:366;;;:::o;3082:419::-;3248:4;3286:2;3275:9;3271:18;3263:26;;3335:9;3329:4;3325:20;3321:1;3310:9;3306:17;3299:47;3363:131;3489:4;3363:131;:::i;:::-;3355:139;;3082:419;;;:::o;3507:180::-;3555:77;3552:1;3545:88;3652:4;3649:1;3642:15;3676:4;3673:1;3666:15;3693:180;3741:77;3738:1;3731:88;3838:4;3835:1;3828:15;3862:4;3859:1;3852:15;3879:191;3919:4;3939:20;3957:1;3939:20;:::i;:::-;3934:25;;3973:20;3991:1;3973:20;:::i;:::-;3968:25;;4012:1;4009;4006:8;4003:34;;;4017:18;;:::i;:::-;4003:34;4062:1;4059;4055:9;4047:17;;3879:191;;;;:::o;4076:180::-;4124:77;4121:1;4114:88;4221:4;4218:1;4211:15;4245:4;4242:1;4235:15;4262:185;4302:1;4319:20;4337:1;4319:20;:::i;:::-;4314:25;;4353:20;4371:1;4353:20;:::i;:::-;4348:25;;4392:1;4382:35;;4397:18;;:::i;:::-;4382:35;4439:1;4436;4432:9;4427:14;;4262:185;;;;:::o;208:2749:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2809,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 3243,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2935,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@amountOfAsset_483": {
									"entryPoint": 1343,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assetType_493": {
									"entryPoint": 1253,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_968": {
									"entryPoint": 2717,
									"id": 968,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcClaimReward_948": {
									"entryPoint": 3131,
									"id": 948,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@claimPrice_475": {
									"entryPoint": 1153,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_355": {
									"entryPoint": 2787,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBuyer_608": {
									"entryPoint": 1281,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getClaimReward_642": {
									"entryPoint": 2497,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrPrice_825": {
									"entryPoint": 1686,
									"id": 825,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPrices_600": {
									"entryPoint": 1605,
									"id": 600,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSeller_616": {
									"entryPoint": 2332,
									"id": 616,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initAssetPrice_473": {
									"entryPoint": 1349,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidationPrice_477": {
									"entryPoint": 1557,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_340": {
									"entryPoint": 3251,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1377,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@premium_479": {
									"entryPoint": 2374,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1323,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rounds_489": {
									"entryPoint": 1418,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellerDeposit_481": {
									"entryPoint": 1275,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyer_709": {
									"entryPoint": 1440,
									"id": 709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setInitAssetPrice_656": {
									"entryPoint": 1667,
									"id": 656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setParticipants_693": {
									"entryPoint": 1563,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRounds_741": {
									"entryPoint": 2263,
									"id": 741,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setSeller_725": {
									"entryPoint": 2380,
									"id": 725,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setStatus_674": {
									"entryPoint": 1178,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@status_471": {
									"entryPoint": 1159,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_325": {
									"entryPoint": 2765,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRounds_491": {
									"entryPoint": 1355,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2585,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Status_$468": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_Status_$468": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 4282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 4035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$468": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$468_to_t_uint8": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$468": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Status_$468": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11698:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:62:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "717:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "704:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "711:1:7",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "701:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:20:7"
															},
															"nodeType": "YulIf",
															"src": "691:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "674:5:7",
														"type": ""
													}
												],
												"src": "628:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "825:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "814:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "868:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "831:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:43:7"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "796:7:7",
														"type": ""
													}
												],
												"src": "749:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:63:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:47:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1005:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "977:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:34:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "964:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$468_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "944:9:7",
														"type": ""
													}
												],
												"src": "886:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1113:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1157:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$468_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1118:38:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:58:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1084:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1091:3:7",
														"type": ""
													}
												],
												"src": "1023:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:132:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1292:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1292:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1328:51:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:79:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1254:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1266:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1277:4:7",
														"type": ""
													}
												],
												"src": "1176:238:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1470:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1480:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1453:6:7",
														"type": ""
													}
												],
												"src": "1420:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1501:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1624:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1800:56:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1843:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:1:7",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1820:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:20:7"
															},
															"nodeType": "YulIf",
															"src": "1810:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1793:5:7",
														"type": ""
													}
												],
												"src": "1747:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1924:97:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1934:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1943:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1934:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2009:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "1972:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1972:43:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1902:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1910:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1918:5:7",
														"type": ""
													}
												],
												"src": "1862:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:273:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2149:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2151:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2124:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2120:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:32:7"
															},
															"nodeType": "YulIf",
															"src": "2113:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2242:127:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2257:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2271:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2261:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2286:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2331:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2342:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2327:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2327:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2351:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Status_$468",
																			"nodeType": "YulIdentifier",
																			"src": "2296:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2286:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2073:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2084:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2096:6:7",
														"type": ""
													}
												],
												"src": "2027:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2426:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2436:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2451:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2436:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2408:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2418:7:7",
														"type": ""
													}
												],
												"src": "2382:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2561:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "2566:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2532:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2539:3:7",
														"type": ""
													}
												],
												"src": "2481:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2698:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2708:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2799:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2795:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2795:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2744:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2670:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2682:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2693:4:7",
														"type": ""
													}
												],
												"src": "2602:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2871:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2881:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2896:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2892:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2881:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2853:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2863:7:7",
														"type": ""
													}
												],
												"src": "2826:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3013:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3042:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3024:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3013:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2985:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2995:7:7",
														"type": ""
													}
												],
												"src": "2958:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3125:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3142:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3165:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3147:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3113:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3120:3:7",
														"type": ""
													}
												],
												"src": "3060:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3292:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3304:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3292:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3372:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3328:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3254:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3266:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3277:4:7",
														"type": ""
													}
												],
												"src": "3184:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3512:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3524:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3514:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3514:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3514:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3478:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3503:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3485:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3475:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:43:7"
															},
															"nodeType": "YulIf",
															"src": "3465:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3448:5:7",
														"type": ""
													}
												],
												"src": "3412:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3624:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3611:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3602:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3667:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3640:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3570:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3586:5:7",
														"type": ""
													}
												],
												"src": "3540:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3751:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3797:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3799:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3799:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3772:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3781:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3764:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:32:7"
															},
															"nodeType": "YulIf",
															"src": "3761:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3890:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3905:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3919:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3909:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3934:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3969:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3980:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3965:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3944:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3944:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3934:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3721:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3732:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3744:6:7",
														"type": ""
													}
												],
												"src": "3685:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4062:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4072:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4097:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4090:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4090:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4072:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4044:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4054:7:7",
														"type": ""
													}
												],
												"src": "4020:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4156:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4210:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4219:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4222:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4212:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4212:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4212:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4179:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4201:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4186:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4186:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4176:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:40:7"
															},
															"nodeType": "YulIf",
															"src": "4166:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4149:5:7",
														"type": ""
													}
												],
												"src": "4116:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4287:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4297:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4306:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4306:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4297:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4359:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4335:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4335:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4335:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4265:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4273:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4281:5:7",
														"type": ""
													}
												],
												"src": "4238:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4457:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4503:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4505:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4505:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4505:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4478:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4499:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4470:32:7"
															},
															"nodeType": "YulIf",
															"src": "4467:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4596:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4611:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4615:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4640:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4675:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4686:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4671:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4695:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4650:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4650:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4640:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4723:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4738:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4752:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4742:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4768:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4800:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4811:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4796:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4796:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4820:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4778:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4778:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4768:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4430:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4442:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4450:6:7",
														"type": ""
													}
												],
												"src": "4377:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4923:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4944:4:7",
																"type": "",
																"value": "0x05"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4906:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4916:6:7",
														"type": ""
													}
												],
												"src": "4851:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5080:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5095:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5080:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5042:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5047:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5058:11:7",
														"type": ""
													}
												],
												"src": "4961:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5190:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5198:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5190:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5167:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5175:4:7",
														"type": ""
													}
												],
												"src": "5110:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5309:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5291:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5291:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5279:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5257:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5264:3:7",
														"type": ""
													}
												],
												"src": "5214:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5408:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5452:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5460:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5418:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5473:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5491:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5496:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5473:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5381:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5389:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5397:10:7",
														"type": ""
													}
												],
												"src": "5328:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5586:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5596:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5608:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5613:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5604:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "5596:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5573:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "5581:4:7",
														"type": ""
													}
												],
												"src": "5513:111:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5774:582:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5784:66:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5844:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5798:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:52:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5788:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5859:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5938:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5943:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5866:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5859:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5959:69:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6022:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5974:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:54:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5963:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6037:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "6051:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6041:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6127:222:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6141:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6168:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6162:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6162:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "6145:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6188:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "6239:13:7"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6254:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6195:43:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6195:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6188:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6271:68:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6332:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "6281:50:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6281:58:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6271:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6089:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6092:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6086:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6100:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6102:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6111:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6114:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6107:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6107:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6102:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6071:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6082:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "6077:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6067:282:7"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5761:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5768:3:7",
														"type": ""
													}
												],
												"src": "5662:694:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6506:171:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6516:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6528:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6524:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6524:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6516:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6643:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6656:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6667:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6652:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6553:89:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:117:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:117:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6478:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6490:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6501:4:7",
														"type": ""
													}
												],
												"src": "6362:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6726:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6783:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6792:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6795:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6785:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6785:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6785:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6749:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6774:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6756:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6756:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6746:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6746:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6739:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:43:7"
															},
															"nodeType": "YulIf",
															"src": "6736:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6719:5:7",
														"type": ""
													}
												],
												"src": "6683:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6873:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6895:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6882:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6873:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6938:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6911:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6841:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6849:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6857:5:7",
														"type": ""
													}
												],
												"src": "6811:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7022:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7068:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7070:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7070:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7070:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7043:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7052:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7064:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7035:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7035:32:7"
															},
															"nodeType": "YulIf",
															"src": "7032:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7161:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7176:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7180:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7205:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7240:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7251:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7236:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7236:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7260:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7215:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7215:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7205:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6992:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7003:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7015:6:7",
														"type": ""
													}
												],
												"src": "6956:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7333:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7389:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7398:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7401:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7391:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7391:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7391:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7356:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7380:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "7363:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7363:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7353:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7353:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:42:7"
															},
															"nodeType": "YulIf",
															"src": "7343:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7326:5:7",
														"type": ""
													}
												],
												"src": "7291:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7468:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7478:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7487:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7487:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7478:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7542:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "7516:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7516:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7446:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7454:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7462:5:7",
														"type": ""
													}
												],
												"src": "7417:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7625:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7671:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7673:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7673:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7673:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7646:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7655:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7667:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7638:32:7"
															},
															"nodeType": "YulIf",
															"src": "7635:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7764:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7779:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7793:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7783:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7808:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7842:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7853:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7838:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7838:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7862:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "7818:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7808:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7595:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7606:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7618:6:7",
														"type": ""
													}
												],
												"src": "7560:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7956:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7966:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7981:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7975:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7966:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8024:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7997:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7997:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7997:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7934:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7942:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7950:5:7",
														"type": ""
													}
												],
												"src": "7893:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8119:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8165:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8167:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8167:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8167:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8140:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8136:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8136:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8161:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:32:7"
															},
															"nodeType": "YulIf",
															"src": "8129:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8258:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8273:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8277:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8302:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8348:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8359:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8344:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8344:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8368:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8312:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8312:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8302:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8089:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8100:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8112:6:7",
														"type": ""
													}
												],
												"src": "8042:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8495:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8512:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8517:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8505:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8505:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8533:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8552:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8548:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8548:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8533:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8467:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8472:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8483:11:7",
														"type": ""
													}
												],
												"src": "8399:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8702:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8710:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8698:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8714:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8691:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8766:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8783:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8759:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8759:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8672:6:7",
														"type": ""
													}
												],
												"src": "8574:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8951:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8961:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9027:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9032:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8968:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8961:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9133:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9044:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9146:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9157:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9162:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8939:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8947:3:7",
														"type": ""
													}
												],
												"src": "8805:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9348:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9358:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9370:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9381:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9366:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9366:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9358:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9416:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9401:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9424:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9430:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9394:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9450:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9584:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9458:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9458:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9450:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9328:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9343:4:7",
														"type": ""
													}
												],
												"src": "9177:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9630:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9650:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9640:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9744:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9747:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9737:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9737:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9768:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9761:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9761:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9761:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9602:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9833:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9843:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9866:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9848:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9843:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9877:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9900:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9882:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9882:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9877:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9924:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9926:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9926:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9926:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9918:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9921:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9915:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:8:7"
															},
															"nodeType": "YulIf",
															"src": "9912:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9956:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9968:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9971:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9964:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9956:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9819:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9822:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9828:4:7",
														"type": ""
													}
												],
												"src": "9788:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10013:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10030:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10033:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10023:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10023:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10151:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9985:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10213:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10223:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10246:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10228:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10228:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10223:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10257:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10280:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10262:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10257:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10304:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10306:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10306:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10306:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10301:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10294:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10294:9:7"
															},
															"nodeType": "YulIf",
															"src": "10291:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10336:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10345:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10348:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10341:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10341:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10336:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10202:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10205:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10211:1:7",
														"type": ""
													}
												],
												"src": "10171:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10468:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10490:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10498:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10486:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10502:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10479:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10460:6:7",
														"type": ""
													}
												],
												"src": "10362:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10696:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10706:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10772:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10713:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10706:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10878:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10789:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10789:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10891:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10902:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10907:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10898:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10891:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10684:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10692:3:7",
														"type": ""
													}
												],
												"src": "10550:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11093:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11103:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11115:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11103:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11150:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11161:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11146:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11146:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11169:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11175:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11139:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11139:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11139:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11195:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11329:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11203:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11203:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11195:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11073:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11088:4:7",
														"type": ""
													}
												],
												"src": "10922:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11428:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11410:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11410:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11405:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11439:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11462:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11439:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11637:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11639:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11639:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11639:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11549:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11542:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11542:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11535:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11535:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11557:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11564:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11632:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11560:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11560:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11554:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11554:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11531:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:105:7"
															},
															"nodeType": "YulIf",
															"src": "11528:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11669:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11684:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11687:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11680:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11669:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11378:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11381:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11387:7:7",
														"type": ""
													}
												],
												"src": "11347:348:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$468(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$468(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$468(value)\n    }\n\n    function convert_t_enum$_Status_$468_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$468(value)\n    }\n\n    function abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$468_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_Status_$468(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Status_$468(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Status_$468(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Status_$468(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Status_$468(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F09AD6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD2895E93 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2895E93 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x465 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x37B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x762DB7EE EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x2A5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A4 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4C9 JUMPI PUSH2 0x4C8 PUSH2 0xD1F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x533 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x53D PUSH1 0x0 PUSH2 0xB77 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x623 PUSH2 0xAF9 JUMP JUMPDEST DUP1 PUSH2 0x636 JUMPI PUSH2 0x631 DUP3 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x63F DUP3 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64D PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x756 JUMPI PUSH2 0x74F PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x813 JUMPI PUSH2 0x80C PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x8CC JUMPI PUSH2 0x8C9 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E1 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x956 PUSH2 0xAF9 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9DF PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x696 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA12 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0xC3B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA21 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA88 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0xB77 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC4 PUSH2 0xAB5 DUP5 DUP7 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB01 PUSH2 0xCAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0xC4D JUMPI DUP6 SWAP1 POP PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH2 0xC65 DUP8 DUP8 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0xAE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9B PUSH2 0xC8C DUP6 DUP8 PUSH2 0xACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0xCB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFE DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0xD1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xD70 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD80 DUP3 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD90 DUP2 PUSH2 0xD75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFF DUP5 DUP3 DUP6 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE21 DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEDF PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP5 DUP3 DUP6 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF29 DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF65 DUP6 DUP3 DUP7 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA DUP4 DUP4 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCC DUP2 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xFD6 DUP2 DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 POP PUSH2 0xFE1 DUP3 PUSH2 0xF85 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1012 JUMPI DUP2 MLOAD PUSH2 0xFF9 DUP8 DUP3 PUSH2 0xF9E JUMP JUMPDEST SWAP7 POP PUSH2 0x1004 DUP4 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFE5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x102F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105B DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1085 DUP5 DUP3 DUP6 ADD PUSH2 0x104C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1097 DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B4 DUP2 PUSH2 0x108E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D0 JUMPI PUSH2 0x10CF PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10DE DUP5 DUP3 DUP6 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F6 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP5 DUP3 DUP6 ADD PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 PUSH1 0x26 DUP4 PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A1 DUP3 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11C5 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1206 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1211 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x1223 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1274 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1284 JUMPI PUSH2 0x1283 PUSH2 0x122F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C5 PUSH1 0x20 DUP4 PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D0 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F4 DUP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC MSIZE 0xA8 PUSH9 0xDC75531B9051AD931D 0xE 0xC0 DIFFICULTY 0x5C 0xCD AND 0xE2 0xA8 CREATE PUSH10 0x87917CFBDA2668DEDB64 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "208:2749:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2328:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;629:28:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;736:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;712:20:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2603:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2447:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1537:185;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2177:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;339:368:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2840:115:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2719:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1882:291;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;507:25:3;;;;:::o;449:20::-;;;;;;;;;;;;;:::o;2328:115::-;2389:6;1094:13:0;:11;:13::i;:::-;2412:7:3::1;2403:6;;:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2432:6;;;;;;;;;;;2425:13;;2328:115:::0;;;:::o;765:23::-;;;;;;;;;;;;;:::o;597:28::-;;;;:::o;1726:73::-;1767:7;1789:5;;;;;;;;;;;1782:12;;1726:73;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;629:28:3:-;;;;:::o;474:29::-;;;;:::o;736:25::-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;712:20:3:-;;;;;;;;;;;;;:::o;2603:112::-;2663:7;1094:13:0;:11;:13::i;:::-;2686:6:3::1;2678:5;;:14;;;;;;;;;;;;;;;;;;2705:5;;;;;;;;;;;2698:12;;2603:112:::0;;;:::o;536:31::-;;;;:::o;2447:152::-;1094:13:0;:11;:13::i;:::-;2533:8:3::1;:61;;2570:24;2580:13;2570:9;:24::i;:::-;2533:61;;;2544:23;2553:13;2544:8;:23::i;:::-;2533:61;;2447:152:::0;;:::o;1537:185::-;1579:17;;:::i;:::-;1604:113;;;;;;;;1619:14;;1604:113;;;;1641:10;;1604:113;;;;1659:16;;1604:113;;;;1683:7;;1604:113;;;;1698:13;;1604:113;;;;;1537:185;:::o;2177:147::-;2245:7;2277:15;2260:14;:32;;;;2305:14;;2298:21;;2177:147;;;:::o;339:368:4:-;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;2840:115:3:-;2901:6;1094:13:0;:11;:13::i;:::-;2924:7:3::1;2915:6;;:16;;;;;;;;;;;;;;;;;;2944:6;;;;;;;;;;;2937:13;;2840:115:::0;;;:::o;1803:75::-;1845:7;1867:6;;;;;;;;;;;1860:13;;1803:75;:::o;571:22::-;;;;:::o;2719:117::-;2781:7;1094:13:0;:11;:13::i;:::-;2805:7:3::1;2796:6;;:16;;;;;;;;;;;;;;;;;;2825:6;;;;;;;;;;;2818:13;;2719:117:::0;;;:::o;1882:291::-;1929:7;1944:17;1964:23;1977:9;;;;;;;;;;;1964:12;:23::i;:::-;1944:43;;2010:9;1997:10;;:22;1993:51;;;2036:1;2029:8;;;;;1993:51;2062:106;2101:16;;2127:14;;2151:9;2062:13;;:29;;:106;;;;;;:::i;:::-;2049:119;;;1882:291;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;592:203:6:-;722:7;744:46;763:26;776:12;763:8;:12;;:26;;;;:::i;:::-;744:14;:18;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;3122:96:2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;167:421:6:-;311:7;326:19;371:8;355:12;:24;351:209;;403:8;389:22;;351:209;;;432:18;453:40;466:26;479:12;466:8;:12;;:26;;;;:::i;:::-;453:8;:12;;:40;;;;:::i;:::-;432:61;;515:38;530:22;543:8;530;:12;;:22;;;;:::i;:::-;515:10;:14;;:38;;;;:::i;:::-;501:52;;424:136;351:209;572:11;565:18;;;167:421;;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;3465::2:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:115;711:1;704:5;701:12;691:46;;717:18;;:::i;:::-;691:46;628:115;:::o;749:131::-;796:7;825:5;814:16;;831:43;868:5;831:43;:::i;:::-;749:131;;;:::o;886:::-;944:9;977:34;1005:5;977:34;:::i;:::-;964:47;;886:131;;;:::o;1023:147::-;1118:45;1157:5;1118:45;:::i;:::-;1113:3;1106:58;1023:147;;:::o;1176:238::-;1277:4;1315:2;1304:9;1300:18;1292:26;;1328:79;1404:1;1393:9;1389:17;1380:6;1328:79;:::i;:::-;1176:238;;;;:::o;1501:117::-;1610:1;1607;1600:12;1747:109;1830:1;1823:5;1820:12;1810:40;;1846:1;1843;1836:12;1810:40;1747:109;:::o;1862:159::-;1918:5;1956:6;1943:20;1934:29;;1972:43;2009:5;1972:43;:::i;:::-;1862:159;;;;:::o;2027:349::-;2096:6;2145:2;2133:9;2124:7;2120:23;2116:32;2113:119;;;2151:79;;:::i;:::-;2113:119;2271:1;2296:63;2351:7;2342:6;2331:9;2327:22;2296:63;:::i;:::-;2286:73;;2242:127;2027:349;;;;:::o;2382:93::-;2418:7;2458:10;2451:5;2447:22;2436:33;;2382:93;;;:::o;2481:115::-;2566:23;2583:5;2566:23;:::i;:::-;2561:3;2554:36;2481:115;;:::o;2602:218::-;2693:4;2731:2;2720:9;2716:18;2708:26;;2744:69;2810:1;2799:9;2795:17;2786:6;2744:69;:::i;:::-;2602:218;;;;:::o;2826:126::-;2863:7;2903:42;2896:5;2892:54;2881:65;;2826:126;;;:::o;2958:96::-;2995:7;3024:24;3042:5;3024:24;:::i;:::-;3013:35;;2958:96;;;:::o;3060:118::-;3147:24;3165:5;3147:24;:::i;:::-;3142:3;3135:37;3060:118;;:::o;3184:222::-;3277:4;3315:2;3304:9;3300:18;3292:26;;3328:71;3396:1;3385:9;3381:17;3372:6;3328:71;:::i;:::-;3184:222;;;;:::o;3412:122::-;3485:24;3503:5;3485:24;:::i;:::-;3478:5;3475:35;3465:63;;3524:1;3521;3514:12;3465:63;3412:122;:::o;3540:139::-;3586:5;3624:6;3611:20;3602:29;;3640:33;3667:5;3640:33;:::i;:::-;3540:139;;;;:::o;3685:329::-;3744:6;3793:2;3781:9;3772:7;3768:23;3764:32;3761:119;;;3799:79;;:::i;:::-;3761:119;3919:1;3944:53;3989:7;3980:6;3969:9;3965:22;3944:53;:::i;:::-;3934:63;;3890:117;3685:329;;;;:::o;4020:90::-;4054:7;4097:5;4090:13;4083:21;4072:32;;4020:90;;;:::o;4116:116::-;4186:21;4201:5;4186:21;:::i;:::-;4179:5;4176:32;4166:60;;4222:1;4219;4212:12;4166:60;4116:116;:::o;4238:133::-;4281:5;4319:6;4306:20;4297:29;;4335:30;4359:5;4335:30;:::i;:::-;4238:133;;;;:::o;4377:468::-;4442:6;4450;4499:2;4487:9;4478:7;4474:23;4470:32;4467:119;;;4505:79;;:::i;:::-;4467:119;4625:1;4650:53;4695:7;4686:6;4675:9;4671:22;4650:53;:::i;:::-;4640:63;;4596:117;4752:2;4778:50;4820:7;4811:6;4800:9;4796:22;4778:50;:::i;:::-;4768:60;;4723:115;4377:468;;;;;:::o;4851:104::-;4916:6;4944:4;4934:14;;4851:104;;;:::o;4961:143::-;5058:11;5095:3;5080:18;;4961:143;;;;:::o;5110:98::-;5175:4;5198:3;5190:11;;5110:98;;;:::o;5214:108::-;5291:24;5309:5;5291:24;:::i;:::-;5286:3;5279:37;5214:108;;:::o;5328:179::-;5397:10;5418:46;5460:3;5452:6;5418:46;:::i;:::-;5496:4;5491:3;5487:14;5473:28;;5328:179;;;;:::o;5513:111::-;5581:4;5613;5608:3;5604:14;5596:22;;5513:111;;;:::o;5662:694::-;5798:52;5844:5;5798:52;:::i;:::-;5866:84;5943:6;5938:3;5866:84;:::i;:::-;5859:91;;5974:54;6022:5;5974:54;:::i;:::-;6051:7;6082:1;6067:282;6092:6;6089:1;6086:13;6067:282;;;6168:6;6162:13;6195:63;6254:3;6239:13;6195:63;:::i;:::-;6188:70;;6281:58;6332:6;6281:58;:::i;:::-;6271:68;;6127:222;6114:1;6111;6107:9;6102:14;;6067:282;;;6071:14;5774:582;;;5662:694;;:::o;6362:315::-;6501:4;6539:3;6528:9;6524:19;6516:27;;6553:117;6667:1;6656:9;6652:17;6643:6;6553:117;:::i;:::-;6362:315;;;;:::o;6683:122::-;6756:24;6774:5;6756:24;:::i;:::-;6749:5;6746:35;6736:63;;6795:1;6792;6785:12;6736:63;6683:122;:::o;6811:139::-;6857:5;6895:6;6882:20;6873:29;;6911:33;6938:5;6911:33;:::i;:::-;6811:139;;;;:::o;6956:329::-;7015:6;7064:2;7052:9;7043:7;7039:23;7035:32;7032:119;;;7070:79;;:::i;:::-;7032:119;7190:1;7215:53;7260:7;7251:6;7240:9;7236:22;7215:53;:::i;:::-;7205:63;;7161:117;6956:329;;;;:::o;7291:120::-;7363:23;7380:5;7363:23;:::i;:::-;7356:5;7353:34;7343:62;;7401:1;7398;7391:12;7343:62;7291:120;:::o;7417:137::-;7462:5;7500:6;7487:20;7478:29;;7516:32;7542:5;7516:32;:::i;:::-;7417:137;;;;:::o;7560:327::-;7618:6;7667:2;7655:9;7646:7;7642:23;7638:32;7635:119;;;7673:79;;:::i;:::-;7635:119;7793:1;7818:52;7862:7;7853:6;7842:9;7838:22;7818:52;:::i;:::-;7808:62;;7764:116;7560:327;;;;:::o;7893:143::-;7950:5;7981:6;7975:13;7966:22;;7997:33;8024:5;7997:33;:::i;:::-;7893:143;;;;:::o;8042:351::-;8112:6;8161:2;8149:9;8140:7;8136:23;8132:32;8129:119;;;8167:79;;:::i;:::-;8129:119;8287:1;8312:64;8368:7;8359:6;8348:9;8344:22;8312:64;:::i;:::-;8302:74;;8258:128;8042:351;;;;:::o;8399:169::-;8483:11;8517:6;8512:3;8505:19;8557:4;8552:3;8548:14;8533:29;;8399:169;;;;:::o;8574:225::-;8714:34;8710:1;8702:6;8698:14;8691:58;8783:8;8778:2;8770:6;8766:15;8759:33;8574:225;:::o;8805:366::-;8947:3;8968:67;9032:2;9027:3;8968:67;:::i;:::-;8961:74;;9044:93;9133:3;9044:93;:::i;:::-;9162:2;9157:3;9153:12;9146:19;;8805:366;;;:::o;9177:419::-;9343:4;9381:2;9370:9;9366:18;9358:26;;9430:9;9424:4;9420:20;9416:1;9405:9;9401:17;9394:47;9458:131;9584:4;9458:131;:::i;:::-;9450:139;;9177:419;;;:::o;9602:180::-;9650:77;9647:1;9640:88;9747:4;9744:1;9737:15;9771:4;9768:1;9761:15;9788:191;9828:4;9848:20;9866:1;9848:20;:::i;:::-;9843:25;;9882:20;9900:1;9882:20;:::i;:::-;9877:25;;9921:1;9918;9915:8;9912:34;;;9926:18;;:::i;:::-;9912:34;9971:1;9968;9964:9;9956:17;;9788:191;;;;:::o;9985:180::-;10033:77;10030:1;10023:88;10130:4;10127:1;10120:15;10154:4;10151:1;10144:15;10171:185;10211:1;10228:20;10246:1;10228:20;:::i;:::-;10223:25;;10262:20;10280:1;10262:20;:::i;:::-;10257:25;;10301:1;10291:35;;10306:18;;:::i;:::-;10291:35;10348:1;10345;10341:9;10336:14;;10171:185;;;;:::o;10362:182::-;10502:34;10498:1;10490:6;10486:14;10479:58;10362:182;:::o;10550:366::-;10692:3;10713:67;10777:2;10772:3;10713:67;:::i;:::-;10706:74;;10789:93;10878:3;10789:93;:::i;:::-;10907:2;10902:3;10898:12;10891:19;;10550:366;;;:::o;10922:419::-;11088:4;11126:2;11115:9;11111:18;11103:26;;11175:9;11169:4;11165:20;11161:1;11150:9;11146:17;11139:47;11203:131;11329:4;11203:131;:::i;:::-;11195:139;;10922:419;;;:::o;11347:348::-;11387:7;11410:20;11428:1;11410:20;:::i;:::-;11405:25;;11444:20;11462:1;11444:20;:::i;:::-;11439:25;;11632:1;11564:66;11560:74;11557:1;11554:81;11549:1;11542:9;11535:17;11531:105;11528:131;;;11639:18;;:::i;:::-;11528:131;11687:1;11684;11680:9;11669:20;;11347:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1000600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountOfAsset()": "2474",
								"assetType()": "2611",
								"claimPrice()": "2453",
								"getBuyer()": "2656",
								"getClaimReward()": "infinite",
								"getCurrPrice(uint32)": "infinite",
								"getPrices()": "infinite",
								"getSeller()": "2566",
								"initAssetPrice()": "2496",
								"liquidationPrice()": "2474",
								"owner()": "2633",
								"premium()": "2495",
								"renounceOwnership()": "30421",
								"rounds()": "2654",
								"sellerDeposit()": "2541",
								"setBuyer(address)": "infinite",
								"setInitAssetPrice(uint256)": "infinite",
								"setParticipants(address,bool)": "infinite",
								"setRounds(uint32)": "infinite",
								"setSeller(address)": "infinite",
								"setStatus(uint8)": "29509",
								"status()": "2656",
								"totalRounds()": "2610",
								"transferOwnership(address)": "30879"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 247,
									"end": 289,
									"name": "PUSH",
									"source": 3,
									"value": "F2A3FA0266A0FEFFA87DA45F0D3C45AC66FE05C5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1010,
									"end": 1025,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 993,
									"end": 1007,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 993,
									"end": 1025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 993,
									"end": 1025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 993,
									"end": 1025,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 993,
									"end": 1025,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1044,
									"end": 1055,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1031,
									"end": 1041,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1031,
									"end": 1055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1031,
									"end": 1055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1031,
									"end": 1055,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1031,
									"end": 1055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1097,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1077,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1061,
									"end": 1097,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1097,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1097,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1097,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1113,
									"end": 1121,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1110,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1140,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1127,
									"end": 1157,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1157,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1157,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1157,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1172,
									"end": 1179,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1169,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1163,
									"end": 1169,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1199,
									"end": 1206,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1196,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1185,
									"end": 1196,
									"name": "PUSH",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1268,
									"end": 1284,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1268,
									"end": 1284,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1242,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1228,
									"end": 1242,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551733"
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1260,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1228,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1225,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1212,
									"end": 1311,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1311,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1311,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1311,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1346,
									"end": 1347,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1342,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1347,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1347,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1347,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1351,
									"end": 1361,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1351,
									"end": 1366,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1366,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1351,
									"end": 1366,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1332,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1384,
									"end": 1385,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1380,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 1385,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1370,
									"end": 1385,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 1385,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1317,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1439,
									"end": 1449,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1436,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1427,
									"end": 1436,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1472,
									"end": 1473,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1514,
									"end": 1528,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 1528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 793,
									"end": 1533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 592,
									"end": 795,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 592,
									"end": 795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 776,
									"end": 788,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 763,
									"end": 771,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551734"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 763,
									"end": 775,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 763,
									"end": 789,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 763,
									"end": 789,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 744,
									"end": 758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551735"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 744,
									"end": 762,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 744,
									"end": 790,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 737,
									"end": 790,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 737,
									"end": 790,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 592,
									"end": 795,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3180,
									"end": 3187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3211,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3206,
									"end": 3207,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3199,
									"end": 3211,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3199,
									"end": 3211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3908,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 730,
									"end": 737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 780,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 763,
									"end": 768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 759,
									"end": 781,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 882,
									"end": 887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 858,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 855,
									"end": 889,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 903,
									"end": 904,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 901,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 893,
									"end": 905,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 975,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 1012,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1013,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1048,
									"end": 1053,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1288,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1283,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1289,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1413,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1493,
									"end": 1500,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1491,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1511,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1552,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1632,
									"end": 1639,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1630,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1771,
									"end": 1778,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1760,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1660,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1910,
									"end": 1917,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1899,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1908,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1928,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 1970,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2050,
									"end": 2057,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2030,
									"end": 2039,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2048,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1938,
									"end": 2068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2110,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2189,
									"end": 2196,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2187,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2078,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2249,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2319,
									"end": 2325,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2317,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2326,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2477,
									"end": 2483,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2472,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2465,
									"end": 2484,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2522,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2696,
									"name": "PUSH",
									"source": 7,
									"value": "4254433A302C204554483A312C204C494E4B3A32000000000000000000000000"
								},
								{
									"begin": 2670,
									"end": 2671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2662,
									"end": 2668,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2937,
									"end": 2939,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2932,
									"end": 2935,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3038,
									"end": 3041,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3069,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3062,
									"end": 3065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3058,
									"end": 3070,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3288,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3275,
									"end": 3284,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3289,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3335,
									"end": 3344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3345,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3319,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3346,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3489,
									"end": 3493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3632,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3545,
									"end": 3633,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3652,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3649,
									"end": 3650,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3676,
									"end": 3680,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3673,
									"end": 3674,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3681,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3693,
									"end": 3873,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3693,
									"end": 3873,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3818,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3738,
									"end": 3739,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3731,
									"end": 3819,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3842,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3835,
									"end": 3836,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3828,
									"end": 3843,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 3866,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3859,
									"end": 3860,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3852,
									"end": 3867,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3919,
									"end": 3923,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 3959,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 3959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3991,
									"end": 3992,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3968,
									"end": 3993,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3968,
									"end": 3993,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4012,
									"end": 4013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4010,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4006,
									"end": 4014,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4059,
									"end": 4060,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4055,
									"end": 4064,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4047,
									"end": 4064,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4047,
									"end": 4064,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4076,
									"end": 4256,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4076,
									"end": 4256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4124,
									"end": 4201,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4121,
									"end": 4122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4114,
									"end": 4202,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4221,
									"end": 4225,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 4218,
									"end": 4219,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4211,
									"end": 4226,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4245,
									"end": 4249,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4242,
									"end": 4243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4235,
									"end": 4250,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4337,
									"end": 4338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4339,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4371,
									"end": 4372,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4348,
									"end": 4373,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4348,
									"end": 4373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4392,
									"end": 4393,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4439,
									"end": 4440,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4436,
									"end": 4437,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4432,
									"end": 4441,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc59a868dc75531b9051ad931d0ec0445ccd16e2a8f06987917cfbda2668dedb64736f6c634300080a0033",
									".code": [
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "A3F09AD6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "D2895E93"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "D2895E93"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "DBD0E1B6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "E0A73A93"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "E99D2866"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "F26CC58E"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "A3F09AD6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "B6FC2D5F"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "BAB215F8"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "BD9A548B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "BEF904E3"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "CBED2449"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "762DB7EE"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "86BE75B7"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "8A568299"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "A2E800AD"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "15D655C9"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "200D2ED2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "2E49D78B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "3FE3347A"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "4C1786EA"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "603DAF9A"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 712,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2443,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 765,
											"end": 788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 765,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1799,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 712,
											"end": 732,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2683,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2678,
											"end": 2683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2715,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2580,
											"end": 2593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2599,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1619,
											"end": 1633,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1651,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1675,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1659,
											"end": 1675,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1722,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2260,
											"end": 2292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2292,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2305,
											"end": 2319,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2324,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2955,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 1987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 1987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2044,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1993,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1993,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2101,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2101,
											"end": 2117,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2127,
											"end": 2141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2062,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 2173,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 776,
											"end": 788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 763,
											"end": 771,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 763,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 763,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 744,
											"end": 758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 371,
											"end": 379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 355,
											"end": 379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 411,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 479,
											"end": 491,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 474,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 453,
											"end": 461,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 453,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 453,
											"end": 465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 543,
											"end": 551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 530,
											"end": 538,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 515,
											"end": 525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 515,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 424,
											"end": 560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 713,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 796,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 944,
											"end": 953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1157,
											"end": 1162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1106,
											"end": 1164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1823,
											"end": 1828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1832,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2340,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2468,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2469,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 2946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 2946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3042,
											"end": 3047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3510,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3779,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3791,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 4007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4110,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4186,
											"end": 4207,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4186,
											"end": 4207,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4186,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4224,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4502,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4467,
											"end": 4586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4586,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4467,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4650,
											"end": 4703,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4650,
											"end": 4703,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4650,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4820,
											"end": 4827,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4809,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4845,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4934,
											"end": 4948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4955,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5104,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5208,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5214,
											"end": 5322,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5214,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5291,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5309,
											"end": 5314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5291,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5291,
											"end": 5315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5291,
											"end": 5315,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5291,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5322,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5452,
											"end": 5458,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5418,
											"end": 5464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5418,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5491,
											"end": 5494,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5507,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5608,
											"end": 5611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5624,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5662,
											"end": 6356,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5662,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5844,
											"end": 5849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5798,
											"end": 5850,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5798,
											"end": 5850,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5798,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5866,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5941,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5866,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5866,
											"end": 5950,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5866,
											"end": 5950,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5866,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5950,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5974,
											"end": 6028,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 6028,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 5974,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6099,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6175,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6254,
											"end": 6257,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6195,
											"end": 6258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6195,
											"end": 6258,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6195,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6258,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6339,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6111,
											"end": 6112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6067,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6356,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6501,
											"end": 6505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6542,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6553,
											"end": 6670,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6553,
											"end": 6670,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6553,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6677,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6683,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6683,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6781,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6793,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6797,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6805,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 6938,
											"end": 6943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7052,
											"end": 7061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7050,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7062,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7151,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7032,
											"end": 7151,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7151,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7032,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7260,
											"end": 7267,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7257,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7249,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7215,
											"end": 7268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7215,
											"end": 7268,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7215,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7161,
											"end": 7278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7285,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7291,
											"end": 7411,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7291,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7380,
											"end": 7385,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7356,
											"end": 7361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7387,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7403,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7542,
											"end": 7547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7554,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7618,
											"end": 7624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7653,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7670,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7754,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7635,
											"end": 7754,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7673,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7673,
											"end": 7752,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7673,
											"end": 7752,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7673,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7754,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7635,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7862,
											"end": 7869,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7838,
											"end": 7860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7818,
											"end": 7870,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7818,
											"end": 7870,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7818,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7887,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 7988,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 7988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 7988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7997,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8024,
											"end": 8029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7997,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7997,
											"end": 8030,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8030,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7997,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 8036,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8147,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8136,
											"end": 8159,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8164,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8368,
											"end": 8375,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8312,
											"end": 8376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8376,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8312,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8393,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8505,
											"end": 8524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8568,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8574,
											"end": 8799,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8574,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8748,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8698,
											"end": 8712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8791,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8778,
											"end": 8780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8799,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 9032,
											"end": 9034,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 9035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 9035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9133,
											"end": 9136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9343,
											"end": 9347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9440,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9584,
											"end": 9588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9602,
											"end": 9782,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9602,
											"end": 9782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9727,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9647,
											"end": 9648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9737,
											"end": 9752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9776,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9828,
											"end": 9832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9866,
											"end": 9867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 9868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 9868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 9900,
											"end": 9901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9902,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9921,
											"end": 9922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9923,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9926,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9926,
											"end": 9944,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9944,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9926,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 9969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 9973,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9956,
											"end": 9973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9956,
											"end": 9973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9979,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9985,
											"end": 10165,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 9985,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10110,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10127,
											"end": 10128,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10158,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10159,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10228,
											"end": 10248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10228,
											"end": 10248,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10228,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10280,
											"end": 10281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10282,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10291,
											"end": 10326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10326,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10291,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10348,
											"end": 10349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10346,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10356,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10362,
											"end": 10544,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 10362,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10498,
											"end": 10499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10490,
											"end": 10496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10362,
											"end": 10544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10362,
											"end": 10544,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10692,
											"end": 10695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 10713,
											"end": 10780,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10713,
											"end": 10780,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10713,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10706,
											"end": 10780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10706,
											"end": 10780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10878,
											"end": 10881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 10789,
											"end": 10882,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10789,
											"end": 10882,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10789,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10902,
											"end": 10905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10898,
											"end": 10910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10916,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11126,
											"end": 11128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11115,
											"end": 11124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11169,
											"end": 11173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11146,
											"end": 11163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11139,
											"end": 11186,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11203,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11329,
											"end": 11333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11203,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 11203,
											"end": 11334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11203,
											"end": 11334,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11203,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 11341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11630,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11560,
											"end": 11634,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11557,
											"end": 11558,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11554,
											"end": 11635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11542,
											"end": 11551,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11552,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11531,
											"end": 11636,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11659,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11528,
											"end": 11659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11659,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11528,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11687,
											"end": 11688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11347,
											"end": 11695,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amountOfAsset()": "762db7ee",
							"assetType()": "3fe3347a",
							"claimPrice()": "15d655c9",
							"getBuyer()": "603daf9a",
							"getClaimReward()": "f26cc58e",
							"getCurrPrice(uint32)": "cbed2449",
							"getPrices()": "bd9a548b",
							"getSeller()": "dbd0e1b6",
							"initAssetPrice()": "86be75b7",
							"liquidationPrice()": "b6fc2d5f",
							"owner()": "8da5cb5b",
							"premium()": "e0a73a93",
							"renounceOwnership()": "715018a6",
							"rounds()": "a2e800ad",
							"sellerDeposit()": "4c1786ea",
							"setBuyer(address)": "a3f09ad6",
							"setInitAssetPrice(uint256)": "bef904e3",
							"setParticipants(address,bool)": "bab215f8",
							"setRounds(uint32)": "d2895e93",
							"setSeller(address)": "e99d2866",
							"setStatus(uint8)": "2e49d78b",
							"status()": "200d2ed2",
							"totalRounds()": "8a568299",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amountOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetType\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"setBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"}],\"name\":\"setInitAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participants\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBuyer\",\"type\":\"bool\"}],\"name\":\"setParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"}],\"name\":\"setRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"setSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/CDS.sol\":\"CDS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/CDS.sol\":{\"keccak256\":\"0xa740a9943fddca8aed32033d85ec0a87005eb9bc6aa198e025572b4f9adc5ff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d15029a23512eecdc43f0a9d27f9a1f5074a763aedb0550f3538b69cb75172a8\",\"dweb:/ipfs/QmbUdti4qLqaeRFq51x23bCsPDG1TyDJkikM1sjNdLwB4V\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 752,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(PriceOracleMock)893"
							},
							{
								"astId": 462,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PriceOracleMock)893"
							},
							{
								"astId": 471,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "status",
								"offset": 20,
								"slot": "2",
								"type": "t_enum(Status)468"
							},
							{
								"astId": 473,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "initAssetPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 475,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "claimPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "liquidationPrice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 479,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "premium",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "sellerDeposit",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 483,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "amountOfAsset",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 485,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "buyer",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "seller",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 489,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "rounds",
								"offset": 20,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 491,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "totalRounds",
								"offset": 24,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 493,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "assetType",
								"offset": 28,
								"slot": "10",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(PriceOracleMock)893": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							},
							"t_enum(Status)468": {
								"encoding": "inplace",
								"label": "enum CDS.Status",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumer.sol": {
				"PriceConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcbed2449\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_12\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_18)\n    tag_11:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_20\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_24)\n    tag_19:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_26\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_25:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_24:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_18:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_36:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_37:\n        /* \"#utility.yul\":505:528   */\n      tag_51\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_52:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_38:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_54\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_6:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_57\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":777:896   */\n    tag_56:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_58\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1112   */\n    tag_39:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1101:1106   */\n      dup2\n        /* \"#utility.yul\":1090:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1236   */\n    tag_40:\n        /* \"#utility.yul\":1205:1229   */\n      tag_61\n        /* \"#utility.yul\":1223:1228   */\n      dup2\n        /* \"#utility.yul\":1205:1229   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1230   */\n      mstore\n        /* \"#utility.yul\":1118:1236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1464   */\n    tag_9:\n        /* \"#utility.yul\":1335:1339   */\n      0x00\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1362:1371   */\n      dup3\n        /* \"#utility.yul\":1358:1376   */\n      add\n        /* \"#utility.yul\":1350:1376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1457   */\n      tag_63\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1443:1452   */\n      dup4\n        /* \"#utility.yul\":1439:1456   */\n      add\n        /* \"#utility.yul\":1430:1436   */\n      dup5\n        /* \"#utility.yul\":1386:1457   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1242:1464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1592   */\n    tag_41:\n        /* \"#utility.yul\":1543:1567   */\n      tag_65\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1533:1568   */\n      eq\n        /* \"#utility.yul\":1523:1586   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1579:1580   */\n      dup1\n        /* \"#utility.yul\":1572:1584   */\n      revert\n        /* \"#utility.yul\":1523:1586   */\n    tag_66:\n        /* \"#utility.yul\":1470:1592   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:1741   */\n    tag_42:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1686:1692   */\n      dup2\n        /* \"#utility.yul\":1680:1693   */\n      mload\n        /* \"#utility.yul\":1671:1693   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1735   */\n      tag_68\n        /* \"#utility.yul\":1729:1734   */\n      dup2\n        /* \"#utility.yul\":1702:1735   */\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1598:1741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1747:2098   */\n    tag_16:\n        /* \"#utility.yul\":1817:1823   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1854:1863   */\n      dup3\n        /* \"#utility.yul\":1845:1852   */\n      dup5\n        /* \"#utility.yul\":1841:1864   */\n      sub\n        /* \"#utility.yul\":1837:1869   */\n      slt\n        /* \"#utility.yul\":1834:1953   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1872:1951   */\n      tag_71\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1834:1953   */\n    tag_70:\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":2017:2081   */\n      tag_72\n        /* \"#utility.yul\":2073:2080   */\n      dup5\n        /* \"#utility.yul\":2064:2070   */\n      dup3\n        /* \"#utility.yul\":2053:2062   */\n      dup6\n        /* \"#utility.yul\":2049:2071   */\n      add\n        /* \"#utility.yul\":2017:2081   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2007:2081   */\n      swap2\n      pop\n        /* \"#utility.yul\":1963:2091   */\n      pop\n        /* \"#utility.yul\":1747:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2284   */\n    tag_43:\n        /* \"#utility.yul\":2152:2229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2149:2150   */\n      0x00\n        /* \"#utility.yul\":2142:2230   */\n      mstore\n        /* \"#utility.yul\":2249:2253   */\n      0x12\n        /* \"#utility.yul\":2246:2247   */\n      0x04\n        /* \"#utility.yul\":2239:2254   */\n      mstore\n        /* \"#utility.yul\":2273:2277   */\n      0x24\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2278   */\n      revert\n        /* \"#utility.yul\":2476:2661   */\n    tag_32:\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2533:2553   */\n      tag_76\n        /* \"#utility.yul\":2551:2552   */\n      dup3\n        /* \"#utility.yul\":2533:2553   */\n      tag_39\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2528:2553   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2587   */\n      tag_77\n        /* \"#utility.yul\":2585:2586   */\n      dup4\n        /* \"#utility.yul\":2567:2587   */\n      tag_39\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2562:2587   */\n      swap3\n      pop\n        /* \"#utility.yul\":2606:2607   */\n      dup3\n        /* \"#utility.yul\":2596:2631   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2611:2629   */\n      tag_79\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2596:2631   */\n    tag_78:\n        /* \"#utility.yul\":2653:2654   */\n      dup3\n        /* \"#utility.yul\":2650:2651   */\n      dup3\n        /* \"#utility.yul\":2646:2655   */\n      div\n        /* \"#utility.yul\":2641:2655   */\n      swap1\n      pop\n        /* \"#utility.yul\":2476:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_764": {
									"entryPoint": null,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610559380380610559833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610442806101176000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x559 CODESIZE SUB DUP1 PUSH2 0x559 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x442 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;255:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;321:8;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;157:552;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;157:552:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_355": {
									"entryPoint": 667,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrPrice_825": {
									"entryPoint": 96,
									"id": 825,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2664:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:7"
															},
															"nodeType": "YulIf",
															"src": "485:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:7",
														"type": ""
													}
												],
												"src": "433:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "559:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:7"
															},
															"nodeType": "YulIf",
															"src": "777:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:7",
														"type": ""
													}
												],
												"src": "702:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1101:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:7",
														"type": ""
													}
												],
												"src": "1035:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1223:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1205:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:7",
														"type": ""
													}
												],
												"src": "1118:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1362:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1350:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1430:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1386:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1335:4:7",
														"type": ""
													}
												],
												"src": "1242:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1570:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1572:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1572:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1572:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1536:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1561:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1543:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1543:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1533:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:43:7"
															},
															"nodeType": "YulIf",
															"src": "1523:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1506:5:7",
														"type": ""
													}
												],
												"src": "1470:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1680:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1729:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1702:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1639:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1647:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1655:5:7",
														"type": ""
													}
												],
												"src": "1598:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1870:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1872:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1845:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:32:7"
															},
															"nodeType": "YulIf",
															"src": "1834:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1963:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2007:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2064:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2017:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2007:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1794:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1805:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"src": "1747:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2104:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2318:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2328:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2290:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2533:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2528:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2567:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2562:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:9:7"
															},
															"nodeType": "YulIf",
															"src": "2596:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2641:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2653:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2641:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2507:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2510:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2516:1:7",
														"type": ""
													}
												],
												"src": "2476:185:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:7:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:77::-;1072:7;1101:5;1090:16;;1035:77;;;:::o;1118:118::-;1205:24;1223:5;1205:24;:::i;:::-;1200:3;1193:37;1118:118;;:::o;1242:222::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1386:71;1454:1;1443:9;1439:17;1430:6;1386:71;:::i;:::-;1242:222;;;;:::o;1470:122::-;1543:24;1561:5;1543:24;:::i;:::-;1536:5;1533:35;1523:63;;1582:1;1579;1572:12;1523:63;1470:122;:::o;1598:143::-;1655:5;1686:6;1680:13;1671:22;;1702:33;1729:5;1702:33;:::i;:::-;1598:143;;;;:::o;1747:351::-;1817:6;1866:2;1854:9;1845:7;1841:23;1837:32;1834:119;;;1872:79;;:::i;:::-;1834:119;1992:1;2017:64;2073:7;2064:6;2053:9;2049:22;2017:64;:::i;:::-;2007:74;;1963:128;1747:351;;;;:::o;2104:180::-;2152:77;2149:1;2142:88;2249:4;2246:1;2239:15;2273:4;2270:1;2263:15;2476:185;2516:1;2533:20;2551:1;2533:20;:::i;:::-;2528:25;;2567:20;2585:1;2567:20;:::i;:::-;2562:25;;2606:1;2596:35;;2611:18;;:::i;:::-;2596:35;2653:1;2650;2646:9;2641:14;;2476:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrPrice(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
									".code": [
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "CBED2449"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1568,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1584,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1729,
											"end": 1734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrPrice(uint32)": "cbed2449"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 752,
								"contract": "contracts/CDS/PriceConsumer.sol:PriceConsumer",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(PriceOracleMock)893"
							}
						],
						"types": {
							"t_contract(PriceOracleMock)893": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"PriceOracleMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "btcPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Oracle/PriceOracleMock.sol\":169:277  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":203:216  2500000000000 */\n  0x0246139ca800\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:200  btcPrice */\n  0x00\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:216  btcPrice = 2500000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":233:245  160000000000 */\n  0x2540be4000\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:230  ethPrice */\n  0x01\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:245  ethPrice = 160000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":263:272  750000000 */\n  0x2cb41780\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:260  linkPrice */\n  0x02\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:272  linkPrice = 750000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09c7a25c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf78535\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8ad52d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc7dce06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea13ed8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff186b2e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_12:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":360:366  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:357  btcPrice */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:366  btcPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":379:387  btcPrice */\n      sload(0x00)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":372:387  return btcPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":449:456  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":475:481  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:472  ethPrice */\n      0x01\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:481  ethPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":494:502  ethPrice */\n      sload(0x01)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":487:502  return ethPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":565:572  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":592:598  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:589  linkPrice */\n      0x02\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:598  linkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":611:620  linkPrice */\n      sload(0x02)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":604:620  return linkPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_48\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_49:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_51\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":766:885   */\n    tag_53:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_55\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_41:\n        /* \"#utility.yul\":1112:1136   */\n      tag_57\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50650246139ca800600081905550642540be4000600181905550632cb41780600281905550610264806100446000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0x246139CA800 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH5 0x2540BE4000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH4 0x2CB41780 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x264 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;169:108;;;;;;;;;;203:13;192:8;:24;;;;233:12;222:8;:23;;;;263:9;251;:21;;;;57:570;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btcPrice_830": {
									"entryPoint": 362,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethPrice_832": {
									"entryPoint": 406,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkPrice_834": {
									"entryPoint": 356,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBTCPrice_864": {
									"entryPoint": 337,
									"id": 864,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setETHPrice_878": {
									"entryPoint": 368,
									"id": 878,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setLinkPrice_892": {
									"entryPoint": 387,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:7",
														"type": ""
													}
												],
												"src": "1025:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:7",
														"type": ""
													}
												],
												"src": "1149:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:111;334:7;360:6;349:8;:17;;;;379:8;;372:15;;281:111;;;:::o;140:24::-;;;;:::o;86:23::-;;;;:::o;396:111::-;449:7;475:6;464:8;:17;;;;494:8;;487:15;;396:111;;;:::o;511:114::-;565:7;592:6;580:9;:18;;;;611:9;;604:16;;511:114;;;:::o;113:23::-;;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "66513",
								"totalCost": "188913"
							},
							"external": {
								"btcPrice()": "2451",
								"ethPrice()": "2517",
								"linkPrice()": "2429",
								"setBTCPrice(uint256)": "infinite",
								"setETHPrice(uint256)": "infinite",
								"setLinkPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 203,
									"end": 216,
									"name": "PUSH",
									"source": 5,
									"value": "246139CA800"
								},
								{
									"begin": 192,
									"end": 200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 233,
									"end": 245,
									"name": "PUSH",
									"source": 5,
									"value": "2540BE4000"
								},
								{
									"begin": 222,
									"end": 230,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "2CB41780"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 251,
									"end": 272,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
									".code": [
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "9C7A25C"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "CF78535"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "A8AD52D1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "BC7DCE06"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "EEA13ED8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "FF186B2E"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 589,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"btcPrice()": "a8ad52d1",
							"ethPrice()": "ff186b2e",
							"linkPrice()": "0cf78535",
							"setBTCPrice(uint256)": "09c7a25c",
							"setETHPrice(uint256)": "bc7dce06",
							"setLinkPrice(uint256)": "eea13ed8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/PriceOracleMock.sol\":\"PriceOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 830,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "btcPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "ethPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "linkPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/LibSwap.sol": {
				"LibSwap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"calcAmountOfAsset(uint256,uint256,uint256)": "infinite",
								"calcClaimReward(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
									".code": [
										{
											"begin": 116,
											"end": 797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibSwap.sol\":\"LibSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"contracts/CDS/CDS.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/CDS.sol",
					"exportedSymbols": {
						"CDS": [
							742
						],
						"Context": [
							134
						],
						"LibSwap": [
							969
						],
						"Ownable": [
							112
						],
						"PriceConsumer": [
							826
						],
						"PriceOracleMock": [
							893
						],
						"SafeMath": [
							446
						]
					},
					"id": 743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/CDS/PriceConsumer.sol",
							"file": "./PriceConsumer.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 827,
							"src": "57:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/LibSwap.sol",
							"file": "../libs/LibSwap.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 970,
							"src": "87:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 113,
							"src": "117:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 452,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "224:7:3"
									},
									"id": 453,
									"nodeType": "InheritanceSpecifier",
									"src": "224:7:3"
								},
								{
									"arguments": [
										{
											"hexValue": "307846324133466130323636413066454646413837444134354630443343343561433636464530356335",
											"id": 455,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "247:42:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"value": "0xF2A3Fa0266A0fEFFA87DA45F0D3C45aC66FE05c5"
										}
									],
									"baseName": {
										"id": 454,
										"name": "PriceConsumer",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "233:13:3"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "233:57:3"
								}
							],
							"canonicalName": "CDS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 742,
							"linearizedBaseContracts": [
								742,
								826,
								112,
								134
							],
							"name": "CDS",
							"nameLocation": "217:3:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 459,
									"libraryName": {
										"id": 457,
										"name": "LibSwap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "301:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "295:26:3",
									"typeName": {
										"id": 458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "349:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "325:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$893",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 461,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 460,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 893,
											"src": "325:15:3"
										},
										"referencedDeclaration": 893,
										"src": "325:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$893",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CDS.Status",
									"id": 468,
									"members": [
										{
											"id": 463,
											"name": "inactive",
											"nameLocation": "383:8:3",
											"nodeType": "EnumValue",
											"src": "383:8:3"
										},
										{
											"id": 464,
											"name": "pending",
											"nameLocation": "397:7:3",
											"nodeType": "EnumValue",
											"src": "397:7:3"
										},
										{
											"id": 465,
											"name": "active",
											"nameLocation": "410:6:3",
											"nodeType": "EnumValue",
											"src": "410:6:3"
										},
										{
											"id": 466,
											"name": "claimed",
											"nameLocation": "422:7:3",
											"nodeType": "EnumValue",
											"src": "422:7:3"
										},
										{
											"id": 467,
											"name": "expired",
											"nameLocation": "435:7:3",
											"nodeType": "EnumValue",
											"src": "435:7:3"
										}
									],
									"name": "Status",
									"nameLocation": "370:6:3",
									"nodeType": "EnumDefinition",
									"src": "365:81:3"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 471,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "463:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "449:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$468",
										"typeString": "enum CDS.Status"
									},
									"typeName": {
										"id": 470,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 469,
											"name": "Status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 468,
											"src": "449:6:3"
										},
										"referencedDeclaration": 468,
										"src": "449:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$468",
											"typeString": "enum CDS.Status"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86be75b7",
									"id": 473,
									"mutability": "mutable",
									"name": "initAssetPrice",
									"nameLocation": "489:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "474:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15d655c9",
									"id": 475,
									"mutability": "mutable",
									"name": "claimPrice",
									"nameLocation": "522:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "507:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fc2d5f",
									"id": 477,
									"mutability": "mutable",
									"name": "liquidationPrice",
									"nameLocation": "551:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "536:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "536:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0a73a93",
									"id": 479,
									"mutability": "mutable",
									"name": "premium",
									"nameLocation": "586:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "571:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c1786ea",
									"id": 481,
									"mutability": "mutable",
									"name": "sellerDeposit",
									"nameLocation": "612:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "597:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "597:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "762db7ee",
									"id": 483,
									"mutability": "mutable",
									"name": "amountOfAsset",
									"nameLocation": "644:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "629:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 482,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "buyer",
									"nameLocation": "677:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "661:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 484,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "702:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "686:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 486,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a2e800ad",
									"id": 489,
									"mutability": "mutable",
									"name": "rounds",
									"nameLocation": "726:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "712:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 488,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "712:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a568299",
									"id": 491,
									"mutability": "mutable",
									"name": "totalRounds",
									"nameLocation": "750:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "736:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 490,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "736:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fe3347a",
									"id": 493,
									"mutability": "mutable",
									"name": "assetType",
									"nameLocation": "779:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "765:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 492,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "765:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "987:546:3",
										"statements": [
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "993:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1010:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "993:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "993:32:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1031:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 515,
														"name": "_claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1044:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1031:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1031:24:3"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1061:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "_liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1080:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1061:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "1061:36:3"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1103:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 523,
														"name": "_premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1113:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1103:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1103:18:3"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "1127:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "_sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "1143:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1127:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1127:30:3"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1163:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1172:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1163:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1163:16:3"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "totalRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1185:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1199:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1185:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1185:21:3"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "amountOfAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1212:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 541,
																"name": "liquidationPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "1268:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 542,
																"name": "sellerDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "1292:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 539,
																"name": "initAssetPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1228:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "calcAmountOfAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 968,
															"src": "1228:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1228:83:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1212:99:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "1212:99:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 547,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1332:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1346:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1332:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 550,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1351:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1365:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1351:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1332:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 554,
																	"name": "_assetType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "1370:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1370:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1332:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1393:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															},
															"value": "BTC:0, ETH:1, LINK:2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1317:104:3"
											},
											{
												"expression": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 561,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1427:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 562,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1439:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1427:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "1427:22:3"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 565,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1456:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1472:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1464:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1464:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1464:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1456:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1456:18:3"
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1480:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1497:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1489:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1489:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1489:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1480:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "1480:19:3"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 579,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1505:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 580,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "1514:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																"typeString": "type(enum CDS.Status)"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "pending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 464,
														"src": "1514:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "1505:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1505:23:3"
											}
										]
									},
									"id": 585,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "818:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "810:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_claimPrice",
												"nameLocation": "847:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "839:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_liquidationPrice",
												"nameLocation": "872:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "864:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "903:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "895:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "925:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "917:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "952:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "945:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 504,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "945:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "972:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "965:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 506,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "965:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:182:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:3"
									},
									"scope": 742,
									"src": "793:740:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "1598:124:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 592,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1619:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 593,
															"name": "claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1641:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 594,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "1659:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 595,
															"name": "premium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1683:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 596,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1698:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 597,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1611:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
														"typeString": "uint256[5] memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 598,
												"nodeType": "Return",
												"src": "1604:113:3"
											}
										]
									},
									"functionSelector": "bd9a548b",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nameLocation": "1546:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1555:2:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1579:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 587,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1579:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 589,
													"length": {
														"hexValue": "35",
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1587:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "1579:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:19:3"
									},
									"scope": 742,
									"src": "1537:185:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1776:23:3",
										"statements": [
											{
												"expression": {
													"id": 605,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "1789:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 604,
												"id": 606,
												"nodeType": "Return",
												"src": "1782:12:3"
											}
										]
									},
									"functionSelector": "603daf9a",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "1735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:3"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1767:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:3"
									},
									"scope": 742,
									"src": "1726:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1854:24:3",
										"statements": [
											{
												"expression": {
													"id": 613,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "1867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 612,
												"id": 614,
												"nodeType": "Return",
												"src": "1860:13:3"
											}
										]
									},
									"functionSelector": "dbd0e1b6",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSeller",
									"nameLocation": "1812:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:2:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1845:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1844:9:3"
									},
									"scope": 742,
									"src": "1803:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1938:235:3",
										"statements": [
											{
												"assignments": [
													622
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "currPrice",
														"nameLocation": "1952:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1944:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1944:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"id": 624,
															"name": "assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1977:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 623,
														"name": "getCurrPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1964:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_uint256_$",
															"typeString": "function (uint32) view returns (uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1944:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 627,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1997:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 628,
														"name": "currPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2010:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1997:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "1993:51:3",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "2021:23:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 620,
															"id": 631,
															"nodeType": "Return",
															"src": "2029:8:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "2101:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 637,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2127:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 638,
															"name": "currPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "2151:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 634,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "2062:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcClaimReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "2062:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 620,
												"id": 640,
												"nodeType": "Return",
												"src": "2049:119:3"
											}
										]
									},
									"functionSelector": "f26cc58e",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimReward",
									"nameLocation": "1891:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:2:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1929:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:9:3"
									},
									"scope": 742,
									"src": "1882:291:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2254:70:3",
										"statements": [
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 649,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2260:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 650,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2277:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2260:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2260:32:3"
											},
											{
												"expression": {
													"id": 653,
													"name": "initAssetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "2305:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 648,
												"id": 654,
												"nodeType": "Return",
												"src": "2298:21:3"
											}
										]
									},
									"functionSelector": "bef904e3",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInitAssetPrice",
									"nameLocation": "2186:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "2212:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2204:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:25:3"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2245:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:9:3"
									},
									"scope": 742,
									"src": "2177:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2397:46:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2412:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "2403:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2403:16:3"
											},
											{
												"expression": {
													"id": 671,
													"name": "status",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "2432:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"functionReturnParameters": 666,
												"id": 672,
												"nodeType": "Return",
												"src": "2425:13:3"
											}
										]
									},
									"functionSelector": "2e49d78b",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 661,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2370:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2370:9:3"
										}
									],
									"name": "setStatus",
									"nameLocation": "2337:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2354:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2347:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 657,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2347:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2347:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:16:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2389:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2389:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2389:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:8:3"
									},
									"scope": 742,
									"src": "2328:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2527:72:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 683,
														"name": "_isBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2533:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 688,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "2580:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 687,
															"name": "setSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "2570:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2570:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2533:61:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 685,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "2553:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 684,
															"name": "setBuyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2544:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2544:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "2533:61:3"
											}
										]
									},
									"functionSelector": "bab215f8",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 680,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2517:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2517:9:3"
										}
									],
									"name": "setParticipants",
									"nameLocation": "2456:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_participants",
												"nameLocation": "2480:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2472:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "_isBuyer",
												"nameLocation": "2500:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2495:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2495:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:38:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2527:0:3"
									},
									"scope": 742,
									"src": "2447:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2672:43:3",
										"statements": [
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2678:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 703,
														"name": "_buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2686:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2678:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "2678:14:3"
											},
											{
												"expression": {
													"id": 706,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "2705:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 701,
												"id": 707,
												"nodeType": "Return",
												"src": "2698:12:3"
											}
										]
									},
									"functionSelector": "a3f09ad6",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 697,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2644:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2644:9:3"
										}
									],
									"name": "setBuyer",
									"nameLocation": "2612:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "2629:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2621:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:16:3"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2663:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:9:3"
									},
									"scope": 742,
									"src": "2603:112:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "2790:46:3",
										"statements": [
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 718,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2796:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 719,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "2805:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2796:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "2796:16:3"
											},
											{
												"expression": {
													"id": 722,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "2825:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 717,
												"id": 723,
												"nodeType": "Return",
												"src": "2818:13:3"
											}
										]
									},
									"functionSelector": "e99d2866",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 713,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2762:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2762:9:3"
										}
									],
									"name": "setSeller",
									"nameLocation": "2728:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "2746:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2738:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:17:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2781:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:9:3"
									},
									"scope": 742,
									"src": "2719:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "2909:46:3",
										"statements": [
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 734,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2915:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "2924:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2915:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2915:16:3"
											},
											{
												"expression": {
													"id": 738,
													"name": "rounds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "2944:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 733,
												"id": 739,
												"nodeType": "Return",
												"src": "2937:13:3"
											}
										]
									},
									"functionSelector": "d2895e93",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 730,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 729,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2882:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2882:9:3"
										}
									],
									"name": "setRounds",
									"nameLocation": "2849:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "2866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2859:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 726,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2859:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:16:3"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2901:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 731,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2901:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:8:3"
									},
									"scope": 742,
									"src": "2840:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 743,
							"src": "208:2749:3",
							"usedErrors": []
						}
					],
					"src": "32:2926:3"
				},
				"id": 3
			},
			"contracts/CDS/PriceConsumer.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumer.sol",
					"exportedSymbols": {
						"PriceConsumer": [
							826
						],
						"PriceOracleMock": [
							893
						],
						"SafeMath": [
							446
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
							"file": "../Oracle/PriceOracleMock.sol",
							"id": 745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 827,
							"sourceUnit": 894,
							"src": "57:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 746,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 827,
							"sourceUnit": 447,
							"src": "97:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "PriceConsumer",
							"nameLocation": "166:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 749,
									"libraryName": {
										"id": 747,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "190:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:4",
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 752,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "239:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "215:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$893",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 751,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 750,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 893,
											"src": "215:15:4"
										},
										"referencedDeclaration": 893,
										"src": "215:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$893",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "285:50:4",
										"statements": [
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 757,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "291:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$893",
															"typeString": "contract PriceOracleMock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 759,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "321:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 758,
															"name": "PriceOracleMock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "305:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PriceOracleMock_$893_$",
																"typeString": "type(contract PriceOracleMock)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$893",
															"typeString": "contract PriceOracleMock"
														}
													},
													"src": "291:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracleMock_$893",
														"typeString": "contract PriceOracleMock"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "291:39:4"
											}
										]
									},
									"id": 764,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "275:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "267:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:18:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:4"
									},
									"scope": 826,
									"src": "255:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "410:297:4",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "424:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "416:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "416:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"nodeType": "VariableDeclarationStatement",
												"src": "416:13:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "439:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "439:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 789,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "524:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "524:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "_assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "609:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "623:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "609:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 819,
														"nodeType": "IfStatement",
														"src": "605:80:4",
														"trueBody": {
															"id": 818,
															"nodeType": "Block",
															"src": "626:59:4",
															"statements": [
																{
																	"expression": {
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 807,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "634:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 812,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "670:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 813,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "676:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "670:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 808,
																							"name": "priceOracle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 752,
																							"src": "642:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PriceOracleMock_$893",
																								"typeString": "contract PriceOracleMock"
																							}
																						},
																						"id": 809,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "linkPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 834,
																						"src": "642:21:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "642:23:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 355,
																				"src": "642:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "642:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "634:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 817,
																	"nodeType": "ExpressionStatement",
																	"src": "634:44:4"
																}
															]
														}
													},
													"id": 820,
													"nodeType": "IfStatement",
													"src": "520:165:4",
													"trueBody": {
														"id": 803,
														"nodeType": "Block",
														"src": "541:58:4",
														"statements": [
															{
																"expression": {
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 792,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "549:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 797,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "584:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "590:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "584:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 793,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 752,
																						"src": "557:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PriceOracleMock_$893",
																							"typeString": "contract PriceOracleMock"
																						}
																					},
																					"id": 794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "ethPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 832,
																					"src": "557:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "557:22:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 355,
																			"src": "557:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "557:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "549:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 802,
																"nodeType": "ExpressionStatement",
																"src": "549:43:4"
															}
														]
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "435:250:4",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "456:58:4",
													"statements": [
														{
															"expression": {
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 777,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "464:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "499:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "499:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 778,
																					"name": "priceOracle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "472:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PriceOracleMock_$893",
																						"typeString": "contract PriceOracleMock"
																					}
																				},
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "btcPrice",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 830,
																				"src": "472:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "472:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "472:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "472:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "464:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "464:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 822,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 772,
													"src": "697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 770,
												"id": 823,
												"nodeType": "Return",
												"src": "690:12:4"
											}
										]
									},
									"functionSelector": "cbed2449",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "348:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "368:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "361:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 765,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:19:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:4"
									},
									"scope": 826,
									"src": "339:368:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 827,
							"src": "157:552:4",
							"usedErrors": []
						}
					],
					"src": "32:678:4"
				},
				"id": 4
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"ast": {
					"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
					"exportedSymbols": {
						"PriceOracleMock": [
							893
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893
							],
							"name": "PriceOracleMock",
							"nameLocation": "66:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a8ad52d1",
									"id": 830,
									"mutability": "mutable",
									"name": "btcPrice",
									"nameLocation": "101:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "86:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 829,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff186b2e",
									"id": 832,
									"mutability": "mutable",
									"name": "ethPrice",
									"nameLocation": "128:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "113:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cf78535",
									"id": 834,
									"mutability": "mutable",
									"name": "linkPrice",
									"nameLocation": "155:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "140:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "186:91:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "192:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030303030303030303030",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "203:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500000000000_by_1",
															"typeString": "int_const 2500000000000"
														},
														"value": "2500000000000"
													},
													"src": "192:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "192:24:5"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "222:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313630303030303030303030",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160000000000_by_1",
															"typeString": "int_const 160000000000"
														},
														"value": "160000000000"
													},
													"src": "222:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "222:23:5"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "251:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373530303030303030",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_750000000_by_1",
															"typeString": "int_const 750000000"
														},
														"value": "750000000"
													},
													"src": "251:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "251:21:5"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:5:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:5"
									},
									"scope": 893,
									"src": "169:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "343:49:5",
										"statements": [
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "349:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 858,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "360:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "349:17:5"
											},
											{
												"expression": {
													"id": 861,
													"name": "btcPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 830,
													"src": "379:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 856,
												"id": 862,
												"nodeType": "Return",
												"src": "372:15:5"
											}
										]
									},
									"functionSelector": "09c7a25c",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBTCPrice",
									"nameLocation": "290:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "310:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "302:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:5"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "334:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:5"
									},
									"scope": 893,
									"src": "281:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "458:49:5",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "464:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "475:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "464:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "464:17:5"
											},
											{
												"expression": {
													"id": 875,
													"name": "ethPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "494:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 876,
												"nodeType": "Return",
												"src": "487:15:5"
											}
										]
									},
									"functionSelector": "bc7dce06",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setETHPrice",
									"nameLocation": "405:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "425:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "417:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:16:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 893,
									"src": "396:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "574:51:5",
										"statements": [
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 885,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "580:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 886,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "592:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "580:18:5"
											},
											{
												"expression": {
													"id": 889,
													"name": "linkPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "611:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 890,
												"nodeType": "Return",
												"src": "604:16:5"
											}
										]
									},
									"functionSelector": "eea13ed8",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLinkPrice",
									"nameLocation": "520:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "541:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "533:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:16:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "565:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:5"
									},
									"scope": 893,
									"src": "511:114:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 894,
							"src": "57:570:5",
							"usedErrors": []
						}
					],
					"src": "32:596:5"
				},
				"id": 5
			},
			"contracts/libs/LibSwap.sol": {
				"ast": {
					"absolutePath": "contracts/libs/LibSwap.sol",
					"exportedSymbols": {
						"LibSwap": [
							969
						],
						"SafeMath": [
							446
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 447,
							"src": "57:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSwap",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "LibSwap",
							"nameLocation": "124:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 899,
									"libraryName": {
										"id": 897,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "142:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "136:27:6",
									"typeName": {
										"id": 898,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "320:268:6",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "claimReward",
														"nameLocation": "334:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "326:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "326:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"nodeType": "VariableDeclarationStatement",
												"src": "326:19:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 915,
														"name": "_liquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "355:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 916,
														"name": "_current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "371:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "355:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "424:136:6",
													"statements": [
														{
															"assignments": [
																924
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 924,
																	"mutability": "mutable",
																	"name": "numOfAsset",
																	"nameLocation": "440:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 943,
																	"src": "432:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "432:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 932,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 929,
																				"name": "_liquidation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "479:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 927,
																				"name": "_initial",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "466:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 325,
																			"src": "466:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "466:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 925,
																		"name": "_deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "453:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "453:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "453:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "432:61:6"
														},
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 933,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "501:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 938,
																					"name": "_current",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 907,
																					"src": "543:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 936,
																					"name": "_initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "530:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "530:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "530:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 934,
																			"name": "numOfAsset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "515:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 340,
																		"src": "515:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "515:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "501:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "501:52:6"
														}
													]
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "351:209:6",
												"trueBody": {
													"id": 922,
													"nodeType": "Block",
													"src": "381:37:6",
													"statements": [
														{
															"expression": {
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 918,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "389:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 919,
																	"name": "_deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "403:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "389:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 921,
															"nodeType": "ExpressionStatement",
															"src": "389:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"name": "claimReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "572:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 946,
												"nodeType": "Return",
												"src": "565:18:6"
											}
										]
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcClaimReward",
									"nameLocation": "176:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "_deposit",
												"nameLocation": "205:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "197:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "227:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "219:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "253:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "245:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "275:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "267:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:96:6"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "311:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:9:6"
									},
									"scope": 969,
									"src": "167:421:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "731:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 963,
																	"name": "_liquidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "776:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 961,
																	"name": "_initial",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "763:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "763:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "763:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 959,
															"name": "_sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "744:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "744:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 958,
												"id": 966,
												"nodeType": "Return",
												"src": "737:53:6"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmountOfAsset",
									"nameLocation": "601:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "632:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "624:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "654:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "646:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "680:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "672:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:80:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "722:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:9:6"
									},
									"scope": 969,
									"src": "592:203:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 970,
							"src": "116:681:6",
							"usedErrors": []
						}
					],
					"src": "32:766:6"
				},
				"id": 6
			}
		}
	}
}