{
	"id": "7ce8017e88ee715e6a4fc9c549cfca47",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CDS/PriceConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../Oracle/PriceOracleMock.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n\ncontract PriceConsumer {\n  using SafeMath for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  constructor(address _address) {\n    priceOracle = PriceOracleMock(_address);\n  }\n\n  function getCurrPrice(uint32 _assetType) public view returns (uint256) {\n    uint256 price;\n    if (_assetType == 0) {\n      price = priceOracle.btcPrice().div(10 ** 8);\n    } else if (_assetType == 1) {\n      price = priceOracle.ethPrice().div(10 ** 8);\n    } else if (_assetType == 2) {\n      price = priceOracle.linkPrice().div(10 ** 8);\n    }\n    return price;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract PriceOracleMock {\n  uint256 public btcPrice;\n  uint256 public ethPrice;\n  uint256 public linkPrice;\n\n  constructor(\n  ) {\n    btcPrice = 2500000000000;\n    ethPrice = 160000000000;\n    linkPrice = 750000000;\n  }\n\n  function setBTCPrice(uint256 _price) public returns (uint256) {\n    btcPrice = _price;\n    return btcPrice;\n  }\n\n  function setETHPrice(uint256 _price) public returns (uint256) {\n    ethPrice = _price;\n    return ethPrice;\n  }\n\n  function setLinkPrice(uint256 _price) public returns (uint256) {\n    linkPrice = _price;\n    return linkPrice;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumer.sol": {
				"PriceConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcbed2449\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_12\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_18)\n    tag_11:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_20\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_24)\n    tag_19:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_26\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_25:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_24:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_18:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_36:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_37:\n        /* \"#utility.yul\":505:528   */\n      tag_51\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_52:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_38:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_54\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_6:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_57\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":777:896   */\n    tag_56:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_58\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1112   */\n    tag_39:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1101:1106   */\n      dup2\n        /* \"#utility.yul\":1090:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1236   */\n    tag_40:\n        /* \"#utility.yul\":1205:1229   */\n      tag_61\n        /* \"#utility.yul\":1223:1228   */\n      dup2\n        /* \"#utility.yul\":1205:1229   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1230   */\n      mstore\n        /* \"#utility.yul\":1118:1236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1464   */\n    tag_9:\n        /* \"#utility.yul\":1335:1339   */\n      0x00\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1362:1371   */\n      dup3\n        /* \"#utility.yul\":1358:1376   */\n      add\n        /* \"#utility.yul\":1350:1376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1457   */\n      tag_63\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1443:1452   */\n      dup4\n        /* \"#utility.yul\":1439:1456   */\n      add\n        /* \"#utility.yul\":1430:1436   */\n      dup5\n        /* \"#utility.yul\":1386:1457   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1242:1464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1592   */\n    tag_41:\n        /* \"#utility.yul\":1543:1567   */\n      tag_65\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1533:1568   */\n      eq\n        /* \"#utility.yul\":1523:1586   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1579:1580   */\n      dup1\n        /* \"#utility.yul\":1572:1584   */\n      revert\n        /* \"#utility.yul\":1523:1586   */\n    tag_66:\n        /* \"#utility.yul\":1470:1592   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:1741   */\n    tag_42:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1686:1692   */\n      dup2\n        /* \"#utility.yul\":1680:1693   */\n      mload\n        /* \"#utility.yul\":1671:1693   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1735   */\n      tag_68\n        /* \"#utility.yul\":1729:1734   */\n      dup2\n        /* \"#utility.yul\":1702:1735   */\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1598:1741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1747:2098   */\n    tag_16:\n        /* \"#utility.yul\":1817:1823   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1854:1863   */\n      dup3\n        /* \"#utility.yul\":1845:1852   */\n      dup5\n        /* \"#utility.yul\":1841:1864   */\n      sub\n        /* \"#utility.yul\":1837:1869   */\n      slt\n        /* \"#utility.yul\":1834:1953   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1872:1951   */\n      tag_71\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1834:1953   */\n    tag_70:\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":2017:2081   */\n      tag_72\n        /* \"#utility.yul\":2073:2080   */\n      dup5\n        /* \"#utility.yul\":2064:2070   */\n      dup3\n        /* \"#utility.yul\":2053:2062   */\n      dup6\n        /* \"#utility.yul\":2049:2071   */\n      add\n        /* \"#utility.yul\":2017:2081   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2007:2081   */\n      swap2\n      pop\n        /* \"#utility.yul\":1963:2091   */\n      pop\n        /* \"#utility.yul\":1747:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2284   */\n    tag_43:\n        /* \"#utility.yul\":2152:2229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2149:2150   */\n      0x00\n        /* \"#utility.yul\":2142:2230   */\n      mstore\n        /* \"#utility.yul\":2249:2253   */\n      0x12\n        /* \"#utility.yul\":2246:2247   */\n      0x04\n        /* \"#utility.yul\":2239:2254   */\n      mstore\n        /* \"#utility.yul\":2273:2277   */\n      0x24\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2278   */\n      revert\n        /* \"#utility.yul\":2476:2661   */\n    tag_32:\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2533:2553   */\n      tag_76\n        /* \"#utility.yul\":2551:2552   */\n      dup3\n        /* \"#utility.yul\":2533:2553   */\n      tag_39\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2528:2553   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2587   */\n      tag_77\n        /* \"#utility.yul\":2585:2586   */\n      dup4\n        /* \"#utility.yul\":2567:2587   */\n      tag_39\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2562:2587   */\n      swap3\n      pop\n        /* \"#utility.yul\":2606:2607   */\n      dup3\n        /* \"#utility.yul\":2596:2631   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2611:2629   */\n      tag_79\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2596:2631   */\n    tag_78:\n        /* \"#utility.yul\":2653:2654   */\n      dup3\n        /* \"#utility.yul\":2650:2651   */\n      dup3\n        /* \"#utility.yul\":2646:2655   */\n      div\n        /* \"#utility.yul\":2641:2655   */\n      swap1\n      pop\n        /* \"#utility.yul\":2476:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610559380380610559833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610442806101176000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x559 CODESIZE SUB DUP1 PUSH2 0x559 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x442 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:1:-:0;;;255:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;321:8;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;157:552;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;157:552:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_220": {
									"entryPoint": 667,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrPrice_394": {
									"entryPoint": 96,
									"id": 394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2664:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:3",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:3",
														"type": ""
													}
												],
												"src": "334:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:3"
															},
															"nodeType": "YulIf",
															"src": "485:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:3",
														"type": ""
													}
												],
												"src": "433:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "559:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:3"
															},
															"nodeType": "YulIf",
															"src": "777:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:3",
														"type": ""
													}
												],
												"src": "702:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1101:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:3",
														"type": ""
													}
												],
												"src": "1035:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1223:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1205:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:3",
														"type": ""
													}
												],
												"src": "1118:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1362:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1350:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1430:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1386:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1335:4:3",
														"type": ""
													}
												],
												"src": "1242:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1570:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1572:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1572:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1572:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1536:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1561:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1543:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1543:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1533:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:43:3"
															},
															"nodeType": "YulIf",
															"src": "1523:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1506:5:3",
														"type": ""
													}
												],
												"src": "1470:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1680:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1729:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1702:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1639:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1647:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1655:5:3",
														"type": ""
													}
												],
												"src": "1598:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1870:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1872:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1845:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1841:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:32:3"
															},
															"nodeType": "YulIf",
															"src": "1834:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1963:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2007:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2064:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2017:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2007:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1794:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1805:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"src": "1747:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2104:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2318:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2328:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2290:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2528:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2533:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2528:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2562:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2585:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2567:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2562:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:9:3"
															},
															"nodeType": "YulIf",
															"src": "2596:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2641:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2653:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2641:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2507:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2510:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2516:1:3",
														"type": ""
													}
												],
												"src": "2476:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;3850:96:0:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:77::-;1072:7;1101:5;1090:16;;1035:77;;;:::o;1118:118::-;1205:24;1223:5;1205:24;:::i;:::-;1200:3;1193:37;1118:118;;:::o;1242:222::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1386:71;1454:1;1443:9;1439:17;1430:6;1386:71;:::i;:::-;1242:222;;;;:::o;1470:122::-;1543:24;1561:5;1543:24;:::i;:::-;1536:5;1533:35;1523:63;;1582:1;1579;1572:12;1523:63;1470:122;:::o;1598:143::-;1655:5;1686:6;1680:13;1671:22;;1702:33;1729:5;1702:33;:::i;:::-;1598:143;;;;:::o;1747:351::-;1817:6;1866:2;1854:9;1845:7;1841:23;1837:32;1834:119;;;1872:79;;:::i;:::-;1834:119;1992:1;2017:64;2073:7;2064:6;2053:9;2049:22;2017:64;:::i;:::-;2007:74;;1963:128;1747:351;;;;:::o;2104:180::-;2152:77;2149:1;2142:88;2249:4;2246:1;2239:15;2273:4;2270:1;2263:15;2476:185;2516:1;2533:20;2551:1;2533:20;:::i;:::-;2528:25;;2567:20;2585:1;2567:20;:::i;:::-;2562:25;;2606:1;2596:35;;2611:18;;:::i;:::-;2596:35;2653:1;2650;2646:9;2641:14;;2476:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrPrice(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
									".code": [
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "CBED2449"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1729,
											"end": 1734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2229,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2278,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrPrice(uint32)": "cbed2449"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 321,
								"contract": "contracts/CDS/PriceConsumer.sol:PriceConsumer",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(PriceOracleMock)462"
							}
						],
						"types": {
							"t_contract(PriceOracleMock)462": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"PriceOracleMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "btcPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Oracle/PriceOracleMock.sol\":169:277  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":203:216  2500000000000 */\n  0x0246139ca800\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:200  btcPrice */\n  0x00\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:216  btcPrice = 2500000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":233:245  160000000000 */\n  0x2540be4000\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:230  ethPrice */\n  0x01\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:245  ethPrice = 160000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":263:272  750000000 */\n  0x2cb41780\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:260  linkPrice */\n  0x02\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:272  linkPrice = 750000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09c7a25c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf78535\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8ad52d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc7dce06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea13ed8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff186b2e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_12:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":360:366  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:357  btcPrice */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:366  btcPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":379:387  btcPrice */\n      sload(0x00)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":372:387  return btcPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":449:456  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":475:481  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:472  ethPrice */\n      0x01\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:481  ethPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":494:502  ethPrice */\n      sload(0x01)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":487:502  return ethPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":565:572  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":592:598  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:589  linkPrice */\n      0x02\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:598  linkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":611:620  linkPrice */\n      sload(0x02)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":604:620  return linkPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_48\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_49:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_51\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":766:885   */\n    tag_53:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_55\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_41:\n        /* \"#utility.yul\":1112:1136   */\n      tag_57\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50650246139ca800600081905550642540be4000600181905550632cb41780600281905550610264806100446000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0x246139CA800 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH5 0x2540BE4000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH4 0x2CB41780 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x264 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:2:-:0;;;169:108;;;;;;;;;;203:13;192:8;:24;;;;233:12;222:8;:23;;;;263:9;251;:21;;;;57:570;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btcPrice_399": {
									"entryPoint": 362,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethPrice_401": {
									"entryPoint": 406,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkPrice_403": {
									"entryPoint": 356,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBTCPrice_433": {
									"entryPoint": 337,
									"id": 433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setETHPrice_447": {
									"entryPoint": 368,
									"id": 447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setLinkPrice_461": {
									"entryPoint": 387,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:111;334:7;360:6;349:8;:17;;;;379:8;;372:15;;281:111;;;:::o;140:24::-;;;;:::o;86:23::-;;;;:::o;396:111::-;449:7;475:6;464:8;:17;;;;494:8;;487:15;;396:111;;;:::o;511:114::-;565:7;592:6;580:9;:18;;;;611:9;;604:16;;511:114;;;:::o;113:23::-;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "66513",
								"totalCost": "188913"
							},
							"external": {
								"btcPrice()": "2451",
								"ethPrice()": "2517",
								"linkPrice()": "2429",
								"setBTCPrice(uint256)": "infinite",
								"setETHPrice(uint256)": "infinite",
								"setLinkPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 169,
									"end": 277,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 203,
									"end": 216,
									"name": "PUSH",
									"source": 2,
									"value": "246139CA800"
								},
								{
									"begin": 192,
									"end": 200,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 192,
									"end": 216,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 245,
									"name": "PUSH",
									"source": 2,
									"value": "2540BE4000"
								},
								{
									"begin": 222,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 245,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 222,
									"end": 245,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 263,
									"end": 272,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 251,
									"end": 272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
									".code": [
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "9C7A25C"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "CF78535"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "A8AD52D1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "BC7DCE06"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "EEA13ED8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "FF186B2E"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 372,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 372,
											"end": 387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 464,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 487,
											"end": 502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 580,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 580,
											"end": 598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 604,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"btcPrice()": "a8ad52d1",
							"ethPrice()": "ff186b2e",
							"linkPrice()": "0cf78535",
							"setBTCPrice(uint256)": "09c7a25c",
							"setETHPrice(uint256)": "bc7dce06",
							"setLinkPrice(uint256)": "eea13ed8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/PriceOracleMock.sol\":\"PriceOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "btcPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 401,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "ethPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "linkPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"contracts/CDS/PriceConsumer.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumer.sol",
					"exportedSymbols": {
						"PriceConsumer": [
							395
						],
						"PriceOracleMock": [
							462
						],
						"SafeMath": [
							311
						]
					},
					"id": 396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
							"file": "../Oracle/PriceOracleMock.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 463,
							"src": "57:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 312,
							"src": "97:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 395,
							"linearizedBaseContracts": [
								395
							],
							"name": "PriceConsumer",
							"nameLocation": "166:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 318,
									"libraryName": {
										"id": 316,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "190:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:1",
									"typeName": {
										"id": 317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "239:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "215:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$462",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 320,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 319,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 462,
											"src": "215:15:1"
										},
										"referencedDeclaration": 462,
										"src": "215:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$462",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "285:50:1",
										"statements": [
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "291:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$462",
															"typeString": "contract PriceOracleMock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 328,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "321:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 327,
															"name": "PriceOracleMock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "305:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PriceOracleMock_$462_$",
																"typeString": "type(contract PriceOracleMock)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$462",
															"typeString": "contract PriceOracleMock"
														}
													},
													"src": "291:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracleMock_$462",
														"typeString": "contract PriceOracleMock"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "291:39:1"
											}
										]
									},
									"id": 333,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "275:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "267:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:18:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:1"
									},
									"scope": 395,
									"src": "255:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "410:297:1",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "424:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "416:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "416:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"nodeType": "VariableDeclarationStatement",
												"src": "416:13:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "439:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "439:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 358,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "524:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "524:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "_assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "609:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "623:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "609:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 388,
														"nodeType": "IfStatement",
														"src": "605:80:1",
														"trueBody": {
															"id": 387,
															"nodeType": "Block",
															"src": "626:59:1",
															"statements": [
																{
																	"expression": {
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 376,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "634:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "670:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 382,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "676:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "670:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 377,
																							"name": "priceOracle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 321,
																							"src": "642:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PriceOracleMock_$462",
																								"typeString": "contract PriceOracleMock"
																							}
																						},
																						"id": 378,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "linkPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 403,
																						"src": "642:21:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "642:23:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "642:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "642:36:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "634:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 386,
																	"nodeType": "ExpressionStatement",
																	"src": "634:44:1"
																}
															]
														}
													},
													"id": 389,
													"nodeType": "IfStatement",
													"src": "520:165:1",
													"trueBody": {
														"id": 372,
														"nodeType": "Block",
														"src": "541:58:1",
														"statements": [
															{
																"expression": {
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 361,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "549:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "584:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "590:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "584:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 362,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 321,
																						"src": "557:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PriceOracleMock_$462",
																							"typeString": "contract PriceOracleMock"
																						}
																					},
																					"id": 363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "ethPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 401,
																					"src": "557:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "557:22:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "557:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "557:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "549:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 371,
																"nodeType": "ExpressionStatement",
																"src": "549:43:1"
															}
														]
													}
												},
												"id": 390,
												"nodeType": "IfStatement",
												"src": "435:250:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "456:58:1",
													"statements": [
														{
															"expression": {
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 346,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "464:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "499:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "499:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 347,
																					"name": "priceOracle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "472:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PriceOracleMock_$462",
																						"typeString": "contract PriceOracleMock"
																					}
																				},
																				"id": 348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "btcPrice",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "472:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "472:22:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "472:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "472:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "464:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "464:43:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 391,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "697:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 392,
												"nodeType": "Return",
												"src": "690:12:1"
											}
										]
									},
									"functionSelector": "cbed2449",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "348:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "368:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "361:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 334,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:19:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "401:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:1"
									},
									"scope": 395,
									"src": "339:368:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 396,
							"src": "157:552:1",
							"usedErrors": []
						}
					],
					"src": "32:678:1"
				},
				"id": 1
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"ast": {
					"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
					"exportedSymbols": {
						"PriceOracleMock": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 397,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "PriceOracleMock",
							"nameLocation": "66:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a8ad52d1",
									"id": 399,
									"mutability": "mutable",
									"name": "btcPrice",
									"nameLocation": "101:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "86:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff186b2e",
									"id": 401,
									"mutability": "mutable",
									"name": "ethPrice",
									"nameLocation": "128:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "113:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cf78535",
									"id": 403,
									"mutability": "mutable",
									"name": "linkPrice",
									"nameLocation": "155:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "140:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "186:91:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "192:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030303030303030303030",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "203:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500000000000_by_1",
															"typeString": "int_const 2500000000000"
														},
														"value": "2500000000000"
													},
													"src": "192:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "192:24:2"
											},
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "222:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313630303030303030303030",
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160000000000_by_1",
															"typeString": "int_const 160000000000"
														},
														"value": "160000000000"
													},
													"src": "222:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "222:23:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "251:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373530303030303030",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_750000000_by_1",
															"typeString": "int_const 750000000"
														},
														"value": "750000000"
													},
													"src": "251:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "251:21:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:5:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:2"
									},
									"scope": 462,
									"src": "169:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "343:49:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "349:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "360:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "349:17:2"
											},
											{
												"expression": {
													"id": 430,
													"name": "btcPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "379:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 431,
												"nodeType": "Return",
												"src": "372:15:2"
											}
										]
									},
									"functionSelector": "09c7a25c",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBTCPrice",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "310:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "302:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "334:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:2"
									},
									"scope": 462,
									"src": "281:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "458:49:2",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "464:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "475:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "464:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "464:17:2"
											},
											{
												"expression": {
													"id": 444,
													"name": "ethPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "494:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 445,
												"nodeType": "Return",
												"src": "487:15:2"
											}
										]
									},
									"functionSelector": "bc7dce06",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setETHPrice",
									"nameLocation": "405:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "425:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "417:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:16:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "449:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:2"
									},
									"scope": 462,
									"src": "396:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "574:51:2",
										"statements": [
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 454,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "580:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "592:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "580:18:2"
											},
											{
												"expression": {
													"id": 458,
													"name": "linkPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "611:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "604:16:2"
											}
										]
									},
									"functionSelector": "eea13ed8",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLinkPrice",
									"nameLocation": "520:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "541:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "533:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:16:2"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "565:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:2"
									},
									"scope": 462,
									"src": "511:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 463,
							"src": "57:570:2",
							"usedErrors": []
						}
					],
					"src": "32:596:2"
				},
				"id": 2
			}
		}
	}
}