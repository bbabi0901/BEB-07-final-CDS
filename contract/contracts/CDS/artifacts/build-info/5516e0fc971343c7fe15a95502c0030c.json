{
	"id": "5516e0fc971343c7fe15a95502c0030c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CDS/CDS.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport './PriceConsumer.sol';\nimport '../libs/LibSwap.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n// PriceConsumberGoerli({assetType})\ncontract CDS is Ownable, PriceConsumer(0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222) {\n  using LibSwap for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  enum Status {\n    inactive,\n    pending,\n    active,\n    claimed,\n    expired\n  }\n  Status public status;\n\n  uint256 public initAssetPrice;\n  uint256 public claimPrice;\n  uint256 public liquidationPrice;\n  uint256 public premium;\n  uint256 public sellerDeposit;\n  uint256 public nextPayDate;\n  address private buyer;\n  address private seller;\n  uint32 public rounds;\n  uint32 public totalRounds;\n  uint32 public assetType;\n\n  constructor(\n    uint256 _initAssetPrice,\n    uint256 _claimPrice,\n    uint256 _liquidationPrice,\n    uint256 _premium,\n    uint256 _sellerDeposit,\n    uint32 _rounds,\n    uint32 _assetType\n  ) {\n    initAssetPrice = _initAssetPrice;\n    claimPrice = _claimPrice;\n    liquidationPrice = _liquidationPrice;\n    premium = _premium;\n    sellerDeposit = _sellerDeposit;\n    rounds = _rounds;\n    totalRounds = _rounds;\n\n    require(\n      _assetType == 0 || _assetType == 1 || _assetType == 2,\n      'BTC:0, ETH:1, LINK:2'\n    );\n    assetType = _assetType;\n\n    buyer = address(0);\n    seller = address(0);\n    status = Status.pending;\n  }\n\n\n  // transactions\n\n  function premiumPaid() external onlyOwner isActive {\n    require(rounds > 0, 'Round already ended');\n    nextPayDate += 4 weeks;\n    setRounds(rounds - 1);\n  }\n\n  function accept(uint256 _initAssetPrice, bool _isBuyerHost) external onlyOwner isPending {\n    setInitAssetPrice(_initAssetPrice);\n    setParticipants(msg.sender, !_isBuyerHost);\n    setStatus(CDS.Status.active);\n    nextPayDate = block.timestamp + 4 weeks;\n    rounds -= 1;\n  }\n\n  function cancel() external onlyOwner isPending {\n    setStatus(CDS.Status.inactive);\n  }\n\n  function close() external onlyOwner isActive {\n    setStatus(CDS.Status.expired);\n  }\n\n  function claim() external onlyOwner isActive {\n    require(\n      getClaimReward() != 0,\n      'Current price is higher than the claim price in CDS'\n    );\n    setStatus(CDS.Status.claimed);\n  }\n\n  function checkRoundsZero() external view isActive returns (bool) {\n    return (rounds == 0);\n  }\n\n  function checkPayDatePassed() external view isActive returns (bool) {\n    return (block.timestamp >= nextPayDate);\n  }\n\n\n  // setter\n\n  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {\n    initAssetPrice = _initAssetPrice;\n    return initAssetPrice;\n  }\n\n  function setStatus(Status _status) private onlyOwner returns (Status) {\n    status = _status;\n    return status;\n  }\n\n  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {\n    _isBuyer ? setBuyer(_participants) : setSeller(_participants);\n  }\n\n  function setBuyer(address _buyer) public onlyOwner returns (address) {\n    buyer = _buyer;\n    return buyer;\n  }\n\n  function setSeller(address _seller) public onlyOwner returns (address) {\n    seller = _seller;\n    return seller;\n  }\n\n  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {\n    rounds = _rounds;\n    return rounds;\n  }\n\n  function setNextPayDate() private onlyOwner returns (uint256) {\n    nextPayDate += 4 weeks;\n    return nextPayDate;\n  }\n\n\n  // getter\n\n  function getPrices() public view returns (uint256[5] memory) {\n    return [\n      initAssetPrice,\n      claimPrice,\n      liquidationPrice,\n      premium,\n      sellerDeposit\n    ];\n  }\n\n  function getAmountOfAsset() public view returns (uint256) {\n    return initAssetPrice.calcAmountOfAsset(\n      liquidationPrice,\n      sellerDeposit\n    );\n  }\n\n  function getBuyer() public view returns (address) {\n    return buyer;\n  }\n\n  function getSeller() public view returns (address) {\n    return seller;\n  }\n\n  function getClaimReward() public view returns (uint256) {\n    uint256 currPrice = getCurrPrice(assetType);\n    if (claimPrice < currPrice) {\n      return 0;\n    }\n    return\n      sellerDeposit.calcClaimReward(\n        liquidationPrice,\n        initAssetPrice,\n        currPrice\n      );\n  }\n\n\n  // modifiers\n\n  modifier isPending() {\n    require(\n      status == Status.pending,\n      'The status of the CDS should be pending'\n    );\n    _;\n  }\n\n  modifier isActive() {\n    require(\n      status == Status.active,\n      'The status of the CDS should be active'\n    );\n    _;\n  }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/libs/LibSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\nlibrary LibSwap {\n  using SafeMath for uint256;\n\n  function calcClaimReward(\n    uint256 _deposit,\n    uint256 _liquidation,\n    uint256 _initial,\n    uint256 _current\n  ) internal pure returns (uint256) {\n    uint256 claimReward;\n    if (_liquidation >= _current) {\n      claimReward = _deposit;\n    } else {\n      uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation));\n      claimReward = numOfAsset.mul(_initial.sub(_current));\n    }\n    return claimReward;\n  }\n\n  function calcAmountOfAsset(\n    uint256 _initial,\n    uint256 _liquidation,\n    uint256 _sellerDeposit\n  ) internal pure returns (uint256) {\n    return _sellerDeposit.div(_initial.sub(_liquidation));\n  }\n}\n"
			},
			"contracts/CDS/PriceConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../Oracle/PriceOracleMock.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n\ncontract PriceConsumer {\n  using SafeMath for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  constructor(address _address) {\n    priceOracle = PriceOracleMock(_address);\n  }\n\n  function getCurrPrice(uint32 _assetType) public view returns (uint256) {\n    uint256 price;\n    if (_assetType == 0) {\n      price = priceOracle.btcPrice().div(10 ** 8);\n    } else if (_assetType == 1) {\n      price = priceOracle.ethPrice().div(10 ** 8);\n    } else if (_assetType == 2) {\n      price = priceOracle.linkPrice().div(10 ** 8);\n    }\n    return price;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract PriceOracleMock {\n  uint256 public btcPrice;\n  uint256 public ethPrice;\n  uint256 public linkPrice;\n\n  constructor(\n  ) {\n    btcPrice = 2500000000000;\n    ethPrice = 160000000000;\n    linkPrice = 750000000;\n  }\n\n  function setBTCPrice(uint256 _price) public returns (uint256) {\n    btcPrice = _price;\n    return btcPrice;\n  }\n\n  function setETHPrice(uint256 _price) public returns (uint256) {\n    ethPrice = _price;\n    return ethPrice;\n  }\n\n  function setLinkPrice(uint256 _price) public returns (uint256) {\n    linkPrice = _price;\n    return linkPrice;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/CDS.sol": {
				"CDS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_claimPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidationPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellerDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isBuyerHost",
									"type": "bool"
								}
							],
							"name": "accept",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetType",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkPayDatePassed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkRoundsZero",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmountOfAsset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrices",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPayDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premium",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premiumPaid",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellerDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								}
							],
							"name": "setBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								}
							],
							"name": "setInitAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_participants",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBuyer",
									"type": "bool"
								}
							],
							"name": "setParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "setSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/CDS.sol\":208:4521  contract CDS is Ownable, PriceConsumer(0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/CDS.sol\":791:1427  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/CDS.sol\":247:289  0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222 */\n  0x21558c2cda098e7e0ac7d38775b3e2b4a0945222\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x01\n  0x00\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/CDS.sol\":1008:1023  _initAssetPrice */\n  dup7\n    /* \"contracts/CDS/CDS.sol\":991:1005  initAssetPrice */\n  0x03\n    /* \"contracts/CDS/CDS.sol\":991:1023  initAssetPrice = _initAssetPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1042:1053  _claimPrice */\n  dup6\n    /* \"contracts/CDS/CDS.sol\":1029:1039  claimPrice */\n  0x04\n    /* \"contracts/CDS/CDS.sol\":1029:1053  claimPrice = _claimPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1078:1095  _liquidationPrice */\n  dup5\n    /* \"contracts/CDS/CDS.sol\":1059:1075  liquidationPrice */\n  0x05\n    /* \"contracts/CDS/CDS.sol\":1059:1095  liquidationPrice = _liquidationPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1111:1119  _premium */\n  dup4\n    /* \"contracts/CDS/CDS.sol\":1101:1108  premium */\n  0x06\n    /* \"contracts/CDS/CDS.sol\":1101:1119  premium = _premium */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1141:1155  _sellerDeposit */\n  dup3\n    /* \"contracts/CDS/CDS.sol\":1125:1138  sellerDeposit */\n  0x07\n    /* \"contracts/CDS/CDS.sol\":1125:1155  sellerDeposit = _sellerDeposit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1170:1177  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1161:1167  rounds */\n  0x0a\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1161:1177  rounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1197:1204  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1183:1194  totalRounds */\n  0x0a\n  0x18\n    /* \"contracts/CDS/CDS.sol\":1183:1204  totalRounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1240:1241  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1226:1236  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1226:1241  _assetType == 0 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1226:1260  _assetType == 0 || _assetType == 1 */\n  dup1\n  tag_14\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1259:1260  1 */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1245:1255  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1245:1260  _assetType == 1 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1226:1260  _assetType == 0 || _assetType == 1 */\ntag_14:\n    /* \"contracts/CDS/CDS.sol\":1226:1279  _assetType == 0 || _assetType == 1 || _assetType == 2 */\n  dup1\n  tag_15\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1278:1279  2 */\n  0x02\n    /* \"contracts/CDS/CDS.sol\":1264:1274  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1264:1279  _assetType == 2 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1226:1279  _assetType == 0 || _assetType == 1 || _assetType == 2 */\ntag_15:\n    /* \"contracts/CDS/CDS.sol\":1211:1315  require(... */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/CDS/CDS.sol\":1333:1343  _assetType */\n  dup1\n    /* \"contracts/CDS/CDS.sol\":1321:1330  assetType */\n  0x0a\n  0x1c\n    /* \"contracts/CDS/CDS.sol\":1321:1343  assetType = _assetType */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1366:1367  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1350:1355  buyer */\n  0x09\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1350:1368  buyer = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1391:1392  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1374:1380  seller */\n  0x0a\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1374:1393  seller = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1408:1422  Status.pending */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1399:1405  status */\n  0x02\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1399:1422  status = Status.pending */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\ntag_19:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":791:1427  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CDS/CDS.sol\":208:4521  contract CDS is Ownable, PriceConsumer(0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222) {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_26:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_28:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_29:\n    /* \"#utility.yul\":490:514   */\n  tag_43\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_44:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_30:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_46\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_29\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:787   */\ntag_31:\n    /* \"#utility.yul\":730:737   */\n  0x00\n    /* \"#utility.yul\":770:780   */\n  0xffffffff\n    /* \"#utility.yul\":763:768   */\n  dup3\n    /* \"#utility.yul\":759:781   */\n  and\n    /* \"#utility.yul\":748:781   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":793:913   */\ntag_32:\n    /* \"#utility.yul\":865:888   */\n  tag_49\n    /* \"#utility.yul\":882:887   */\n  dup2\n    /* \"#utility.yul\":865:888   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":858:863   */\n  dup2\n    /* \"#utility.yul\":855:889   */\n  eq\n    /* \"#utility.yul\":845:907   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":903:904   */\n  0x00\n    /* \"#utility.yul\":900:901   */\n  dup1\n    /* \"#utility.yul\":893:905   */\n  revert\n    /* \"#utility.yul\":845:907   */\ntag_50:\n    /* \"#utility.yul\":793:913   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":919:1060   */\ntag_33:\n    /* \"#utility.yul\":975:980   */\n  0x00\n    /* \"#utility.yul\":1006:1012   */\n  dup2\n    /* \"#utility.yul\":1000:1013   */\n  mload\n    /* \"#utility.yul\":991:1013   */\n  swap1\n  pop\n    /* \"#utility.yul\":1022:1054   */\n  tag_52\n    /* \"#utility.yul\":1048:1053   */\n  dup2\n    /* \"#utility.yul\":1022:1054   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":919:1060   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:2353   */\ntag_3:\n    /* \"#utility.yul\":1188:1194   */\n  0x00\n    /* \"#utility.yul\":1196:1202   */\n  dup1\n    /* \"#utility.yul\":1204:1210   */\n  0x00\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1220:1226   */\n  0x00\n    /* \"#utility.yul\":1228:1234   */\n  dup1\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1285:1288   */\n  0xe0\n    /* \"#utility.yul\":1273:1282   */\n  dup9\n    /* \"#utility.yul\":1264:1271   */\n  dup11\n    /* \"#utility.yul\":1260:1283   */\n  sub\n    /* \"#utility.yul\":1256:1289   */\n  slt\n    /* \"#utility.yul\":1253:1373   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1292:1371   */\n  tag_55\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1253:1373   */\ntag_54:\n    /* \"#utility.yul\":1412:1413   */\n  0x00\n    /* \"#utility.yul\":1437:1501   */\n  tag_56\n    /* \"#utility.yul\":1493:1500   */\n  dup11\n    /* \"#utility.yul\":1484:1490   */\n  dup3\n    /* \"#utility.yul\":1473:1482   */\n  dup12\n    /* \"#utility.yul\":1469:1491   */\n  add\n    /* \"#utility.yul\":1437:1501   */\n  tag_30\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1427:1501   */\n  swap8\n  pop\n    /* \"#utility.yul\":1383:1511   */\n  pop\n    /* \"#utility.yul\":1550:1552   */\n  0x20\n    /* \"#utility.yul\":1576:1640   */\n  tag_57\n    /* \"#utility.yul\":1632:1639   */\n  dup11\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1612:1621   */\n  dup12\n    /* \"#utility.yul\":1608:1630   */\n  add\n    /* \"#utility.yul\":1576:1640   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1566:1640   */\n  swap7\n  pop\n    /* \"#utility.yul\":1521:1650   */\n  pop\n    /* \"#utility.yul\":1689:1691   */\n  0x40\n    /* \"#utility.yul\":1715:1779   */\n  tag_58\n    /* \"#utility.yul\":1771:1778   */\n  dup11\n    /* \"#utility.yul\":1762:1768   */\n  dup3\n    /* \"#utility.yul\":1751:1760   */\n  dup12\n    /* \"#utility.yul\":1747:1769   */\n  add\n    /* \"#utility.yul\":1715:1779   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1705:1779   */\n  swap6\n  pop\n    /* \"#utility.yul\":1660:1789   */\n  pop\n    /* \"#utility.yul\":1828:1830   */\n  0x60\n    /* \"#utility.yul\":1854:1918   */\n  tag_59\n    /* \"#utility.yul\":1910:1917   */\n  dup11\n    /* \"#utility.yul\":1901:1907   */\n  dup3\n    /* \"#utility.yul\":1890:1899   */\n  dup12\n    /* \"#utility.yul\":1886:1908   */\n  add\n    /* \"#utility.yul\":1854:1918   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1844:1918   */\n  swap5\n  pop\n    /* \"#utility.yul\":1799:1928   */\n  pop\n    /* \"#utility.yul\":1967:1970   */\n  0x80\n    /* \"#utility.yul\":1994:2058   */\n  tag_60\n    /* \"#utility.yul\":2050:2057   */\n  dup11\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2030:2039   */\n  dup12\n    /* \"#utility.yul\":2026:2048   */\n  add\n    /* \"#utility.yul\":1994:2058   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1984:2058   */\n  swap4\n  pop\n    /* \"#utility.yul\":1938:2068   */\n  pop\n    /* \"#utility.yul\":2107:2110   */\n  0xa0\n    /* \"#utility.yul\":2134:2197   */\n  tag_61\n    /* \"#utility.yul\":2189:2196   */\n  dup11\n    /* \"#utility.yul\":2180:2186   */\n  dup3\n    /* \"#utility.yul\":2169:2178   */\n  dup12\n    /* \"#utility.yul\":2165:2187   */\n  add\n    /* \"#utility.yul\":2134:2197   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2124:2197   */\n  swap3\n  pop\n    /* \"#utility.yul\":2078:2207   */\n  pop\n    /* \"#utility.yul\":2246:2249   */\n  0xc0\n    /* \"#utility.yul\":2273:2336   */\n  tag_62\n    /* \"#utility.yul\":2328:2335   */\n  dup11\n    /* \"#utility.yul\":2319:2325   */\n  dup3\n    /* \"#utility.yul\":2308:2317   */\n  dup12\n    /* \"#utility.yul\":2304:2326   */\n  add\n    /* \"#utility.yul\":2273:2336   */\n  tag_33\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2263:2336   */\n  swap2\n  pop\n    /* \"#utility.yul\":2217:2346   */\n  pop\n    /* \"#utility.yul\":1066:2353   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2359:2528   */\ntag_34:\n    /* \"#utility.yul\":2443:2454   */\n  0x00\n    /* \"#utility.yul\":2477:2483   */\n  dup3\n    /* \"#utility.yul\":2472:2475   */\n  dup3\n    /* \"#utility.yul\":2465:2484   */\n  mstore\n    /* \"#utility.yul\":2517:2521   */\n  0x20\n    /* \"#utility.yul\":2512:2515   */\n  dup3\n    /* \"#utility.yul\":2508:2522   */\n  add\n    /* \"#utility.yul\":2493:2522   */\n  swap1\n  pop\n    /* \"#utility.yul\":2359:2528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2534:2704   */\ntag_35:\n    /* \"#utility.yul\":2674:2696   */\n  0x4254433a302c204554483a312c204c494e4b3a32000000000000000000000000\n    /* \"#utility.yul\":2670:2671   */\n  0x00\n    /* \"#utility.yul\":2662:2668   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2651:2697   */\n  mstore\n    /* \"#utility.yul\":2534:2704   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2710:3076   */\ntag_36:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2873:2940   */\n  tag_66\n    /* \"#utility.yul\":2937:2939   */\n  0x14\n    /* \"#utility.yul\":2932:2935   */\n  dup4\n    /* \"#utility.yul\":2873:2940   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2866:2940   */\n  swap2\n  pop\n    /* \"#utility.yul\":2949:3042   */\n  tag_67\n    /* \"#utility.yul\":3038:3041   */\n  dup3\n    /* \"#utility.yul\":2949:3042   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3067:3069   */\n  0x20\n    /* \"#utility.yul\":3062:3065   */\n  dup3\n    /* \"#utility.yul\":3058:3070   */\n  add\n    /* \"#utility.yul\":3051:3070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2710:3076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3082:3501   */\ntag_18:\n    /* \"#utility.yul\":3248:3252   */\n  0x00\n    /* \"#utility.yul\":3286:3288   */\n  0x20\n    /* \"#utility.yul\":3275:3284   */\n  dup3\n    /* \"#utility.yul\":3271:3289   */\n  add\n    /* \"#utility.yul\":3263:3289   */\n  swap1\n  pop\n    /* \"#utility.yul\":3335:3344   */\n  dup2\n    /* \"#utility.yul\":3329:3333   */\n  dup2\n    /* \"#utility.yul\":3325:3345   */\n  sub\n    /* \"#utility.yul\":3321:3322   */\n  0x00\n    /* \"#utility.yul\":3310:3319   */\n  dup4\n    /* \"#utility.yul\":3306:3323   */\n  add\n    /* \"#utility.yul\":3299:3346   */\n  mstore\n    /* \"#utility.yul\":3363:3494   */\n  tag_69\n    /* \"#utility.yul\":3489:3493   */\n  dup2\n    /* \"#utility.yul\":3363:3494   */\n  tag_36\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3355:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3082:3501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3507:3687   */\ntag_21:\n    /* \"#utility.yul\":3555:3632   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3545:3633   */\n  mstore\n    /* \"#utility.yul\":3652:3656   */\n  0x21\n    /* \"#utility.yul\":3649:3650   */\n  0x04\n    /* \"#utility.yul\":3642:3657   */\n  mstore\n    /* \"#utility.yul\":3676:3680   */\n  0x24\n    /* \"#utility.yul\":3673:3674   */\n  0x00\n    /* \"#utility.yul\":3666:3681   */\n  revert\n    /* \"contracts/CDS/CDS.sol\":208:4521  contract CDS is Ownable, PriceConsumer(0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222) {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/CDS.sol\":208:4521  contract CDS is Ownable, PriceConsumer(0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3f09ad6\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdbd0e1b6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf26cc58e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf26cc58e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfcb341df\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xffd0e69f\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xdbd0e1b6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe0a73a93\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe99d2866\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xbd9a548b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xbd9a548b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbef904e3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcbed2449\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd8683798\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa3f09ad6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb6fc2d5f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbab215f8\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x5b6a251b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x86be75b7\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x86be75b7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8a568299\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa2e800ad\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x5b6a251b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x603daf9a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x839966af\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3fe3347a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x3fe3347a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x43d726d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4c1786ea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x15d655c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3b41e19c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/CDS.sol\":507:532  uint256 public claimPrice */\n    tag_3:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":449:469  Status public status */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1614:1892  function accept(uint256 _initAssetPrice, bool _isBuyerHost) external onlyOwner isPending {... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/CDS/CDS.sol\":763:786  uint32 public assetType */\n    tag_6:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1988:2073  function close() external onlyOwner isActive {... */\n    tag_7:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/CDS/CDS.sol\":597:625  uint256 public sellerDeposit */\n    tag_8:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2077:2271  function claim() external onlyOwner isActive {... */\n    tag_9:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/CDS/CDS.sol\":1451:1610  function premiumPaid() external onlyOwner isActive {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3784:3857  function getBuyer() public view returns (address) {... */\n    tag_11:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/CDS/CDS.sol\":2375:2493  function checkPayDatePassed() external view isActive returns (bool) {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":474:503  uint256 public initAssetPrice */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":734:759  uint32 public totalRounds */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":710:730  uint32 public rounds */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2938:3050  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":536:567  uint256 public liquidationPrice */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2782:2934  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3432:3617  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2511:2658  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":629:655  uint256 public nextPayDate */\n    tag_24:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":3861:3936  function getSeller() public view returns (address) {... */\n    tag_25:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":571:593  uint256 public premium */\n    tag_26:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":3054:3171  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1896:1984  function cancel() external onlyOwner isPending {... */\n    tag_28:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3940:4231  function getClaimReward() public view returns (uint256) {... */\n    tag_29:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3621:3780  function getAmountOfAsset() public view returns (uint256) {... */\n    tag_31:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2275:2371  function checkRoundsZero() external view isActive returns (bool) {... */\n    tag_32:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":507:532  uint256 public claimPrice */\n    tag_41:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":449:469  Status public status */\n    tag_45:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1614:1892  function accept(uint256 _initAssetPrice, bool _isBuyerHost) external onlyOwner isPending {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/CDS/CDS.sol\":4304:4318  Status.pending */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":4294:4318  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n    tag_144:\n        /* \"contracts/CDS/CDS.sol\":4294:4300  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4294:4318  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_146\n      jump\t// in\n    tag_148:\n    tag_147:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4279:4373  require(... */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/CDS/CDS.sol\":1709:1743  setInitAssetPrice(_initAssetPrice) */\n      tag_153\n        /* \"contracts/CDS/CDS.sol\":1727:1742  _initAssetPrice */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":1709:1726  setInitAssetPrice */\n      tag_106\n        /* \"contracts/CDS/CDS.sol\":1709:1743  setInitAssetPrice(_initAssetPrice) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1749:1791  setParticipants(msg.sender, !_isBuyerHost) */\n      tag_154\n        /* \"contracts/CDS/CDS.sol\":1765:1775  msg.sender */\n      caller\n        /* \"contracts/CDS/CDS.sol\":1778:1790  _isBuyerHost */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":1777:1790  !_isBuyerHost */\n      iszero\n        /* \"contracts/CDS/CDS.sol\":1749:1764  setParticipants */\n      tag_98\n        /* \"contracts/CDS/CDS.sol\":1749:1791  setParticipants(msg.sender, !_isBuyerHost) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/CDS/CDS.sol\":1797:1825  setStatus(CDS.Status.active) */\n      tag_155\n        /* \"contracts/CDS/CDS.sol\":1807:1824  CDS.Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":1797:1806  setStatus */\n      tag_156\n        /* \"contracts/CDS/CDS.sol\":1797:1825  setStatus(CDS.Status.active) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1863:1870  4 weeks */\n      0x24ea00\n        /* \"contracts/CDS/CDS.sol\":1845:1860  block.timestamp */\n      timestamp\n        /* \"contracts/CDS/CDS.sol\":1845:1870  block.timestamp + 4 weeks */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/CDS/CDS.sol\":1831:1842  nextPayDate */\n      0x08\n        /* \"contracts/CDS/CDS.sol\":1831:1870  nextPayDate = block.timestamp + 4 weeks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1886:1887  1 */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":1876:1882  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":1876:1887  rounds -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1614:1892  function accept(uint256 _initAssetPrice, bool _isBuyerHost) external onlyOwner isPending {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":763:786  uint32 public assetType */\n    tag_53:\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1988:2073  function close() external onlyOwner isActive {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/CDS/CDS.sol\":4440:4453  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_164\n      jumpi\n      tag_165\n      tag_146\n      jump\t// in\n    tag_165:\n    tag_164:\n        /* \"contracts/CDS/CDS.sol\":4430:4436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_166\n      jumpi\n      tag_167\n      tag_146\n      jump\t// in\n    tag_167:\n    tag_166:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4415:4507  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/CDS/CDS.sol\":2039:2068  setStatus(CDS.Status.expired) */\n      tag_172\n        /* \"contracts/CDS/CDS.sol\":2049:2067  CDS.Status.expired */\n      0x04\n        /* \"contracts/CDS/CDS.sol\":2039:2048  setStatus */\n      tag_156\n        /* \"contracts/CDS/CDS.sol\":2039:2068  setStatus(CDS.Status.expired) */\n      jump\t// in\n    tag_172:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1988:2073  function close() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":597:625  uint256 public sellerDeposit */\n    tag_59:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2077:2271  function claim() external onlyOwner isActive {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/CDS/CDS.sol\":4440:4453  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      tag_177\n      tag_146\n      jump\t// in\n    tag_177:\n    tag_176:\n        /* \"contracts/CDS/CDS.sol\":4430:4436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_178\n      jumpi\n      tag_179\n      tag_146\n      jump\t// in\n    tag_179:\n    tag_178:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4415:4507  require(... */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_170\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/CDS/CDS.sol\":2163:2164  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2143:2159  getClaimReward() */\n      tag_183\n        /* \"contracts/CDS/CDS.sol\":2143:2157  getClaimReward */\n      tag_129\n        /* \"contracts/CDS/CDS.sol\":2143:2159  getClaimReward() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/CDS/CDS.sol\":2143:2164  getClaimReward() != 0 */\n      eq\n      iszero\n        /* \"contracts/CDS/CDS.sol\":2128:2231  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/CDS/CDS.sol\":2237:2266  setStatus(CDS.Status.claimed) */\n      tag_187\n        /* \"contracts/CDS/CDS.sol\":2247:2265  CDS.Status.claimed */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2237:2246  setStatus */\n      tag_156\n        /* \"contracts/CDS/CDS.sol\":2237:2266  setStatus(CDS.Status.claimed) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2077:2271  function claim() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1451:1610  function premiumPaid() external onlyOwner isActive {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/CDS/CDS.sol\":4440:4453  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      tag_192\n      tag_146\n      jump\t// in\n    tag_192:\n    tag_191:\n        /* \"contracts/CDS/CDS.sol\":4430:4436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_193\n      jumpi\n      tag_194\n      tag_146\n      jump\t// in\n    tag_194:\n    tag_193:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4415:4507  require(... */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_170\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/CDS/CDS.sol\":1525:1526  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1516:1522  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1516:1526  rounds > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CDS/CDS.sol\":1508:1550  require(rounds > 0, 'Round already ended') */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/CDS/CDS.sol\":1571:1578  4 weeks */\n      0x24ea00\n        /* \"contracts/CDS/CDS.sol\":1556:1567  nextPayDate */\n      0x08\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1556:1578  nextPayDate += 4 weeks */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1584:1605  setRounds(rounds - 1) */\n      tag_202\n        /* \"contracts/CDS/CDS.sol\":1603:1604  1 */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":1594:1600  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1594:1604  rounds - 1 */\n      tag_203\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_203:\n        /* \"contracts/CDS/CDS.sol\":1584:1593  setRounds */\n      tag_204\n        /* \"contracts/CDS/CDS.sol\":1584:1605  setRounds(rounds - 1) */\n      jump\t// in\n    tag_202:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1451:1610  function premiumPaid() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3784:3857  function getBuyer() public view returns (address) {... */\n    tag_66:\n        /* \"contracts/CDS/CDS.sol\":3825:3832  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3847:3852  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3840:3852  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3784:3857  function getBuyer() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2375:2493  function checkPayDatePassed() external view isActive returns (bool) {... */\n    tag_72:\n        /* \"contracts/CDS/CDS.sol\":2437:2441  bool */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4440:4453  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_213\n      tag_146\n      jump\t// in\n    tag_213:\n    tag_212:\n        /* \"contracts/CDS/CDS.sol\":4430:4436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_214\n      jumpi\n      tag_215\n      tag_146\n      jump\t// in\n    tag_215:\n    tag_214:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4415:4507  require(... */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_170\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/CDS/CDS.sol\":2476:2487  nextPayDate */\n      sload(0x08)\n        /* \"contracts/CDS/CDS.sol\":2457:2472  block.timestamp */\n      timestamp\n        /* \"contracts/CDS/CDS.sol\":2457:2487  block.timestamp >= nextPayDate */\n      lt\n      iszero\n        /* \"contracts/CDS/CDS.sol\":2449:2488  return (block.timestamp >= nextPayDate) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2375:2493  function checkPayDatePassed() external view isActive returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":474:503  uint256 public initAssetPrice */\n    tag_76:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":734:759  uint32 public totalRounds */\n    tag_79:\n      0x0a\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":710:730  uint32 public rounds */\n    tag_85:\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2938:3050  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_90:\n        /* \"contracts/CDS/CDS.sol\":2998:3005  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/CDS/CDS.sol\":3021:3027  _buyer */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3013:3018  buyer */\n      0x09\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3013:3027  buyer = _buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3040:3045  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3033:3045  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2938:3050  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":536:567  uint256 public liquidationPrice */\n    tag_93:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2782:2934  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/CDS/CDS.sol\":2868:2876  _isBuyer */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":2868:2929  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      tag_226\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2905:2929  setSeller(_participants) */\n      tag_227\n        /* \"contracts/CDS/CDS.sol\":2915:2928  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2905:2914  setSeller */\n      tag_124\n        /* \"contracts/CDS/CDS.sol\":2905:2929  setSeller(_participants) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/CDS/CDS.sol\":2868:2929  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      jump(tag_228)\n    tag_226:\n        /* \"contracts/CDS/CDS.sol\":2879:2902  setBuyer(_participants) */\n      tag_229\n        /* \"contracts/CDS/CDS.sol\":2888:2901  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2879:2887  setBuyer */\n      tag_90\n        /* \"contracts/CDS/CDS.sol\":2879:2902  setBuyer(_participants) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/CDS/CDS.sol\":2868:2929  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n    tag_228:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2782:2934  function setParticipants(address _participants, bool _isBuyer) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3432:3617  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_100:\n        /* \"contracts/CDS/CDS.sol\":3474:3491  uint256[5] memory */\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CDS/CDS.sol\":3514:3528  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3536:3546  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3554:3570  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3578:3585  premium */\n      sload(0x06)\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3593:3606  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":3499:3612  return [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3432:3617  function getPrices() public view returns (uint256[5] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2511:2658  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_106:\n        /* \"contracts/CDS/CDS.sol\":2579:2586  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2611:2626  _initAssetPrice */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2594:2608  initAssetPrice */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2594:2626  initAssetPrice = _initAssetPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2639:2653  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2632:2653  return initAssetPrice */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2511:2658  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_111:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_236\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_242)\n    tag_235:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_244\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_247:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_248)\n    tag_243:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_250\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_253:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_249:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_248:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_242:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":629:655  uint256 public nextPayDate */\n    tag_114:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3861:3936  function getSeller() public view returns (address) {... */\n    tag_117:\n        /* \"contracts/CDS/CDS.sol\":3903:3910  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3925:3931  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3918:3931  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3861:3936  function getSeller() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":571:593  uint256 public premium */\n    tag_120:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3054:3171  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_124:\n        /* \"contracts/CDS/CDS.sol\":3116:3123  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/CDS/CDS.sol\":3140:3147  _seller */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3131:3137  seller */\n      0x0a\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3131:3147  seller = _seller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3160:3166  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3153:3166  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3054:3171  function setSeller(address _seller) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1896:1984  function cancel() external onlyOwner isPending {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/CDS/CDS.sol\":4304:4318  Status.pending */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":4294:4318  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_146\n      jump\t// in\n    tag_262:\n    tag_261:\n        /* \"contracts/CDS/CDS.sol\":4294:4300  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4294:4318  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_146\n      jump\t// in\n    tag_264:\n    tag_263:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4279:4373  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_151\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/CDS/CDS.sol\":1949:1979  setStatus(CDS.Status.inactive) */\n      tag_268\n        /* \"contracts/CDS/CDS.sol\":1959:1978  CDS.Status.inactive */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1949:1958  setStatus */\n      tag_156\n        /* \"contracts/CDS/CDS.sol\":1949:1979  setStatus(CDS.Status.inactive) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1896:1984  function cancel() external onlyOwner isPending {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3940:4231  function getClaimReward() public view returns (uint256) {... */\n    tag_129:\n        /* \"contracts/CDS/CDS.sol\":3987:3994  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4002:4019  uint256 currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":4022:4045  getCurrPrice(assetType) */\n      tag_270\n        /* \"contracts/CDS/CDS.sol\":4035:4044  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":4022:4034  getCurrPrice */\n      tag_111\n        /* \"contracts/CDS/CDS.sol\":4022:4045  getCurrPrice(assetType) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/CDS/CDS.sol\":4002:4045  uint256 currPrice = getCurrPrice(assetType) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":4068:4077  currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":4055:4065  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":4055:4077  claimPrice < currPrice */\n      lt\n        /* \"contracts/CDS/CDS.sol\":4051:4102  if (claimPrice < currPrice) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":4094:4095  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4087:4095  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_269)\n        /* \"contracts/CDS/CDS.sol\":4051:4102  if (claimPrice < currPrice) {... */\n    tag_271:\n        /* \"contracts/CDS/CDS.sol\":4120:4226  sellerDeposit.calcClaimReward(... */\n      tag_272\n        /* \"contracts/CDS/CDS.sol\":4159:4175  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":4185:4199  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":4209:4218  currPrice */\n      dup4\n        /* \"contracts/CDS/CDS.sol\":4120:4133  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":4120:4149  sellerDeposit.calcClaimReward */\n      tag_273\n      swap1\n        /* \"contracts/CDS/CDS.sol\":4120:4226  sellerDeposit.calcClaimReward(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/CDS/CDS.sol\":4107:4226  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/CDS.sol\":3940:4231  function getClaimReward() public view returns (uint256) {... */\n    tag_269:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3621:3780  function getAmountOfAsset() public view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/CDS/CDS.sol\":3670:3677  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3692:3775  initAssetPrice.calcAmountOfAsset(... */\n      tag_282\n        /* \"contracts/CDS/CDS.sol\":3732:3748  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":3756:3769  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":3692:3706  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":3692:3724  initAssetPrice.calcAmountOfAsset */\n      tag_283\n      swap1\n        /* \"contracts/CDS/CDS.sol\":3692:3775  initAssetPrice.calcAmountOfAsset(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/CDS/CDS.sol\":3685:3775  return initAssetPrice.calcAmountOfAsset(... */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3621:3780  function getAmountOfAsset() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2275:2371  function checkRoundsZero() external view isActive returns (bool) {... */\n    tag_138:\n        /* \"contracts/CDS/CDS.sol\":2334:2338  bool */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4440:4453  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_285\n      jumpi\n      tag_286\n      tag_146\n      jump\t// in\n    tag_286:\n    tag_285:\n        /* \"contracts/CDS/CDS.sol\":4430:4436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4430:4453  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_146\n      jump\t// in\n    tag_288:\n    tag_287:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4415:4507  require(... */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_170\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/CDS/CDS.sol\":2364:2365  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2354:2360  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2354:2365  rounds == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/CDS.sol\":2346:2366  return (rounds == 0) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2275:2371  function checkRoundsZero() external view isActive returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2662:2778  function setStatus(Status _status) private onlyOwner returns (Status) {... */\n    tag_156:\n        /* \"contracts/CDS/CDS.sol\":2724:2730  Status */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_300\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_300:\n        /* \"contracts/CDS/CDS.sol\":2747:2754  _status */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2738:2744  status */\n      0x02\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2738:2754  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_302\n      jumpi\n      tag_303\n      tag_146\n      jump\t// in\n    tag_303:\n    tag_302:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2767:2773  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":2760:2773  return status */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2662:2778  function setStatus(Status _status) private onlyOwner returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3175:3291  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {... */\n    tag_204:\n        /* \"contracts/CDS/CDS.sol\":3237:3243  uint32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"contracts/CDS/CDS.sol\":3260:3267  _rounds */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3251:3257  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":3251:3267  rounds = _rounds */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3280:3286  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3273:3286  return rounds */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3175:3291  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_309\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n    tag_273:\n        /* \"contracts/libs/LibSwap.sol\":311:318  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":326:345  uint256 claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":371:379  _current */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":355:367  _liquidation */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":355:379  _liquidation >= _current */\n      lt\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      tag_312\n      jumpi\n        /* \"contracts/libs/LibSwap.sol\":403:411  _deposit */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":389:411  claimReward = _deposit */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      jump(tag_313)\n    tag_312:\n        /* \"contracts/libs/LibSwap.sol\":432:450  uint256 numOfAsset */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      tag_314\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      tag_315\n        /* \"contracts/libs/LibSwap.sol\":479:491  _liquidation */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:474  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:478  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/libs/LibSwap.sol\":453:461  _deposit */\n      dup9\n        /* \"contracts/libs/LibSwap.sol\":453:465  _deposit.div */\n      tag_241\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/libs/LibSwap.sol\":432:493  uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      tag_317\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      tag_318\n        /* \"contracts/libs/LibSwap.sol\":543:551  _current */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":530:538  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":530:542  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/libs/LibSwap.sol\":515:525  numOfAsset */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":515:529  numOfAsset.mul */\n      tag_319\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/libs/LibSwap.sol\":501:553  claimReward = numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      pop\n        /* \"contracts/libs/LibSwap.sol\":424:560  {... */\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n    tag_313:\n        /* \"contracts/libs/LibSwap.sol\":572:583  claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":565:583  return claimReward */\n      swap2\n      pop\n      pop\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n    tag_283:\n        /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      tag_321\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      tag_322\n        /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n      dup5\n        /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n      dup7\n        /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n      dup4\n        /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n      tag_241\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_328\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_231:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_330:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_331:\n        /* \"#utility.yul\":177:201   */\n      tag_380\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_330\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_43:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_382\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_331\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_146:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x21\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:743   */\n    tag_332:\n        /* \"#utility.yul\":711:712   */\n      0x05\n        /* \"#utility.yul\":704:709   */\n      dup2\n        /* \"#utility.yul\":701:713   */\n      lt\n        /* \"#utility.yul\":691:737   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":717:735   */\n      tag_386\n      tag_146\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":691:737   */\n    tag_385:\n        /* \"#utility.yul\":628:743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:880   */\n    tag_333:\n        /* \"#utility.yul\":796:803   */\n      0x00\n        /* \"#utility.yul\":825:830   */\n      dup2\n        /* \"#utility.yul\":814:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:874   */\n      tag_388\n        /* \"#utility.yul\":868:873   */\n      dup3\n        /* \"#utility.yul\":831:874   */\n      tag_332\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":749:880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":886:1017   */\n    tag_334:\n        /* \"#utility.yul\":944:953   */\n      0x00\n        /* \"#utility.yul\":977:1011   */\n      tag_390\n        /* \"#utility.yul\":1005:1010   */\n      dup3\n        /* \"#utility.yul\":977:1011   */\n      tag_333\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":964:1011   */\n      swap1\n      pop\n        /* \"#utility.yul\":886:1017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1023:1170   */\n    tag_335:\n        /* \"#utility.yul\":1118:1163   */\n      tag_392\n        /* \"#utility.yul\":1157:1162   */\n      dup2\n        /* \"#utility.yul\":1118:1163   */\n      tag_334\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1113:1116   */\n      dup3\n        /* \"#utility.yul\":1106:1164   */\n      mstore\n        /* \"#utility.yul\":1023:1170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1414   */\n    tag_47:\n        /* \"#utility.yul\":1277:1281   */\n      0x00\n        /* \"#utility.yul\":1315:1317   */\n      0x20\n        /* \"#utility.yul\":1304:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1292:1318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1407   */\n      tag_394\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1393:1402   */\n      dup4\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1380:1386   */\n      dup5\n        /* \"#utility.yul\":1328:1407   */\n      tag_335\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1176:1414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1501:1618   */\n    tag_337:\n        /* \"#utility.yul\":1610:1611   */\n      0x00\n        /* \"#utility.yul\":1607:1608   */\n      dup1\n        /* \"#utility.yul\":1600:1612   */\n      revert\n        /* \"#utility.yul\":1747:1869   */\n    tag_339:\n        /* \"#utility.yul\":1820:1844   */\n      tag_399\n        /* \"#utility.yul\":1838:1843   */\n      dup2\n        /* \"#utility.yul\":1820:1844   */\n      tag_330\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1813:1818   */\n      dup2\n        /* \"#utility.yul\":1810:1845   */\n      eq\n        /* \"#utility.yul\":1800:1863   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1859:1860   */\n      0x00\n        /* \"#utility.yul\":1856:1857   */\n      dup1\n        /* \"#utility.yul\":1849:1861   */\n      revert\n        /* \"#utility.yul\":1800:1863   */\n    tag_400:\n        /* \"#utility.yul\":1747:1869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1875:2014   */\n    tag_340:\n        /* \"#utility.yul\":1921:1926   */\n      0x00\n        /* \"#utility.yul\":1959:1965   */\n      dup2\n        /* \"#utility.yul\":1946:1966   */\n      calldataload\n        /* \"#utility.yul\":1937:1966   */\n      swap1\n      pop\n        /* \"#utility.yul\":1975:2008   */\n      tag_402\n        /* \"#utility.yul\":2002:2007   */\n      dup2\n        /* \"#utility.yul\":1975:2008   */\n      tag_339\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1875:2014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2020:2110   */\n    tag_341:\n        /* \"#utility.yul\":2054:2061   */\n      0x00\n        /* \"#utility.yul\":2097:2102   */\n      dup2\n        /* \"#utility.yul\":2090:2103   */\n      iszero\n        /* \"#utility.yul\":2083:2104   */\n      iszero\n        /* \"#utility.yul\":2072:2104   */\n      swap1\n      pop\n        /* \"#utility.yul\":2020:2110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2232   */\n    tag_342:\n        /* \"#utility.yul\":2186:2207   */\n      tag_405\n        /* \"#utility.yul\":2201:2206   */\n      dup2\n        /* \"#utility.yul\":2186:2207   */\n      tag_341\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2179:2184   */\n      dup2\n        /* \"#utility.yul\":2176:2208   */\n      eq\n        /* \"#utility.yul\":2166:2226   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2222:2223   */\n      0x00\n        /* \"#utility.yul\":2219:2220   */\n      dup1\n        /* \"#utility.yul\":2212:2224   */\n      revert\n        /* \"#utility.yul\":2166:2226   */\n    tag_406:\n        /* \"#utility.yul\":2116:2232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2371   */\n    tag_343:\n        /* \"#utility.yul\":2281:2286   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup2\n        /* \"#utility.yul\":2306:2326   */\n      calldataload\n        /* \"#utility.yul\":2297:2326   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2365   */\n      tag_408\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2335:2365   */\n      tag_342\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2238:2371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2845   */\n    tag_50:\n        /* \"#utility.yul\":2442:2448   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup1\n        /* \"#utility.yul\":2499:2501   */\n      0x40\n        /* \"#utility.yul\":2487:2496   */\n      dup4\n        /* \"#utility.yul\":2478:2485   */\n      dup6\n        /* \"#utility.yul\":2474:2497   */\n      sub\n        /* \"#utility.yul\":2470:2502   */\n      slt\n        /* \"#utility.yul\":2467:2586   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":2505:2584   */\n      tag_411\n      tag_337\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2467:2586   */\n    tag_410:\n        /* \"#utility.yul\":2625:2626   */\n      0x00\n        /* \"#utility.yul\":2650:2703   */\n      tag_412\n        /* \"#utility.yul\":2695:2702   */\n      dup6\n        /* \"#utility.yul\":2686:2692   */\n      dup3\n        /* \"#utility.yul\":2675:2684   */\n      dup7\n        /* \"#utility.yul\":2671:2693   */\n      add\n        /* \"#utility.yul\":2650:2703   */\n      tag_340\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2640:2703   */\n      swap3\n      pop\n        /* \"#utility.yul\":2596:2713   */\n      pop\n        /* \"#utility.yul\":2752:2754   */\n      0x20\n        /* \"#utility.yul\":2778:2828   */\n      tag_413\n        /* \"#utility.yul\":2820:2827   */\n      dup6\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2800:2809   */\n      dup7\n        /* \"#utility.yul\":2796:2818   */\n      add\n        /* \"#utility.yul\":2778:2828   */\n      tag_343\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2768:2828   */\n      swap2\n      pop\n        /* \"#utility.yul\":2723:2838   */\n      pop\n        /* \"#utility.yul\":2377:2845   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2851:2944   */\n    tag_344:\n        /* \"#utility.yul\":2887:2894   */\n      0x00\n        /* \"#utility.yul\":2927:2937   */\n      0xffffffff\n        /* \"#utility.yul\":2920:2925   */\n      dup3\n        /* \"#utility.yul\":2916:2938   */\n      and\n        /* \"#utility.yul\":2905:2938   */\n      swap1\n      pop\n        /* \"#utility.yul\":2851:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3065   */\n    tag_345:\n        /* \"#utility.yul\":3035:3058   */\n      tag_416\n        /* \"#utility.yul\":3052:3057   */\n      dup2\n        /* \"#utility.yul\":3035:3058   */\n      tag_344\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":3023:3059   */\n      mstore\n        /* \"#utility.yul\":2950:3065   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3289   */\n    tag_55:\n        /* \"#utility.yul\":3162:3166   */\n      0x00\n        /* \"#utility.yul\":3200:3202   */\n      0x20\n        /* \"#utility.yul\":3189:3198   */\n      dup3\n        /* \"#utility.yul\":3185:3203   */\n      add\n        /* \"#utility.yul\":3177:3203   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3282   */\n      tag_418\n        /* \"#utility.yul\":3279:3280   */\n      0x00\n        /* \"#utility.yul\":3268:3277   */\n      dup4\n        /* \"#utility.yul\":3264:3281   */\n      add\n        /* \"#utility.yul\":3255:3261   */\n      dup5\n        /* \"#utility.yul\":3213:3282   */\n      tag_345\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3071:3289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3295:3421   */\n    tag_346:\n        /* \"#utility.yul\":3332:3339   */\n      0x00\n        /* \"#utility.yul\":3372:3414   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3365:3370   */\n      dup3\n        /* \"#utility.yul\":3361:3415   */\n      and\n        /* \"#utility.yul\":3350:3415   */\n      swap1\n      pop\n        /* \"#utility.yul\":3295:3421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3427:3523   */\n    tag_347:\n        /* \"#utility.yul\":3464:3471   */\n      0x00\n        /* \"#utility.yul\":3493:3517   */\n      tag_421\n        /* \"#utility.yul\":3511:3516   */\n      dup3\n        /* \"#utility.yul\":3493:3517   */\n      tag_346\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3482:3517   */\n      swap1\n      pop\n        /* \"#utility.yul\":3427:3523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3529:3647   */\n    tag_348:\n        /* \"#utility.yul\":3616:3640   */\n      tag_423\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3616:3640   */\n      tag_347\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3611:3614   */\n      dup3\n        /* \"#utility.yul\":3604:3641   */\n      mstore\n        /* \"#utility.yul\":3529:3647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3875   */\n    tag_68:\n        /* \"#utility.yul\":3746:3750   */\n      0x00\n        /* \"#utility.yul\":3784:3786   */\n      0x20\n        /* \"#utility.yul\":3773:3782   */\n      dup3\n        /* \"#utility.yul\":3769:3787   */\n      add\n        /* \"#utility.yul\":3761:3787   */\n      swap1\n      pop\n        /* \"#utility.yul\":3797:3868   */\n      tag_425\n        /* \"#utility.yul\":3865:3866   */\n      0x00\n        /* \"#utility.yul\":3854:3863   */\n      dup4\n        /* \"#utility.yul\":3850:3867   */\n      add\n        /* \"#utility.yul\":3841:3847   */\n      dup5\n        /* \"#utility.yul\":3797:3868   */\n      tag_348\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3653:3875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3881:3990   */\n    tag_349:\n        /* \"#utility.yul\":3962:3983   */\n      tag_427\n        /* \"#utility.yul\":3977:3982   */\n      dup2\n        /* \"#utility.yul\":3962:3983   */\n      tag_341\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3957:3960   */\n      dup3\n        /* \"#utility.yul\":3950:3984   */\n      mstore\n        /* \"#utility.yul\":3881:3990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3996:4206   */\n    tag_74:\n        /* \"#utility.yul\":4083:4087   */\n      0x00\n        /* \"#utility.yul\":4121:4123   */\n      0x20\n        /* \"#utility.yul\":4110:4119   */\n      dup3\n        /* \"#utility.yul\":4106:4124   */\n      add\n        /* \"#utility.yul\":4098:4124   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4199   */\n      tag_429\n        /* \"#utility.yul\":4196:4197   */\n      0x00\n        /* \"#utility.yul\":4185:4194   */\n      dup4\n        /* \"#utility.yul\":4181:4198   */\n      add\n        /* \"#utility.yul\":4172:4178   */\n      dup5\n        /* \"#utility.yul\":4134:4199   */\n      tag_349\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3996:4206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4212:4334   */\n    tag_350:\n        /* \"#utility.yul\":4285:4309   */\n      tag_431\n        /* \"#utility.yul\":4303:4308   */\n      dup2\n        /* \"#utility.yul\":4285:4309   */\n      tag_347\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4278:4283   */\n      dup2\n        /* \"#utility.yul\":4275:4310   */\n      eq\n        /* \"#utility.yul\":4265:4328   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4265:4328   */\n    tag_432:\n        /* \"#utility.yul\":4212:4334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4340:4479   */\n    tag_351:\n        /* \"#utility.yul\":4386:4391   */\n      0x00\n        /* \"#utility.yul\":4424:4430   */\n      dup2\n        /* \"#utility.yul\":4411:4431   */\n      calldataload\n        /* \"#utility.yul\":4402:4431   */\n      swap1\n      pop\n        /* \"#utility.yul\":4440:4473   */\n      tag_434\n        /* \"#utility.yul\":4467:4472   */\n      dup2\n        /* \"#utility.yul\":4440:4473   */\n      tag_350\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4340:4479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4485:4814   */\n    tag_89:\n        /* \"#utility.yul\":4544:4550   */\n      0x00\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4581:4590   */\n      dup3\n        /* \"#utility.yul\":4572:4579   */\n      dup5\n        /* \"#utility.yul\":4568:4591   */\n      sub\n        /* \"#utility.yul\":4564:4596   */\n      slt\n        /* \"#utility.yul\":4561:4680   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":4599:4678   */\n      tag_437\n      tag_337\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4561:4680   */\n    tag_436:\n        /* \"#utility.yul\":4719:4720   */\n      0x00\n        /* \"#utility.yul\":4744:4797   */\n      tag_438\n        /* \"#utility.yul\":4789:4796   */\n      dup5\n        /* \"#utility.yul\":4780:4786   */\n      dup3\n        /* \"#utility.yul\":4769:4778   */\n      dup6\n        /* \"#utility.yul\":4765:4787   */\n      add\n        /* \"#utility.yul\":4744:4797   */\n      tag_351\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4734:4797   */\n      swap2\n      pop\n        /* \"#utility.yul\":4690:4807   */\n      pop\n        /* \"#utility.yul\":4485:4814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4820:5288   */\n    tag_97:\n        /* \"#utility.yul\":4885:4891   */\n      0x00\n        /* \"#utility.yul\":4893:4899   */\n      dup1\n        /* \"#utility.yul\":4942:4944   */\n      0x40\n        /* \"#utility.yul\":4930:4939   */\n      dup4\n        /* \"#utility.yul\":4921:4928   */\n      dup6\n        /* \"#utility.yul\":4917:4940   */\n      sub\n        /* \"#utility.yul\":4913:4945   */\n      slt\n        /* \"#utility.yul\":4910:5029   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4948:5027   */\n      tag_441\n      tag_337\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4910:5029   */\n    tag_440:\n        /* \"#utility.yul\":5068:5069   */\n      0x00\n        /* \"#utility.yul\":5093:5146   */\n      tag_442\n        /* \"#utility.yul\":5138:5145   */\n      dup6\n        /* \"#utility.yul\":5129:5135   */\n      dup3\n        /* \"#utility.yul\":5118:5127   */\n      dup7\n        /* \"#utility.yul\":5114:5136   */\n      add\n        /* \"#utility.yul\":5093:5146   */\n      tag_351\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5083:5146   */\n      swap3\n      pop\n        /* \"#utility.yul\":5039:5156   */\n      pop\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5221:5271   */\n      tag_443\n        /* \"#utility.yul\":5263:5270   */\n      dup6\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5243:5252   */\n      dup7\n        /* \"#utility.yul\":5239:5261   */\n      add\n        /* \"#utility.yul\":5221:5271   */\n      tag_343\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5211:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5166:5281   */\n      pop\n        /* \"#utility.yul\":4820:5288   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5398   */\n    tag_352:\n        /* \"#utility.yul\":5359:5365   */\n      0x00\n        /* \"#utility.yul\":5387:5391   */\n      0x05\n        /* \"#utility.yul\":5377:5391   */\n      swap1\n      pop\n        /* \"#utility.yul\":5294:5398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5404:5547   */\n    tag_353:\n        /* \"#utility.yul\":5501:5512   */\n      0x00\n        /* \"#utility.yul\":5538:5541   */\n      dup2\n        /* \"#utility.yul\":5523:5541   */\n      swap1\n      pop\n        /* \"#utility.yul\":5404:5547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5553:5651   */\n    tag_354:\n        /* \"#utility.yul\":5618:5622   */\n      0x00\n        /* \"#utility.yul\":5641:5644   */\n      dup2\n        /* \"#utility.yul\":5633:5644   */\n      swap1\n      pop\n        /* \"#utility.yul\":5553:5651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5657:5765   */\n    tag_355:\n        /* \"#utility.yul\":5734:5758   */\n      tag_448\n        /* \"#utility.yul\":5752:5757   */\n      dup2\n        /* \"#utility.yul\":5734:5758   */\n      tag_330\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5729:5732   */\n      dup3\n        /* \"#utility.yul\":5722:5759   */\n      mstore\n        /* \"#utility.yul\":5657:5765   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5771:5950   */\n    tag_356:\n        /* \"#utility.yul\":5840:5850   */\n      0x00\n        /* \"#utility.yul\":5861:5907   */\n      tag_450\n        /* \"#utility.yul\":5903:5906   */\n      dup4\n        /* \"#utility.yul\":5895:5901   */\n      dup4\n        /* \"#utility.yul\":5861:5907   */\n      tag_355\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5939:5943   */\n      0x20\n        /* \"#utility.yul\":5934:5937   */\n      dup4\n        /* \"#utility.yul\":5930:5944   */\n      add\n        /* \"#utility.yul\":5916:5944   */\n      swap1\n      pop\n        /* \"#utility.yul\":5771:5950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6067   */\n    tag_357:\n        /* \"#utility.yul\":6024:6028   */\n      0x00\n        /* \"#utility.yul\":6056:6060   */\n      0x20\n        /* \"#utility.yul\":6051:6054   */\n      dup3\n        /* \"#utility.yul\":6047:6061   */\n      add\n        /* \"#utility.yul\":6039:6061   */\n      swap1\n      pop\n        /* \"#utility.yul\":5956:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6799   */\n    tag_358:\n        /* \"#utility.yul\":6241:6293   */\n      tag_453\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6241:6293   */\n      tag_352\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6309:6393   */\n      tag_454\n        /* \"#utility.yul\":6386:6392   */\n      dup2\n        /* \"#utility.yul\":6381:6384   */\n      dup5\n        /* \"#utility.yul\":6309:6393   */\n      tag_353\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6302:6393   */\n      swap3\n      pop\n        /* \"#utility.yul\":6417:6471   */\n      tag_455\n        /* \"#utility.yul\":6465:6470   */\n      dup3\n        /* \"#utility.yul\":6417:6471   */\n      tag_354\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6494:6501   */\n      dup1\n        /* \"#utility.yul\":6525:6526   */\n      0x00\n        /* \"#utility.yul\":6510:6792   */\n    tag_456:\n        /* \"#utility.yul\":6535:6541   */\n      dup4\n        /* \"#utility.yul\":6532:6533   */\n      dup2\n        /* \"#utility.yul\":6529:6542   */\n      lt\n        /* \"#utility.yul\":6510:6792   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6611:6617   */\n      dup2\n        /* \"#utility.yul\":6605:6618   */\n      mload\n        /* \"#utility.yul\":6638:6701   */\n      tag_459\n        /* \"#utility.yul\":6697:6700   */\n      dup8\n        /* \"#utility.yul\":6682:6695   */\n      dup3\n        /* \"#utility.yul\":6638:6701   */\n      tag_356\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6631:6701   */\n      swap7\n      pop\n        /* \"#utility.yul\":6724:6782   */\n      tag_460\n        /* \"#utility.yul\":6775:6781   */\n      dup4\n        /* \"#utility.yul\":6724:6782   */\n      tag_357\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6714:6782   */\n      swap3\n      pop\n        /* \"#utility.yul\":6570:6792   */\n      pop\n        /* \"#utility.yul\":6557:6558   */\n      0x01\n        /* \"#utility.yul\":6554:6555   */\n      dup2\n        /* \"#utility.yul\":6550:6559   */\n      add\n        /* \"#utility.yul\":6545:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6510:6792   */\n      jump(tag_456)\n    tag_458:\n        /* \"#utility.yul\":6514:6528   */\n      pop\n        /* \"#utility.yul\":6217:6799   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6105:6799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6805:7120   */\n    tag_102:\n        /* \"#utility.yul\":6944:6948   */\n      0x00\n        /* \"#utility.yul\":6982:6985   */\n      0xa0\n        /* \"#utility.yul\":6971:6980   */\n      dup3\n        /* \"#utility.yul\":6967:6986   */\n      add\n        /* \"#utility.yul\":6959:6986   */\n      swap1\n      pop\n        /* \"#utility.yul\":6996:7113   */\n      tag_462\n        /* \"#utility.yul\":7110:7111   */\n      0x00\n        /* \"#utility.yul\":7099:7108   */\n      dup4\n        /* \"#utility.yul\":7095:7112   */\n      add\n        /* \"#utility.yul\":7086:7092   */\n      dup5\n        /* \"#utility.yul\":6996:7113   */\n      tag_358\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6805:7120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7126:7455   */\n    tag_105:\n        /* \"#utility.yul\":7185:7191   */\n      0x00\n        /* \"#utility.yul\":7234:7236   */\n      0x20\n        /* \"#utility.yul\":7222:7231   */\n      dup3\n        /* \"#utility.yul\":7213:7220   */\n      dup5\n        /* \"#utility.yul\":7209:7232   */\n      sub\n        /* \"#utility.yul\":7205:7237   */\n      slt\n        /* \"#utility.yul\":7202:7321   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":7240:7319   */\n      tag_465\n      tag_337\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7202:7321   */\n    tag_464:\n        /* \"#utility.yul\":7360:7361   */\n      0x00\n        /* \"#utility.yul\":7385:7438   */\n      tag_466\n        /* \"#utility.yul\":7430:7437   */\n      dup5\n        /* \"#utility.yul\":7421:7427   */\n      dup3\n        /* \"#utility.yul\":7410:7419   */\n      dup6\n        /* \"#utility.yul\":7406:7428   */\n      add\n        /* \"#utility.yul\":7385:7438   */\n      tag_340\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7375:7438   */\n      swap2\n      pop\n        /* \"#utility.yul\":7331:7448   */\n      pop\n        /* \"#utility.yul\":7126:7455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7461:7581   */\n    tag_359:\n        /* \"#utility.yul\":7533:7556   */\n      tag_468\n        /* \"#utility.yul\":7550:7555   */\n      dup2\n        /* \"#utility.yul\":7533:7556   */\n      tag_344\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7526:7531   */\n      dup2\n        /* \"#utility.yul\":7523:7557   */\n      eq\n        /* \"#utility.yul\":7513:7575   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":7571:7572   */\n      0x00\n        /* \"#utility.yul\":7568:7569   */\n      dup1\n        /* \"#utility.yul\":7561:7573   */\n      revert\n        /* \"#utility.yul\":7513:7575   */\n    tag_469:\n        /* \"#utility.yul\":7461:7581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7587:7724   */\n    tag_360:\n        /* \"#utility.yul\":7632:7637   */\n      0x00\n        /* \"#utility.yul\":7670:7676   */\n      dup2\n        /* \"#utility.yul\":7657:7677   */\n      calldataload\n        /* \"#utility.yul\":7648:7677   */\n      swap1\n      pop\n        /* \"#utility.yul\":7686:7718   */\n      tag_471\n        /* \"#utility.yul\":7712:7717   */\n      dup2\n        /* \"#utility.yul\":7686:7718   */\n      tag_359\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7587:7724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7730:8057   */\n    tag_110:\n        /* \"#utility.yul\":7788:7794   */\n      0x00\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"#utility.yul\":7825:7834   */\n      dup3\n        /* \"#utility.yul\":7816:7823   */\n      dup5\n        /* \"#utility.yul\":7812:7835   */\n      sub\n        /* \"#utility.yul\":7808:7840   */\n      slt\n        /* \"#utility.yul\":7805:7924   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":7843:7922   */\n      tag_474\n      tag_337\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7805:7924   */\n    tag_473:\n        /* \"#utility.yul\":7963:7964   */\n      0x00\n        /* \"#utility.yul\":7988:8040   */\n      tag_475\n        /* \"#utility.yul\":8032:8039   */\n      dup5\n        /* \"#utility.yul\":8023:8029   */\n      dup3\n        /* \"#utility.yul\":8012:8021   */\n      dup6\n        /* \"#utility.yul\":8008:8030   */\n      add\n        /* \"#utility.yul\":7988:8040   */\n      tag_360\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7978:8040   */\n      swap2\n      pop\n        /* \"#utility.yul\":7934:8050   */\n      pop\n        /* \"#utility.yul\":7730:8057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8063:8232   */\n    tag_361:\n        /* \"#utility.yul\":8147:8158   */\n      0x00\n        /* \"#utility.yul\":8181:8187   */\n      dup3\n        /* \"#utility.yul\":8176:8179   */\n      dup3\n        /* \"#utility.yul\":8169:8188   */\n      mstore\n        /* \"#utility.yul\":8221:8225   */\n      0x20\n        /* \"#utility.yul\":8216:8219   */\n      dup3\n        /* \"#utility.yul\":8212:8226   */\n      add\n        /* \"#utility.yul\":8197:8226   */\n      swap1\n      pop\n        /* \"#utility.yul\":8063:8232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8238:8464   */\n    tag_362:\n        /* \"#utility.yul\":8378:8412   */\n      0x54686520737461747573206f6620746865204344532073686f756c6420626520\n        /* \"#utility.yul\":8374:8375   */\n      0x00\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8362:8376   */\n      add\n        /* \"#utility.yul\":8355:8413   */\n      mstore\n        /* \"#utility.yul\":8447:8456   */\n      0x70656e64696e6700000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8442:8444   */\n      0x20\n        /* \"#utility.yul\":8434:8440   */\n      dup3\n        /* \"#utility.yul\":8430:8445   */\n      add\n        /* \"#utility.yul\":8423:8457   */\n      mstore\n        /* \"#utility.yul\":8238:8464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8470:8836   */\n    tag_363:\n        /* \"#utility.yul\":8612:8615   */\n      0x00\n        /* \"#utility.yul\":8633:8700   */\n      tag_479\n        /* \"#utility.yul\":8697:8699   */\n      0x27\n        /* \"#utility.yul\":8692:8695   */\n      dup4\n        /* \"#utility.yul\":8633:8700   */\n      tag_361\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8626:8700   */\n      swap2\n      pop\n        /* \"#utility.yul\":8709:8802   */\n      tag_480\n        /* \"#utility.yul\":8798:8801   */\n      dup3\n        /* \"#utility.yul\":8709:8802   */\n      tag_362\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8827:8829   */\n      0x40\n        /* \"#utility.yul\":8822:8825   */\n      dup3\n        /* \"#utility.yul\":8818:8830   */\n      add\n        /* \"#utility.yul\":8811:8830   */\n      swap1\n      pop\n        /* \"#utility.yul\":8470:8836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8842:9261   */\n    tag_151:\n        /* \"#utility.yul\":9008:9012   */\n      0x00\n        /* \"#utility.yul\":9046:9048   */\n      0x20\n        /* \"#utility.yul\":9035:9044   */\n      dup3\n        /* \"#utility.yul\":9031:9049   */\n      add\n        /* \"#utility.yul\":9023:9049   */\n      swap1\n      pop\n        /* \"#utility.yul\":9095:9104   */\n      dup2\n        /* \"#utility.yul\":9089:9093   */\n      dup2\n        /* \"#utility.yul\":9085:9105   */\n      sub\n        /* \"#utility.yul\":9081:9082   */\n      0x00\n        /* \"#utility.yul\":9070:9079   */\n      dup4\n        /* \"#utility.yul\":9066:9083   */\n      add\n        /* \"#utility.yul\":9059:9106   */\n      mstore\n        /* \"#utility.yul\":9123:9254   */\n      tag_482\n        /* \"#utility.yul\":9249:9253   */\n      dup2\n        /* \"#utility.yul\":9123:9254   */\n      tag_363\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9115:9254   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:9261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9267:9447   */\n    tag_364:\n        /* \"#utility.yul\":9315:9392   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9312:9313   */\n      0x00\n        /* \"#utility.yul\":9305:9393   */\n      mstore\n        /* \"#utility.yul\":9412:9416   */\n      0x11\n        /* \"#utility.yul\":9409:9410   */\n      0x04\n        /* \"#utility.yul\":9402:9417   */\n      mstore\n        /* \"#utility.yul\":9436:9440   */\n      0x24\n        /* \"#utility.yul\":9433:9434   */\n      0x00\n        /* \"#utility.yul\":9426:9441   */\n      revert\n        /* \"#utility.yul\":9453:9758   */\n    tag_158:\n        /* \"#utility.yul\":9493:9496   */\n      0x00\n        /* \"#utility.yul\":9512:9532   */\n      tag_485\n        /* \"#utility.yul\":9530:9531   */\n      dup3\n        /* \"#utility.yul\":9512:9532   */\n      tag_330\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9507:9532   */\n      swap2\n      pop\n        /* \"#utility.yul\":9546:9566   */\n      tag_486\n        /* \"#utility.yul\":9564:9565   */\n      dup4\n        /* \"#utility.yul\":9546:9566   */\n      tag_330\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9541:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9700:9701   */\n      dup3\n        /* \"#utility.yul\":9632:9698   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9628:9702   */\n      sub\n        /* \"#utility.yul\":9625:9626   */\n      dup3\n        /* \"#utility.yul\":9622:9703   */\n      gt\n        /* \"#utility.yul\":9619:9726   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":9706:9724   */\n      tag_488\n      tag_364\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9619:9726   */\n    tag_487:\n        /* \"#utility.yul\":9750:9751   */\n      dup3\n        /* \"#utility.yul\":9747:9748   */\n      dup3\n        /* \"#utility.yul\":9743:9752   */\n      add\n        /* \"#utility.yul\":9736:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9453:9758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9764:9952   */\n    tag_160:\n        /* \"#utility.yul\":9803:9807   */\n      0x00\n        /* \"#utility.yul\":9823:9842   */\n      tag_490\n        /* \"#utility.yul\":9840:9841   */\n      dup3\n        /* \"#utility.yul\":9823:9842   */\n      tag_344\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9818:9842   */\n      swap2\n      pop\n        /* \"#utility.yul\":9856:9875   */\n      tag_491\n        /* \"#utility.yul\":9873:9874   */\n      dup4\n        /* \"#utility.yul\":9856:9875   */\n      tag_344\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9851:9875   */\n      swap3\n      pop\n        /* \"#utility.yul\":9894:9895   */\n      dup3\n        /* \"#utility.yul\":9891:9892   */\n      dup3\n        /* \"#utility.yul\":9888:9896   */\n      lt\n        /* \"#utility.yul\":9885:9919   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9899:9917   */\n      tag_493\n      tag_364\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9885:9919   */\n    tag_492:\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9941:9942   */\n      dup3\n        /* \"#utility.yul\":9937:9946   */\n      sub\n        /* \"#utility.yul\":9929:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9764:9952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9958:10183   */\n    tag_365:\n        /* \"#utility.yul\":10098:10132   */\n      0x54686520737461747573206f6620746865204344532073686f756c6420626520\n        /* \"#utility.yul\":10094:10095   */\n      0x00\n        /* \"#utility.yul\":10086:10092   */\n      dup3\n        /* \"#utility.yul\":10082:10096   */\n      add\n        /* \"#utility.yul\":10075:10133   */\n      mstore\n        /* \"#utility.yul\":10167:10175   */\n      0x6163746976650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10162:10164   */\n      0x20\n        /* \"#utility.yul\":10154:10160   */\n      dup3\n        /* \"#utility.yul\":10150:10165   */\n      add\n        /* \"#utility.yul\":10143:10176   */\n      mstore\n        /* \"#utility.yul\":9958:10183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10189:10555   */\n    tag_366:\n        /* \"#utility.yul\":10331:10334   */\n      0x00\n        /* \"#utility.yul\":10352:10419   */\n      tag_496\n        /* \"#utility.yul\":10416:10418   */\n      0x26\n        /* \"#utility.yul\":10411:10414   */\n      dup4\n        /* \"#utility.yul\":10352:10419   */\n      tag_361\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10345:10419   */\n      swap2\n      pop\n        /* \"#utility.yul\":10428:10521   */\n      tag_497\n        /* \"#utility.yul\":10517:10520   */\n      dup3\n        /* \"#utility.yul\":10428:10521   */\n      tag_365\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10546:10548   */\n      0x40\n        /* \"#utility.yul\":10541:10544   */\n      dup3\n        /* \"#utility.yul\":10537:10549   */\n      add\n        /* \"#utility.yul\":10530:10549   */\n      swap1\n      pop\n        /* \"#utility.yul\":10189:10555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10561:10980   */\n    tag_170:\n        /* \"#utility.yul\":10727:10731   */\n      0x00\n        /* \"#utility.yul\":10765:10767   */\n      0x20\n        /* \"#utility.yul\":10754:10763   */\n      dup3\n        /* \"#utility.yul\":10750:10768   */\n      add\n        /* \"#utility.yul\":10742:10768   */\n      swap1\n      pop\n        /* \"#utility.yul\":10814:10823   */\n      dup2\n        /* \"#utility.yul\":10808:10812   */\n      dup2\n        /* \"#utility.yul\":10804:10824   */\n      sub\n        /* \"#utility.yul\":10800:10801   */\n      0x00\n        /* \"#utility.yul\":10789:10798   */\n      dup4\n        /* \"#utility.yul\":10785:10802   */\n      add\n        /* \"#utility.yul\":10778:10825   */\n      mstore\n        /* \"#utility.yul\":10842:10973   */\n      tag_499\n        /* \"#utility.yul\":10968:10972   */\n      dup2\n        /* \"#utility.yul\":10842:10973   */\n      tag_366\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10834:10973   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10986:11224   */\n    tag_367:\n        /* \"#utility.yul\":11126:11160   */\n      0x43757272656e7420707269636520697320686967686572207468616e20746865\n        /* \"#utility.yul\":11122:11123   */\n      0x00\n        /* \"#utility.yul\":11114:11120   */\n      dup3\n        /* \"#utility.yul\":11110:11124   */\n      add\n        /* \"#utility.yul\":11103:11161   */\n      mstore\n        /* \"#utility.yul\":11195:11216   */\n      0x20636c61696d20707269636520696e2043445300000000000000000000000000\n        /* \"#utility.yul\":11190:11192   */\n      0x20\n        /* \"#utility.yul\":11182:11188   */\n      dup3\n        /* \"#utility.yul\":11178:11193   */\n      add\n        /* \"#utility.yul\":11171:11217   */\n      mstore\n        /* \"#utility.yul\":10986:11224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11230:11596   */\n    tag_368:\n        /* \"#utility.yul\":11372:11375   */\n      0x00\n        /* \"#utility.yul\":11393:11460   */\n      tag_502\n        /* \"#utility.yul\":11457:11459   */\n      0x33\n        /* \"#utility.yul\":11452:11455   */\n      dup4\n        /* \"#utility.yul\":11393:11460   */\n      tag_361\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11386:11460   */\n      swap2\n      pop\n        /* \"#utility.yul\":11469:11562   */\n      tag_503\n        /* \"#utility.yul\":11558:11561   */\n      dup3\n        /* \"#utility.yul\":11469:11562   */\n      tag_367\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11587:11589   */\n      0x40\n        /* \"#utility.yul\":11582:11585   */\n      dup3\n        /* \"#utility.yul\":11578:11590   */\n      add\n        /* \"#utility.yul\":11571:11590   */\n      swap1\n      pop\n        /* \"#utility.yul\":11230:11596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11602:12021   */\n    tag_186:\n        /* \"#utility.yul\":11768:11772   */\n      0x00\n        /* \"#utility.yul\":11806:11808   */\n      0x20\n        /* \"#utility.yul\":11795:11804   */\n      dup3\n        /* \"#utility.yul\":11791:11809   */\n      add\n        /* \"#utility.yul\":11783:11809   */\n      swap1\n      pop\n        /* \"#utility.yul\":11855:11864   */\n      dup2\n        /* \"#utility.yul\":11849:11853   */\n      dup2\n        /* \"#utility.yul\":11845:11865   */\n      sub\n        /* \"#utility.yul\":11841:11842   */\n      0x00\n        /* \"#utility.yul\":11830:11839   */\n      dup4\n        /* \"#utility.yul\":11826:11843   */\n      add\n        /* \"#utility.yul\":11819:11866   */\n      mstore\n        /* \"#utility.yul\":11883:12014   */\n      tag_505\n        /* \"#utility.yul\":12009:12013   */\n      dup2\n        /* \"#utility.yul\":11883:12014   */\n      tag_368\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11875:12014   */\n      swap1\n      pop\n        /* \"#utility.yul\":11602:12021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12027:12196   */\n    tag_369:\n        /* \"#utility.yul\":12167:12188   */\n      0x526f756e6420616c726561647920656e64656400000000000000000000000000\n        /* \"#utility.yul\":12163:12164   */\n      0x00\n        /* \"#utility.yul\":12155:12161   */\n      dup3\n        /* \"#utility.yul\":12151:12165   */\n      add\n        /* \"#utility.yul\":12144:12189   */\n      mstore\n        /* \"#utility.yul\":12027:12196   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12202:12568   */\n    tag_370:\n        /* \"#utility.yul\":12344:12347   */\n      0x00\n        /* \"#utility.yul\":12365:12432   */\n      tag_508\n        /* \"#utility.yul\":12429:12431   */\n      0x13\n        /* \"#utility.yul\":12424:12427   */\n      dup4\n        /* \"#utility.yul\":12365:12432   */\n      tag_361\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12358:12432   */\n      swap2\n      pop\n        /* \"#utility.yul\":12441:12534   */\n      tag_509\n        /* \"#utility.yul\":12530:12533   */\n      dup3\n        /* \"#utility.yul\":12441:12534   */\n      tag_369\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12559:12561   */\n      0x20\n        /* \"#utility.yul\":12554:12557   */\n      dup3\n        /* \"#utility.yul\":12550:12562   */\n      add\n        /* \"#utility.yul\":12543:12562   */\n      swap1\n      pop\n        /* \"#utility.yul\":12202:12568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12574:12993   */\n    tag_200:\n        /* \"#utility.yul\":12740:12744   */\n      0x00\n        /* \"#utility.yul\":12778:12780   */\n      0x20\n        /* \"#utility.yul\":12767:12776   */\n      dup3\n        /* \"#utility.yul\":12763:12781   */\n      add\n        /* \"#utility.yul\":12755:12781   */\n      swap1\n      pop\n        /* \"#utility.yul\":12827:12836   */\n      dup2\n        /* \"#utility.yul\":12821:12825   */\n      dup2\n        /* \"#utility.yul\":12817:12837   */\n      sub\n        /* \"#utility.yul\":12813:12814   */\n      0x00\n        /* \"#utility.yul\":12802:12811   */\n      dup4\n        /* \"#utility.yul\":12798:12815   */\n      add\n        /* \"#utility.yul\":12791:12838   */\n      mstore\n        /* \"#utility.yul\":12855:12986   */\n      tag_511\n        /* \"#utility.yul\":12981:12985   */\n      dup2\n        /* \"#utility.yul\":12855:12986   */\n      tag_370\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12847:12986   */\n      swap1\n      pop\n        /* \"#utility.yul\":12574:12993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12999:13142   */\n    tag_371:\n        /* \"#utility.yul\":13056:13061   */\n      0x00\n        /* \"#utility.yul\":13087:13093   */\n      dup2\n        /* \"#utility.yul\":13081:13094   */\n      mload\n        /* \"#utility.yul\":13072:13094   */\n      swap1\n      pop\n        /* \"#utility.yul\":13103:13136   */\n      tag_513\n        /* \"#utility.yul\":13130:13135   */\n      dup2\n        /* \"#utility.yul\":13103:13136   */\n      tag_339\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12999:13142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13148:13499   */\n    tag_240:\n        /* \"#utility.yul\":13218:13224   */\n      0x00\n        /* \"#utility.yul\":13267:13269   */\n      0x20\n        /* \"#utility.yul\":13255:13264   */\n      dup3\n        /* \"#utility.yul\":13246:13253   */\n      dup5\n        /* \"#utility.yul\":13242:13265   */\n      sub\n        /* \"#utility.yul\":13238:13270   */\n      slt\n        /* \"#utility.yul\":13235:13354   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":13273:13352   */\n      tag_516\n      tag_337\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13235:13354   */\n    tag_515:\n        /* \"#utility.yul\":13393:13394   */\n      0x00\n        /* \"#utility.yul\":13418:13482   */\n      tag_517\n        /* \"#utility.yul\":13474:13481   */\n      dup5\n        /* \"#utility.yul\":13465:13471   */\n      dup3\n        /* \"#utility.yul\":13454:13463   */\n      dup6\n        /* \"#utility.yul\":13450:13472   */\n      add\n        /* \"#utility.yul\":13418:13482   */\n      tag_371\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13408:13482   */\n      swap2\n      pop\n        /* \"#utility.yul\":13364:13492   */\n      pop\n        /* \"#utility.yul\":13148:13499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13505:13730   */\n    tag_372:\n        /* \"#utility.yul\":13645:13679   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13641:13642   */\n      0x00\n        /* \"#utility.yul\":13633:13639   */\n      dup3\n        /* \"#utility.yul\":13629:13643   */\n      add\n        /* \"#utility.yul\":13622:13680   */\n      mstore\n        /* \"#utility.yul\":13714:13722   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13709:13711   */\n      0x20\n        /* \"#utility.yul\":13701:13707   */\n      dup3\n        /* \"#utility.yul\":13697:13712   */\n      add\n        /* \"#utility.yul\":13690:13723   */\n      mstore\n        /* \"#utility.yul\":13505:13730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13736:14102   */\n    tag_373:\n        /* \"#utility.yul\":13878:13881   */\n      0x00\n        /* \"#utility.yul\":13899:13966   */\n      tag_520\n        /* \"#utility.yul\":13963:13965   */\n      0x26\n        /* \"#utility.yul\":13958:13961   */\n      dup4\n        /* \"#utility.yul\":13899:13966   */\n      tag_361\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13892:13966   */\n      swap2\n      pop\n        /* \"#utility.yul\":13975:14068   */\n      tag_521\n        /* \"#utility.yul\":14064:14067   */\n      dup3\n        /* \"#utility.yul\":13975:14068   */\n      tag_372\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14093:14095   */\n      0x40\n        /* \"#utility.yul\":14088:14091   */\n      dup3\n        /* \"#utility.yul\":14084:14096   */\n      add\n        /* \"#utility.yul\":14077:14096   */\n      swap1\n      pop\n        /* \"#utility.yul\":13736:14102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14108:14527   */\n    tag_279:\n        /* \"#utility.yul\":14274:14278   */\n      0x00\n        /* \"#utility.yul\":14312:14314   */\n      0x20\n        /* \"#utility.yul\":14301:14310   */\n      dup3\n        /* \"#utility.yul\":14297:14315   */\n      add\n        /* \"#utility.yul\":14289:14315   */\n      swap1\n      pop\n        /* \"#utility.yul\":14361:14370   */\n      dup2\n        /* \"#utility.yul\":14355:14359   */\n      dup2\n        /* \"#utility.yul\":14351:14371   */\n      sub\n        /* \"#utility.yul\":14347:14348   */\n      0x00\n        /* \"#utility.yul\":14336:14345   */\n      dup4\n        /* \"#utility.yul\":14332:14349   */\n      add\n        /* \"#utility.yul\":14325:14372   */\n      mstore\n        /* \"#utility.yul\":14389:14520   */\n      tag_523\n        /* \"#utility.yul\":14515:14519   */\n      dup2\n        /* \"#utility.yul\":14389:14520   */\n      tag_373\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14381:14520   */\n      swap1\n      pop\n        /* \"#utility.yul\":14108:14527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14533:14715   */\n    tag_374:\n        /* \"#utility.yul\":14673:14707   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14669:14670   */\n      0x00\n        /* \"#utility.yul\":14661:14667   */\n      dup3\n        /* \"#utility.yul\":14657:14671   */\n      add\n        /* \"#utility.yul\":14650:14708   */\n      mstore\n        /* \"#utility.yul\":14533:14715   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14721:15087   */\n    tag_375:\n        /* \"#utility.yul\":14863:14866   */\n      0x00\n        /* \"#utility.yul\":14884:14951   */\n      tag_526\n        /* \"#utility.yul\":14948:14950   */\n      0x20\n        /* \"#utility.yul\":14943:14946   */\n      dup4\n        /* \"#utility.yul\":14884:14951   */\n      tag_361\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14877:14951   */\n      swap2\n      pop\n        /* \"#utility.yul\":14960:15053   */\n      tag_527\n        /* \"#utility.yul\":15049:15052   */\n      dup3\n        /* \"#utility.yul\":14960:15053   */\n      tag_374\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15078:15080   */\n      0x20\n        /* \"#utility.yul\":15073:15076   */\n      dup3\n        /* \"#utility.yul\":15069:15081   */\n      add\n        /* \"#utility.yul\":15062:15081   */\n      swap1\n      pop\n        /* \"#utility.yul\":14721:15087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15093:15512   */\n    tag_298:\n        /* \"#utility.yul\":15259:15263   */\n      0x00\n        /* \"#utility.yul\":15297:15299   */\n      0x20\n        /* \"#utility.yul\":15286:15295   */\n      dup3\n        /* \"#utility.yul\":15282:15300   */\n      add\n        /* \"#utility.yul\":15274:15300   */\n      swap1\n      pop\n        /* \"#utility.yul\":15346:15355   */\n      dup2\n        /* \"#utility.yul\":15340:15344   */\n      dup2\n        /* \"#utility.yul\":15336:15356   */\n      sub\n        /* \"#utility.yul\":15332:15333   */\n      0x00\n        /* \"#utility.yul\":15321:15330   */\n      dup4\n        /* \"#utility.yul\":15317:15334   */\n      add\n        /* \"#utility.yul\":15310:15357   */\n      mstore\n        /* \"#utility.yul\":15374:15505   */\n      tag_529\n        /* \"#utility.yul\":15500:15504   */\n      dup2\n        /* \"#utility.yul\":15374:15505   */\n      tag_375\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15366:15505   */\n      swap1\n      pop\n        /* \"#utility.yul\":15093:15512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15518:15698   */\n    tag_376:\n        /* \"#utility.yul\":15566:15643   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15563:15564   */\n      0x00\n        /* \"#utility.yul\":15556:15644   */\n      mstore\n        /* \"#utility.yul\":15663:15667   */\n      0x12\n        /* \"#utility.yul\":15660:15661   */\n      0x04\n        /* \"#utility.yul\":15653:15668   */\n      mstore\n        /* \"#utility.yul\":15687:15691   */\n      0x24\n        /* \"#utility.yul\":15684:15685   */\n      0x00\n        /* \"#utility.yul\":15677:15692   */\n      revert\n        /* \"#utility.yul\":15704:15889   */\n    tag_310:\n        /* \"#utility.yul\":15744:15745   */\n      0x00\n        /* \"#utility.yul\":15761:15781   */\n      tag_532\n        /* \"#utility.yul\":15779:15780   */\n      dup3\n        /* \"#utility.yul\":15761:15781   */\n      tag_330\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15756:15781   */\n      swap2\n      pop\n        /* \"#utility.yul\":15795:15815   */\n      tag_533\n        /* \"#utility.yul\":15813:15814   */\n      dup4\n        /* \"#utility.yul\":15795:15815   */\n      tag_330\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15790:15815   */\n      swap3\n      pop\n        /* \"#utility.yul\":15834:15835   */\n      dup3\n        /* \"#utility.yul\":15824:15859   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":15839:15857   */\n      tag_535\n      tag_376\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15824:15859   */\n    tag_534:\n        /* \"#utility.yul\":15881:15882   */\n      dup3\n        /* \"#utility.yul\":15878:15879   */\n      dup3\n        /* \"#utility.yul\":15874:15883   */\n      div\n        /* \"#utility.yul\":15869:15883   */\n      swap1\n      pop\n        /* \"#utility.yul\":15704:15889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15895:16086   */\n    tag_326:\n        /* \"#utility.yul\":15935:15939   */\n      0x00\n        /* \"#utility.yul\":15955:15975   */\n      tag_537\n        /* \"#utility.yul\":15973:15974   */\n      dup3\n        /* \"#utility.yul\":15955:15975   */\n      tag_330\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15950:15975   */\n      swap2\n      pop\n        /* \"#utility.yul\":15989:16009   */\n      tag_538\n        /* \"#utility.yul\":16007:16008   */\n      dup4\n        /* \"#utility.yul\":15989:16009   */\n      tag_330\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15984:16009   */\n      swap3\n      pop\n        /* \"#utility.yul\":16028:16029   */\n      dup3\n        /* \"#utility.yul\":16025:16026   */\n      dup3\n        /* \"#utility.yul\":16022:16030   */\n      lt\n        /* \"#utility.yul\":16019:16053   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":16033:16051   */\n      tag_540\n      tag_364\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16019:16053   */\n    tag_539:\n        /* \"#utility.yul\":16078:16079   */\n      dup3\n        /* \"#utility.yul\":16075:16076   */\n      dup3\n        /* \"#utility.yul\":16071:16080   */\n      sub\n        /* \"#utility.yul\":16063:16080   */\n      swap1\n      pop\n        /* \"#utility.yul\":15895:16086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16092:16440   */\n    tag_329:\n        /* \"#utility.yul\":16132:16139   */\n      0x00\n        /* \"#utility.yul\":16155:16175   */\n      tag_542\n        /* \"#utility.yul\":16173:16174   */\n      dup3\n        /* \"#utility.yul\":16155:16175   */\n      tag_330\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":16150:16175   */\n      swap2\n      pop\n        /* \"#utility.yul\":16189:16209   */\n      tag_543\n        /* \"#utility.yul\":16207:16208   */\n      dup4\n        /* \"#utility.yul\":16189:16209   */\n      tag_330\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16184:16209   */\n      swap3\n      pop\n        /* \"#utility.yul\":16377:16378   */\n      dup2\n        /* \"#utility.yul\":16309:16375   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16305:16379   */\n      div\n        /* \"#utility.yul\":16302:16303   */\n      dup4\n        /* \"#utility.yul\":16299:16380   */\n      gt\n        /* \"#utility.yul\":16294:16295   */\n      dup3\n        /* \"#utility.yul\":16287:16296   */\n      iszero\n        /* \"#utility.yul\":16280:16297   */\n      iszero\n        /* \"#utility.yul\":16276:16381   */\n      and\n        /* \"#utility.yul\":16273:16404   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":16384:16402   */\n      tag_545\n      tag_364\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16273:16404   */\n    tag_544:\n        /* \"#utility.yul\":16432:16433   */\n      dup3\n        /* \"#utility.yul\":16429:16430   */\n      dup3\n        /* \"#utility.yul\":16425:16434   */\n      mul\n        /* \"#utility.yul\":16414:16434   */\n      swap1\n      pop\n        /* \"#utility.yul\":16092:16440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ca7d2132eb91ebc6b0122add36941a571e685cb3772e5cefe11162925cdf0a964736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_948": {
									"entryPoint": null,
									"id": 948,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 611,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 619,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3690:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "748:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "748:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "730:7:7",
														"type": ""
													}
												],
												"src": "694:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "891:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "903:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "893:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "893:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "858:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "882:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "865:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "855:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:42:7"
															},
															"nodeType": "YulIf",
															"src": "845:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:7",
														"type": ""
													}
												],
												"src": "793:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "991:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1006:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1000:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "991:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1022:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1022:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "959:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "967:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:7",
														"type": ""
													}
												],
												"src": "919:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:1110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1290:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1292:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1292:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1264:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1285:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:33:7"
															},
															"nodeType": "YulIf",
															"src": "1253:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1383:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1398:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1402:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1427:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1473:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1484:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1469:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1469:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1493:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1437:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1427:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1521:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1536:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1540:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1566:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1612:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1623:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1608:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1608:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1576:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1566:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1660:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1675:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1679:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1705:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1751:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1762:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1747:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1771:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1715:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1715:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1799:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1814:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1818:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1844:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1854:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1844:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1938:130:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1953:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1957:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1984:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1994:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2078:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2124:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2169:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2165:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2165:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2189:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2134:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2124:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2217:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2232:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2236:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2263:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2308:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2319:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2304:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2273:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "2263:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1165:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1176:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1196:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1204:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1212:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1220:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1236:6:7",
														"type": ""
													}
												],
												"src": "1066:1287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:7",
														"type": ""
													}
												],
												"src": "2359:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:14:7"
																	},
																	{
																		"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2674:22:7",
																		"type": "",
																		"value": "BTC:0, ETH:1, LINK:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2632:6:7",
														"type": ""
													}
												],
												"src": "2534:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2932:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2873:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																	"nodeType": "YulIdentifier",
																	"src": "2949:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2844:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2852:3:7",
														"type": ""
													}
												],
												"src": "2710:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3263:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3263:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3489:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3355:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3233:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3248:4:7",
														"type": ""
													}
												],
												"src": "3082:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3507:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTC:0, ETH:1, LINK:2\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2174 CODESIZE SUB DUP1 PUSH3 0x2174 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3B0 JUMP JUMPDEST PUSH20 0x21558C2CDA098E7E0AC7D38775B3E2B4A0945222 PUSH3 0x6C PUSH3 0x60 PUSH3 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x26B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH3 0x12F JUMPI POP PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x141 JUMPI POP PUSH1 0x2 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17A SWAP1 PUSH3 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x4E6 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x349 DUP2 PUSH3 0x334 JUMP JUMPDEST DUP2 EQ PUSH3 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x369 DUP2 PUSH3 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x38A DUP2 PUSH3 0x36F JUMP JUMPDEST DUP2 EQ PUSH3 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3AA DUP2 PUSH3 0x37F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3D2 JUMPI PUSH3 0x3D1 PUSH3 0x32F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3E2 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x3F5 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x408 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x41B DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x42E DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x441 DUP11 DUP3 DUP12 ADD PUSH3 0x399 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x454 DUP11 DUP3 DUP12 ADD PUSH3 0x399 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254433A302C204554483A312C204C494E4B3A32000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AC PUSH1 0x14 DUP4 PUSH3 0x463 JUMP JUMPDEST SWAP2 POP PUSH3 0x4B9 DUP3 PUSH3 0x474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4DF DUP2 PUSH3 0x49D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C4F DUP1 PUSH3 0x525 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F09AD6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDBD0E1B6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF26CC58E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xFCB341DF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xFFD0E69F EQ PUSH2 0x523 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x4C1 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xBD9A548B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xD8683798 EQ PUSH2 0x437 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x5B6A251B GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x86BE75B7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x331 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x5B6A251B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x839966AF EQ PUSH2 0x2B9 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3FE3347A GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x27D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3B41E19C EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x667 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x7CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x917 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xDEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 DUP3 PUSH2 0xAEC JUMP JUMPDEST POP PUSH2 0x5ED CALLER DUP3 ISZERO PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x5F7 PUSH1 0x2 PUSH2 0x108B JUMP JUMPDEST POP PUSH3 0x24EA00 TIMESTAMP PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x66F PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH2 0x682 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EF PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x735 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x780 PUSH2 0xE76 JUMP JUMPDEST EQ ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB PUSH1 0x3 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EA PUSH1 0x1 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x91F PUSH2 0x100D JUMP JUMPDEST PUSH2 0x929 PUSH1 0x0 PUSH2 0x111B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x963 JUMPI PUSH2 0x962 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA8C PUSH2 0x100D JUMP JUMPDEST DUP1 PUSH2 0xA9F JUMPI PUSH2 0xA9A DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xAA8 DUP3 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB6 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBBF JUMPI PUSH2 0xBB8 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC75 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD32 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD80 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE07 JUMPI PUSH2 0xE06 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE73 PUSH1 0x0 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE94 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xAFF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xECB JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0x11F5 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3D SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0x111B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6F PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1265 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF8A JUMPI PUSH2 0xF89 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFAC JUMPI PUSH2 0xFAB PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE3 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1015 PUSH2 0x1295 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1033 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1095 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x131F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0x1207 JUMPI DUP6 SWAP1 POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122E PUSH2 0x121F DUP8 DUP8 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1255 PUSH2 0x1246 DUP6 DUP8 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x12B3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C PUSH2 0x127D DUP5 DUP7 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1319 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x135F JUMPI PUSH2 0x135E PUSH2 0x131F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1370 DUP3 PUSH2 0x134E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 DUP3 PUSH2 0x1362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1390 DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F7 DUP2 PUSH2 0x13E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1414 DUP2 PUSH2 0x13EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH2 0x1430 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1450 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x145A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BF DUP3 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CF DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x13E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1523 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1540 DUP2 PUSH2 0x151A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156A DUP5 DUP3 DUP6 ADD PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP6 DUP3 DUP7 ADD PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE DUP4 DUP4 PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x161A DUP2 DUP5 PUSH2 0x15BE JUMP JUMPDEST SWAP3 POP PUSH2 0x1625 DUP3 PUSH2 0x15C9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1656 JUMPI DUP2 MLOAD PUSH2 0x163D DUP8 DUP3 PUSH2 0x15E2 JUMP JUMPDEST SWAP7 POP PUSH2 0x1648 DUP4 PUSH2 0x15FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1673 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168F JUMPI PUSH2 0x168E PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP5 DUP3 DUP6 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP2 PUSH2 0x145A JUMP JUMPDEST DUP2 EQ PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CC DUP2 PUSH2 0x16A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F6 DUP5 DUP3 DUP6 ADD PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x70656E64696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x27 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179B DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x17E7 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 DUP3 PUSH2 0x145A JUMP JUMPDEST SWAP2 POP PUSH2 0x183D DUP4 PUSH2 0x145A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 PUSH1 0x26 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x18C2 DUP3 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18E6 DUP2 PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420707269636520697320686967686572207468616E20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636C61696D20707269636520696E2043445300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH1 0x33 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420616C726561647920656E64656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 PUSH1 0x13 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x19C0 DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FA DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH2 0x1A15 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x26 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A94 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH2 0x1A7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 PUSH1 0x20 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1B00 DUP3 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B24 DUP2 PUSH2 0x1AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x1B2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA1 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BB4 JUMPI PUSH2 0x1BB3 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCA DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD5 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xA7 0xD2 SGT 0x2E 0xB9 0x1E 0xBC PUSH12 0x122ADD36941A571E685CB37 PUSH19 0xE5CEFE11162925CDF0A964736F6C634300080A STOP CALLER ",
							"sourceMap": "208:4313:3:-:0;;;791:636;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;247:42;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;321:8:4;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;1008:15:3;991:14;:32;;;;1042:11;1029:10;:24;;;;1078:17;1059:16;:36;;;;1111:8;1101:7;:18;;;;1141:14;1125:13;:30;;;;1170:7;1161:6;;:16;;;;;;;;;;;;;;;;;;1197:7;1183:11;;:21;;;;;;;;;;;;;;;;;;1240:1;1226:10;:15;;;:34;;;;1259:1;1245:10;:15;;;1226:34;:53;;;;1278:1;1264:10;:15;;;1226:53;1211:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1333:10;1321:9;;:22;;;;;;;;;;;;;;;;;;1366:1;1350:5;;:18;;;;;;;;;;;;;;;;;;1391:1;1374:6;;:19;;;;;;;;;;;;;;;;;;1408:14;1399:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;791:636;;;;;;;208:4313;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:93::-;730:7;770:10;763:5;759:22;748:33;;694:93;;;:::o;793:120::-;865:23;882:5;865:23;:::i;:::-;858:5;855:34;845:62;;903:1;900;893:12;845:62;793:120;:::o;919:141::-;975:5;1006:6;1000:13;991:22;;1022:32;1048:5;1022:32;:::i;:::-;919:141;;;;:::o;1066:1287::-;1188:6;1196;1204;1212;1220;1228;1236;1285:3;1273:9;1264:7;1260:23;1256:33;1253:120;;;1292:79;;:::i;:::-;1253:120;1412:1;1437:64;1493:7;1484:6;1473:9;1469:22;1437:64;:::i;:::-;1427:74;;1383:128;1550:2;1576:64;1632:7;1623:6;1612:9;1608:22;1576:64;:::i;:::-;1566:74;;1521:129;1689:2;1715:64;1771:7;1762:6;1751:9;1747:22;1715:64;:::i;:::-;1705:74;;1660:129;1828:2;1854:64;1910:7;1901:6;1890:9;1886:22;1854:64;:::i;:::-;1844:74;;1799:129;1967:3;1994:64;2050:7;2041:6;2030:9;2026:22;1994:64;:::i;:::-;1984:74;;1938:130;2107:3;2134:63;2189:7;2180:6;2169:9;2165:22;2134:63;:::i;:::-;2124:73;;2078:129;2246:3;2273:63;2328:7;2319:6;2308:9;2304:22;2273:63;:::i;:::-;2263:73;;2217:129;1066:1287;;;;;;;;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:170::-;2674:22;2670:1;2662:6;2658:14;2651:46;2534:170;:::o;2710:366::-;2852:3;2873:67;2937:2;2932:3;2873:67;:::i;:::-;2866:74;;2949:93;3038:3;2949:93;:::i;:::-;3067:2;3062:3;3058:12;3051:19;;2710:366;;;:::o;3082:419::-;3248:4;3286:2;3275:9;3271:18;3263:26;;3335:9;3329:4;3325:20;3321:1;3310:9;3306:17;3299:47;3363:131;3489:4;3363:131;:::i;:::-;3355:139;;3082:419;;;:::o;3507:180::-;3555:77;3552:1;3545:88;3652:4;3649:1;3642:15;3676:4;3673:1;3666:15;208:4313:3;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 4109,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 4757,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4379,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accept_642": {
									"entryPoint": 1370,
									"id": 642,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@assetType_493": {
									"entryPoint": 1617,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_1152": {
									"entryPoint": 4709,
									"id": 1152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcClaimReward_1132": {
									"entryPoint": 4597,
									"id": 1132,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@cancel_656": {
									"entryPoint": 3563,
									"id": 656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkPayDatePassed_719": {
									"entryPoint": 2347,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkRoundsZero_705": {
									"entryPoint": 3956,
									"id": 705,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claimPrice_475": {
									"entryPoint": 1345,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_692": {
									"entryPoint": 1784,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@close_670": {
									"entryPoint": 1639,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_355": {
									"entryPoint": 4575,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAmountOfAsset_859": {
									"entryPoint": 3922,
									"id": 859,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBuyer_867": {
									"entryPoint": 2285,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getClaimReward_901": {
									"entryPoint": 3702,
									"id": 901,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrPrice_1009": {
									"entryPoint": 2815,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPrices_847": {
									"entryPoint": 2734,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSeller_875": {
									"entryPoint": 3398,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initAssetPrice_473": {
									"entryPoint": 2478,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidationPrice_477": {
									"entryPoint": 2686,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_340": {
									"entryPoint": 4787,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nextPayDate_483": {
									"entryPoint": 3392,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 2506,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@premiumPaid_602": {
									"entryPoint": 1998,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@premium_479": {
									"entryPoint": 3440,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2327,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rounds_489": {
									"entryPoint": 2547,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellerDeposit_481": {
									"entryPoint": 1778,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyer_786": {
									"entryPoint": 2569,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setInitAssetPrice_733": {
									"entryPoint": 2796,
									"id": 733,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setParticipants_770": {
									"entryPoint": 2692,
									"id": 770,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRounds_818": {
									"entryPoint": 4310,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setSeller_802": {
									"entryPoint": 3446,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setStatus_751": {
									"entryPoint": 4235,
									"id": 751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@status_471": {
									"entryPoint": 1351,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_325": {
									"entryPoint": 4765,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRounds_491": {
									"entryPoint": 2484,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3790,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$468": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$468_to_t_uint8": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$468": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16443:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:62:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "717:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "704:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "711:1:7",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "701:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:20:7"
															},
															"nodeType": "YulIf",
															"src": "691:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "674:5:7",
														"type": ""
													}
												],
												"src": "628:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "825:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "814:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "868:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "831:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:43:7"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "796:7:7",
														"type": ""
													}
												],
												"src": "749:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:63:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:47:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1005:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "977:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:34:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "964:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$468_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "944:9:7",
														"type": ""
													}
												],
												"src": "886:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1113:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1157:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$468_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1118:38:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:58:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1084:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1091:3:7",
														"type": ""
													}
												],
												"src": "1023:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:132:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1292:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1292:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1328:51:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:79:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1254:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1266:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1277:4:7",
														"type": ""
													}
												],
												"src": "1176:238:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1470:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1480:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1453:6:7",
														"type": ""
													}
												],
												"src": "1420:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1501:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1624:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1859:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1849:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1813:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1838:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1820:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1820:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1810:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1810:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:43:7"
															},
															"nodeType": "YulIf",
															"src": "1800:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1783:5:7",
														"type": ""
													}
												],
												"src": "1747:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1937:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1959:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1946:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1937:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2002:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1975:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1905:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1913:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1921:5:7",
														"type": ""
													}
												],
												"src": "1875:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2062:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2072:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2097:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2090:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2090:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2072:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2044:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2054:7:7",
														"type": ""
													}
												],
												"src": "2020:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2210:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2219:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2222:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2212:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2212:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2179:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2201:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2186:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2186:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2176:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2176:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:40:7"
															},
															"nodeType": "YulIf",
															"src": "2166:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2149:5:7",
														"type": ""
													}
												],
												"src": "2116:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2297:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2319:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2306:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2297:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2359:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2335:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2335:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2265:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2273:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2281:5:7",
														"type": ""
													}
												],
												"src": "2238:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2457:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2503:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2505:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2505:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2487:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2474:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2474:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2470:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:32:7"
															},
															"nodeType": "YulIf",
															"src": "2467:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2596:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2611:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2615:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2640:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2675:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2686:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2671:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2671:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2695:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2650:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2650:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2640:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2723:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2738:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2742:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2768:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2800:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2811:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2820:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2778:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2778:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2768:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2419:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2430:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2442:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2450:6:7",
														"type": ""
													}
												],
												"src": "2377:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2895:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2905:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2920:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2927:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2905:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2877:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2887:7:7",
														"type": ""
													}
												],
												"src": "2851:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3052:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "3035:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3001:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3008:3:7",
														"type": ""
													}
												],
												"src": "2950:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3177:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3255:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3279:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3213:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3213:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3139:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3151:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3162:4:7",
														"type": ""
													}
												],
												"src": "3071:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3350:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3365:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3361:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3350:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3322:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3332:7:7",
														"type": ""
													}
												],
												"src": "3295:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3472:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3482:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3511:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3493:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3482:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3454:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3464:7:7",
														"type": ""
													}
												],
												"src": "3427:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3594:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3611:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3634:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3616:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3604:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3604:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3582:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3589:3:7",
														"type": ""
													}
												],
												"src": "3529:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3751:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3761:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3773:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3761:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3841:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3854:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3865:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3850:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3850:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3797:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3797:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3723:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3735:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3746:4:7",
														"type": ""
													}
												],
												"src": "3653:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3940:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3957:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3977:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3962:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3962:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3950:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3928:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3935:3:7",
														"type": ""
													}
												],
												"src": "3881:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4088:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4098:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4098:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4172:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4185:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4196:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4181:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4181:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4134:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4072:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4083:4:7",
														"type": ""
													}
												],
												"src": "3996:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4312:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4278:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4303:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4285:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4285:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4275:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4275:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:43:7"
															},
															"nodeType": "YulIf",
															"src": "4265:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4248:5:7",
														"type": ""
													}
												],
												"src": "4212:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4392:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4402:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4424:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4411:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4402:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4467:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4440:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4370:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4378:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4386:5:7",
														"type": ""
													}
												],
												"src": "4340:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4551:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4597:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4599:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4599:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4599:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4572:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4568:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4568:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4564:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:32:7"
															},
															"nodeType": "YulIf",
															"src": "4561:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4690:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4705:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4719:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4709:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4734:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4769:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4780:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4765:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4765:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4789:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4744:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4744:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4734:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4521:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4532:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4544:6:7",
														"type": ""
													}
												],
												"src": "4485:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4900:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4946:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4948:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4948:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4948:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4921:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4930:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:32:7"
															},
															"nodeType": "YulIf",
															"src": "4910:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5039:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5054:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5083:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5118:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5129:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5114:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5114:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5138:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5093:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5083:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5166:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5181:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5185:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5211:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5243:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5254:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5263:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5221:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5221:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5211:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4862:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4873:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4885:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4893:6:7",
														"type": ""
													}
												],
												"src": "4820:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5366:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5377:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5387:4:7",
																"type": "",
																"value": "0x05"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5377:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5349:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5359:6:7",
														"type": ""
													}
												],
												"src": "5294:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5513:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5523:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5538:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5523:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5485:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5490:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5501:11:7",
														"type": ""
													}
												],
												"src": "5404:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5633:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5641:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5633:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5610:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5618:4:7",
														"type": ""
													}
												],
												"src": "5553:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5712:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5729:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5752:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5734:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5734:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5722:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5722:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5700:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5707:3:7",
														"type": ""
													}
												],
												"src": "5657:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5851:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5895:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5903:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5861:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5861:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5916:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5934:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5916:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5824:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5832:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5840:10:7",
														"type": ""
													}
												],
												"src": "5771:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6029:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6039:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6051:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6056:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6039:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6016:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6024:4:7",
														"type": ""
													}
												],
												"src": "5956:111:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6217:582:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6227:66:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6287:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6241:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:52:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6231:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6302:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6381:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6309:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6302:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6402:69:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6465:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6417:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6417:54:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "6406:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6480:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "6494:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6484:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6570:222:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6584:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6611:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6605:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6605:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "6588:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6631:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "6682:13:7"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6697:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6638:43:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6638:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6631:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6714:68:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6775:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "6724:50:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6724:58:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6714:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6532:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6535:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6529:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6543:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6545:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6554:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6557:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6550:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6550:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6545:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6514:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6516:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6525:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "6520:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6510:282:7"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6204:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6211:3:7",
														"type": ""
													}
												],
												"src": "6105:694:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6949:171:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6959:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6971:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6982:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6967:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6959:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7086:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7099:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7110:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7095:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:89:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:117:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6996:117:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6921:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6933:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6944:4:7",
														"type": ""
													}
												],
												"src": "6805:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7192:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7238:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7240:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7240:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7240:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7213:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7222:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7209:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7209:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7234:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7205:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7205:32:7"
															},
															"nodeType": "YulIf",
															"src": "7202:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7331:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7346:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7350:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7375:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7410:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7421:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7406:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7406:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7430:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7385:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7375:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7162:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7173:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7185:6:7",
														"type": ""
													}
												],
												"src": "7126:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7503:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7559:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7568:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7571:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7561:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7561:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7561:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7526:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7550:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "7533:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7533:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7523:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7523:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:42:7"
															},
															"nodeType": "YulIf",
															"src": "7513:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7496:5:7",
														"type": ""
													}
												],
												"src": "7461:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7638:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7648:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7670:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7657:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7648:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7712:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "7686:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7686:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7616:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7624:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7632:5:7",
														"type": ""
													}
												],
												"src": "7587:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7795:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7841:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7843:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7843:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7843:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7816:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7825:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7812:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:32:7"
															},
															"nodeType": "YulIf",
															"src": "7805:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7934:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7949:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7953:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7978:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8012:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8023:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8008:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8008:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8032:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "7988:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7988:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7978:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7765:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7776:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7788:6:7",
														"type": ""
													}
												],
												"src": "7730:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8159:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8176:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8181:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8169:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8169:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8197:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8216:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8221:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8212:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8197:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8131:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8136:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8147:11:7",
														"type": ""
													}
												],
												"src": "8063:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8344:120:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8366:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8374:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8362:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8362:14:7"
																	},
																	{
																		"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8378:34:7",
																		"type": "",
																		"value": "The status of the CDS should be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8355:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8355:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8434:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8442:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8430:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:15:7"
																	},
																	{
																		"hexValue": "70656e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8447:9:7",
																		"type": "",
																		"value": "pending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8423:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8423:34:7"
														}
													]
												},
												"name": "store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8336:6:7",
														"type": ""
													}
												],
												"src": "8238:226:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8616:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8626:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8692:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8697:2:7",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8633:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8798:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																	"nodeType": "YulIdentifier",
																	"src": "8709:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8709:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8709:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8811:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8822:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8827:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8811:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8604:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8612:3:7",
														"type": ""
													}
												],
												"src": "8470:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9013:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9023:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9035:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9046:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9031:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9023:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9070:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9081:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9066:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9095:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9085:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9085:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9059:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9059:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9059:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9249:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9123:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9115:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8993:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9008:4:7",
														"type": ""
													}
												],
												"src": "8842:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9312:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9315:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9305:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9305:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9305:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9409:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9412:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9402:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9402:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9436:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9267:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9497:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9507:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9530:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9512:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9512:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9507:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9541:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9564:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9546:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9546:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9541:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9704:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9706:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9706:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9706:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9625:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9632:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9700:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9628:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9628:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9622:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9622:81:7"
															},
															"nodeType": "YulIf",
															"src": "9619:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9736:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9747:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9750:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9743:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9743:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9736:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9484:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9487:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9493:3:7",
														"type": ""
													}
												],
												"src": "9453:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9808:144:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9818:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9840:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "9823:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:19:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9818:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9851:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9873:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "9856:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:19:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9851:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9897:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9899:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9899:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9899:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9891:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9894:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9888:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:8:7"
															},
															"nodeType": "YulIf",
															"src": "9885:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9929:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9941:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9937:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9929:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9794:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9797:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9803:4:7",
														"type": ""
													}
												],
												"src": "9764:188:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10064:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10086:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10094:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10082:14:7"
																	},
																	{
																		"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10098:34:7",
																		"type": "",
																		"value": "The status of the CDS should be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10075:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10154:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10162:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10150:15:7"
																	},
																	{
																		"hexValue": "616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10167:8:7",
																		"type": "",
																		"value": "active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10143:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10143:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10056:6:7",
														"type": ""
													}
												],
												"src": "9958:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10335:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10345:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10411:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10416:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10352:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10352:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10345:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10517:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																	"nodeType": "YulIdentifier",
																	"src": "10428:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10428:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10530:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10541:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10530:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10323:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10331:3:7",
														"type": ""
													}
												],
												"src": "10189:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10732:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10742:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10754:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10765:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10750:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10750:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10742:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10789:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10800:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10785:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10808:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10814:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10804:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10804:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10778:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10778:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10778:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10834:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10968:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10842:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10834:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10712:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10727:4:7",
														"type": ""
													}
												],
												"src": "10561:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11092:132:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11114:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11122:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:14:7"
																	},
																	{
																		"hexValue": "43757272656e7420707269636520697320686967686572207468616e20746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11126:34:7",
																		"type": "",
																		"value": "Current price is higher than the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11182:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11190:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11178:15:7"
																	},
																	{
																		"hexValue": "20636c61696d20707269636520696e20434453",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11195:21:7",
																		"type": "",
																		"value": " claim price in CDS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11171:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11084:6:7",
														"type": ""
													}
												],
												"src": "10986:238:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11376:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11386:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11452:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:7",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11393:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11393:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11386:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11558:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																	"nodeType": "YulIdentifier",
																	"src": "11469:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11469:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11469:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11571:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11582:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11587:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11578:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11578:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11571:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11364:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11372:3:7",
														"type": ""
													}
												],
												"src": "11230:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11773:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11783:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11795:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11806:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11791:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11791:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11783:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11830:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11841:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11826:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11826:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11849:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11855:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11845:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11819:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11819:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11819:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11875:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12009:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11883:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11875:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11753:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11768:4:7",
														"type": ""
													}
												],
												"src": "11602:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12133:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12163:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12151:14:7"
																	},
																	{
																		"hexValue": "526f756e6420616c726561647920656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12167:21:7",
																		"type": "",
																		"value": "Round already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12144:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12125:6:7",
														"type": ""
													}
												],
												"src": "12027:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12358:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12424:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12429:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12365:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12365:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12358:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12530:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																	"nodeType": "YulIdentifier",
																	"src": "12441:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12441:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12441:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12543:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12554:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12559:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12550:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12543:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12336:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12344:3:7",
														"type": ""
													}
												],
												"src": "12202:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12745:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12755:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12767:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12778:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12763:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12763:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12755:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12802:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12813:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12821:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12817:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12817:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12847:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12981:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12855:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12847:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12725:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12740:4:7",
														"type": ""
													}
												],
												"src": "12574:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13062:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13072:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13087:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13081:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13081:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13072:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13130:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13103:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13103:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13040:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13048:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13056:5:7",
														"type": ""
													}
												],
												"src": "12999:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13225:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13271:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13273:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13273:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13273:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13246:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13255:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13242:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13267:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13238:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:32:7"
															},
															"nodeType": "YulIf",
															"src": "13235:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "13364:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13379:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13393:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13383:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13408:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13454:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13465:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13450:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13450:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13474:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13418:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13418:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13408:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13195:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13206:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13218:6:7",
														"type": ""
													}
												],
												"src": "13148:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13611:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13633:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13641:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13629:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13645:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13622:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13701:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13709:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13697:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13714:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13690:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13690:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13603:6:7",
														"type": ""
													}
												],
												"src": "13505:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13882:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13892:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13958:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13963:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13899:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13899:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13892:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14064:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13975:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13975:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13975:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14077:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14088:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14093:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14084:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14084:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14077:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13870:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13878:3:7",
														"type": ""
													}
												],
												"src": "13736:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14279:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14289:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14301:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14297:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14289:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14347:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14332:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14355:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14361:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14325:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14381:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14515:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14389:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14389:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14381:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14259:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14274:4:7",
														"type": ""
													}
												],
												"src": "14108:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14639:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14661:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14669:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14657:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14657:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14673:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14650:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14650:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14631:6:7",
														"type": ""
													}
												],
												"src": "14533:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14867:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14877:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14943:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14948:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14884:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14884:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14877:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15049:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "14960:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14960:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15062:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15073:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15078:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15069:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15069:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15062:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14855:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14863:3:7",
														"type": ""
													}
												],
												"src": "14721:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15264:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15274:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15286:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15297:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15282:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15274:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15321:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15332:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15317:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15317:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15340:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15346:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15336:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15336:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15310:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15310:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15366:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15500:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15374:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15374:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15366:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15244:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15259:4:7",
														"type": ""
													}
												],
												"src": "15093:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15546:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15566:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15556:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15556:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15556:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15660:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15663:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15653:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15653:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15687:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15677:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15677:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15677:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15518:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15746:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15756:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15779:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15761:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15761:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15756:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15790:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15813:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15795:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15795:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15790:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15837:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15839:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15839:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15839:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15834:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15827:9:7"
															},
															"nodeType": "YulIf",
															"src": "15824:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15869:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15878:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15881:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15874:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15874:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15869:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15735:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15738:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15744:1:7",
														"type": ""
													}
												],
												"src": "15704:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15940:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15950:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15973:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15955:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15955:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15950:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15984:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16007:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15989:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15989:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15984:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16031:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16033:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16033:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16033:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16025:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16028:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16022:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16022:8:7"
															},
															"nodeType": "YulIf",
															"src": "16019:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16063:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16075:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16078:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16071:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16071:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16063:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15926:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15929:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15935:4:7",
														"type": ""
													}
												],
												"src": "15895:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16140:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16150:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16173:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16155:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16155:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16150:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16184:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16207:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16189:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16189:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16184:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16382:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16384:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16384:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16384:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16294:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16287:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16287:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16280:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16280:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16302:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16309:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16377:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "16305:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16305:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16299:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16276:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16276:105:7"
															},
															"nodeType": "YulIf",
															"src": "16273:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16414:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16429:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16432:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16425:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16425:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16414:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16123:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16126:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16132:7:7",
														"type": ""
													}
												],
												"src": "16092:348:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$468(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$468(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$468(value)\n    }\n\n    function convert_t_enum$_Status_$468_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$468(value)\n    }\n\n    function abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$468_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad(memPtr) {\n\n        mstore(add(memPtr, 0), \"The status of the CDS should be \")\n\n        mstore(add(memPtr, 32), \"pending\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05(memPtr) {\n\n        mstore(add(memPtr, 0), \"The status of the CDS should be \")\n\n        mstore(add(memPtr, 32), \"active\")\n\n    }\n\n    function abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Current price is higher than the\")\n\n        mstore(add(memPtr, 32), \" claim price in CDS\")\n\n    }\n\n    function abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54(memPtr) {\n\n        mstore(add(memPtr, 0), \"Round already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063a3f09ad611610104578063dbd0e1b6116100a2578063f26cc58e11610071578063f26cc58e146104cb578063f2fde38b146104e9578063fcb341df14610505578063ffd0e69f14610523576101da565b8063dbd0e1b614610455578063e0a73a9314610473578063e99d286614610491578063ea8a1af0146104c1576101da565b8063bd9a548b116100de578063bd9a548b146103b9578063bef904e3146103d7578063cbed244914610407578063d868379814610437576101da565b8063a3f09ad61461034f578063b6fc2d5f1461037f578063bab215f81461039d576101da565b80635b6a251b1161017c57806386be75b71161014b57806386be75b7146102d75780638a568299146102f55780638da5cb5b14610313578063a2e800ad14610331576101da565b80635b6a251b14610287578063603daf9a14610291578063715018a6146102af578063839966af146102b9576101da565b80633fe3347a116101b85780633fe3347a1461023757806343d726d6146102555780634c1786ea1461025f5780634e71d92d1461027d576101da565b806315d655c9146101df578063200d2ed2146101fd5780633b41e19c1461021b575b600080fd5b6101e7610541565b6040516101f49190611304565b60405180910390f35b610205610547565b6040516102129190611396565b60405180910390f35b6102356004803603810190610230919061141a565b61055a565b005b61023f610651565b60405161024c9190611479565b60405180910390f35b61025d610667565b005b6102676106f2565b6040516102749190611304565b60405180910390f35b6102856106f8565b005b61028f6107ce565b005b6102996108ed565b6040516102a691906114d5565b60405180910390f35b6102b7610917565b005b6102c161092b565b6040516102ce91906114ff565b60405180910390f35b6102df6109ae565b6040516102ec9190611304565b60405180910390f35b6102fd6109b4565b60405161030a9190611479565b60405180910390f35b61031b6109ca565b60405161032891906114d5565b60405180910390f35b6103396109f3565b6040516103469190611479565b60405180910390f35b61036960048036038101906103649190611546565b610a09565b60405161037691906114d5565b60405180910390f35b610387610a7e565b6040516103949190611304565b60405180910390f35b6103b760048036038101906103b29190611573565b610a84565b005b6103c1610aae565b6040516103ce919061165e565b60405180910390f35b6103f160048036038101906103ec9190611679565b610aec565b6040516103fe9190611304565b60405180910390f35b610421600480360381019061041c91906116d2565b610aff565b60405161042e9190611304565b60405180910390f35b61043f610d40565b60405161044c9190611304565b60405180910390f35b61045d610d46565b60405161046a91906114d5565b60405180910390f35b61047b610d70565b6040516104889190611304565b60405180910390f35b6104ab60048036038101906104a69190611546565b610d76565b6040516104b891906114d5565b60405180910390f35b6104c9610deb565b005b6104d3610e76565b6040516104e09190611304565b60405180910390f35b61050360048036038101906104fe9190611546565b610ece565b005b61050d610f52565b60405161051a9190611304565b60405180910390f35b61052b610f74565b60405161053891906114ff565b60405180910390f35b60045481565b600260149054906101000a900460ff1681565b61056261100d565b600160048111156105765761057561131f565b5b600260149054906101000a900460ff1660048111156105985761059761131f565b5b146105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90611782565b60405180910390fd5b6105e182610aec565b506105ed338215610a84565b6105f7600261108b565b506224ea004261060791906117d1565b6008819055506001600a60148282829054906101000a900463ffffffff1661062f9190611827565b92506101000a81548163ffffffff021916908363ffffffff1602179055505050565b600a601c9054906101000a900463ffffffff1681565b61066f61100d565b600260048111156106835761068261131f565b5b600260149054906101000a900460ff1660048111156106a5576106a461131f565b5b146106e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dc906118cd565b60405180910390fd5b6106ef600461108b565b50565b60075481565b61070061100d565b600260048111156107145761071361131f565b5b600260149054906101000a900460ff1660048111156107365761073561131f565b5b14610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d906118cd565b60405180910390fd5b6000610780610e76565b14156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b89061195f565b60405180910390fd5b6107cb600361108b565b50565b6107d661100d565b600260048111156107ea576107e961131f565b5b600260149054906101000a900460ff16600481111561080c5761080b61131f565b5b1461084c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610843906118cd565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff16116108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e906119cb565b60405180910390fd5b6224ea00600860008282546108bc91906117d1565b925050819055506108ea6001600a60149054906101000a900463ffffffff166108e59190611827565b6110d6565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61091f61100d565b610929600061111b565b565b6000600260048111156109415761094061131f565b5b600260149054906101000a900460ff1660048111156109635761096261131f565b5b146109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a906118cd565b60405180910390fd5b600854421015905090565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b6000610a1361100d565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b610a8c61100d565b80610a9f57610a9a82610d76565b610aa9565b610aa882610a09565b5b505050565b610ab66112c9565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b60008060008363ffffffff161415610bbf57610bb86305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baa9190611a00565b6111df90919063ffffffff16565b9050610d37565b60018363ffffffff161415610c7c57610c756305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611a00565b6111df90919063ffffffff16565b9050610d36565b60028363ffffffff161415610d3557610d326305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d249190611a00565b6111df90919063ffffffff16565b90505b5b5b80915050919050565b60085481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000610d8061100d565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610df361100d565b60016004811115610e0757610e0661131f565b5b600260149054906101000a900460ff166004811115610e2957610e2861131f565b5b14610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090611782565b60405180910390fd5b610e73600061108b565b50565b600080610e94600a601c9054906101000a900463ffffffff16610aff565b9050806004541015610eaa576000915050610ecb565b610ec7600554600354836007546111f5909392919063ffffffff16565b9150505b90565b610ed661100d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d90611a9f565b60405180910390fd5b610f4f8161111b565b50565b6000610f6f6005546007546003546112659092919063ffffffff16565b905090565b600060026004811115610f8a57610f8961131f565b5b600260149054906101000a900460ff166004811115610fac57610fab61131f565b5b14610fec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe3906118cd565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff1614905090565b611015611295565b73ffffffffffffffffffffffffffffffffffffffff166110336109ca565b73ffffffffffffffffffffffffffffffffffffffff1614611089576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108090611b0b565b60405180910390fd5b565b600061109561100d565b81600260146101000a81548160ff021916908360048111156110ba576110b961131f565b5b0217905550600260149054906101000a900460ff169050919050565b60006110e061100d565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836111ed9190611b5a565b905092915050565b60008082851061120757859050611259565b600061122e61121f878761129d90919063ffffffff16565b886111df90919063ffffffff16565b9050611255611246858761129d90919063ffffffff16565b826112b390919063ffffffff16565b9150505b80915050949350505050565b600061128c61127d848661129d90919063ffffffff16565b836111df90919063ffffffff16565b90509392505050565b600033905090565b600081836112ab9190611b8b565b905092915050565b600081836112c19190611bbf565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b6112fe816112eb565b82525050565b600060208201905061131960008301846112f5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061135f5761135e61131f565b5b50565b60008190506113708261134e565b919050565b600061138082611362565b9050919050565b61139081611375565b82525050565b60006020820190506113ab6000830184611387565b92915050565b600080fd5b6113bf816112eb565b81146113ca57600080fd5b50565b6000813590506113dc816113b6565b92915050565b60008115159050919050565b6113f7816113e2565b811461140257600080fd5b50565b600081359050611414816113ee565b92915050565b60008060408385031215611431576114306113b1565b5b600061143f858286016113cd565b925050602061145085828601611405565b9150509250929050565b600063ffffffff82169050919050565b6114738161145a565b82525050565b600060208201905061148e600083018461146a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114bf82611494565b9050919050565b6114cf816114b4565b82525050565b60006020820190506114ea60008301846114c6565b92915050565b6114f9816113e2565b82525050565b600060208201905061151460008301846114f0565b92915050565b611523816114b4565b811461152e57600080fd5b50565b6000813590506115408161151a565b92915050565b60006020828403121561155c5761155b6113b1565b5b600061156a84828501611531565b91505092915050565b6000806040838503121561158a576115896113b1565b5b600061159885828601611531565b92505060206115a985828601611405565b9150509250929050565b600060059050919050565b600081905092915050565b6000819050919050565b6115dc816112eb565b82525050565b60006115ee83836115d3565b60208301905092915050565b6000602082019050919050565b611610816115b3565b61161a81846115be565b9250611625826115c9565b8060005b8381101561165657815161163d87826115e2565b9650611648836115fa565b925050600181019050611629565b505050505050565b600060a0820190506116736000830184611607565b92915050565b60006020828403121561168f5761168e6113b1565b5b600061169d848285016113cd565b91505092915050565b6116af8161145a565b81146116ba57600080fd5b50565b6000813590506116cc816116a6565b92915050565b6000602082840312156116e8576116e76113b1565b5b60006116f6848285016116bd565b91505092915050565b600082825260208201905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f70656e64696e6700000000000000000000000000000000000000000000000000602082015250565b600061176c6027836116ff565b915061177782611710565b604082019050919050565b6000602082019050818103600083015261179b8161175f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117dc826112eb565b91506117e7836112eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561181c5761181b6117a2565b5b828201905092915050565b60006118328261145a565b915061183d8361145a565b9250828210156118505761184f6117a2565b5b828203905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f6163746976650000000000000000000000000000000000000000000000000000602082015250565b60006118b76026836116ff565b91506118c28261185b565b604082019050919050565b600060208201905081810360008301526118e6816118aa565b9050919050565b7f43757272656e7420707269636520697320686967686572207468616e2074686560008201527f20636c61696d20707269636520696e2043445300000000000000000000000000602082015250565b60006119496033836116ff565b9150611954826118ed565b604082019050919050565b600060208201905081810360008301526119788161193c565b9050919050565b7f526f756e6420616c726561647920656e64656400000000000000000000000000600082015250565b60006119b56013836116ff565b91506119c08261197f565b602082019050919050565b600060208201905081810360008301526119e4816119a8565b9050919050565b6000815190506119fa816113b6565b92915050565b600060208284031215611a1657611a156113b1565b5b6000611a24848285016119eb565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a896026836116ff565b9150611a9482611a2d565b604082019050919050565b60006020820190508181036000830152611ab881611a7c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611af56020836116ff565b9150611b0082611abf565b602082019050919050565b60006020820190508181036000830152611b2481611ae8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b65826112eb565b9150611b70836112eb565b925082611b8057611b7f611b2b565b5b828204905092915050565b6000611b96826112eb565b9150611ba1836112eb565b925082821015611bb457611bb36117a2565b5b828203905092915050565b6000611bca826112eb565b9150611bd5836112eb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c0e57611c0d6117a2565b5b82820290509291505056fea26469706673582212200ca7d2132eb91ebc6b0122add36941a571e685cb3772e5cefe11162925cdf0a964736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F09AD6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDBD0E1B6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF26CC58E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xFCB341DF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xFFD0E69F EQ PUSH2 0x523 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x4C1 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xBD9A548B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xD8683798 EQ PUSH2 0x437 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x5B6A251B GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x86BE75B7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x331 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x5B6A251B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x839966AF EQ PUSH2 0x2B9 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3FE3347A GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x27D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3B41E19C EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x667 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x7CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x917 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xDEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 DUP3 PUSH2 0xAEC JUMP JUMPDEST POP PUSH2 0x5ED CALLER DUP3 ISZERO PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x5F7 PUSH1 0x2 PUSH2 0x108B JUMP JUMPDEST POP PUSH3 0x24EA00 TIMESTAMP PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x66F PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH2 0x682 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EF PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x735 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x780 PUSH2 0xE76 JUMP JUMPDEST EQ ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB PUSH1 0x3 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EA PUSH1 0x1 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x91F PUSH2 0x100D JUMP JUMPDEST PUSH2 0x929 PUSH1 0x0 PUSH2 0x111B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x963 JUMPI PUSH2 0x962 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA8C PUSH2 0x100D JUMP JUMPDEST DUP1 PUSH2 0xA9F JUMPI PUSH2 0xA9A DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xAA8 DUP3 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB6 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBBF JUMPI PUSH2 0xBB8 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC75 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD32 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD80 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE07 JUMPI PUSH2 0xE06 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE73 PUSH1 0x0 PUSH2 0x108B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE94 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xAFF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xECB JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0x11F5 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3D SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0x111B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6F PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1265 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF8A JUMPI PUSH2 0xF89 PUSH2 0x131F JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFAC JUMPI PUSH2 0xFAB PUSH2 0x131F JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE3 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1015 PUSH2 0x1295 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1033 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1095 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x131F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 PUSH2 0x100D JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0x1207 JUMPI DUP6 SWAP1 POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122E PUSH2 0x121F DUP8 DUP8 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1255 PUSH2 0x1246 DUP6 DUP8 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x12B3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C PUSH2 0x127D DUP5 DUP7 PUSH2 0x129D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x11DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1319 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x135F JUMPI PUSH2 0x135E PUSH2 0x131F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1370 DUP3 PUSH2 0x134E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 DUP3 PUSH2 0x1362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1390 DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F7 DUP2 PUSH2 0x13E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1414 DUP2 PUSH2 0x13EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH2 0x1430 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1450 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x145A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BF DUP3 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CF DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x13E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1523 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1540 DUP2 PUSH2 0x151A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156A DUP5 DUP3 DUP6 ADD PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP6 DUP3 DUP7 ADD PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x12EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE DUP4 DUP4 PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x161A DUP2 DUP5 PUSH2 0x15BE JUMP JUMPDEST SWAP3 POP PUSH2 0x1625 DUP3 PUSH2 0x15C9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1656 JUMPI DUP2 MLOAD PUSH2 0x163D DUP8 DUP3 PUSH2 0x15E2 JUMP JUMPDEST SWAP7 POP PUSH2 0x1648 DUP4 PUSH2 0x15FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1673 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168F JUMPI PUSH2 0x168E PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP5 DUP3 DUP6 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP2 PUSH2 0x145A JUMP JUMPDEST DUP2 EQ PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CC DUP2 PUSH2 0x16A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F6 DUP5 DUP3 DUP6 ADD PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x70656E64696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x27 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179B DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x17E7 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 DUP3 PUSH2 0x145A JUMP JUMPDEST SWAP2 POP PUSH2 0x183D DUP4 PUSH2 0x145A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 PUSH1 0x26 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x18C2 DUP3 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18E6 DUP2 PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420707269636520697320686967686572207468616E20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636C61696D20707269636520696E2043445300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH1 0x33 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420616C726561647920656E64656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 PUSH1 0x13 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x19C0 DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FA DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH2 0x1A15 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x26 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A94 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH2 0x1A7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 PUSH1 0x20 DUP4 PUSH2 0x16FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1B00 DUP3 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B24 DUP2 PUSH2 0x1AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x1B2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA1 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BB4 JUMPI PUSH2 0x1BB3 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCA DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD5 DUP4 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xA7 0xD2 SGT 0x2E 0xB9 0x1E 0xBC PUSH12 0x122ADD36941A571E685CB37 PUSH19 0xE5CEFE11162925CDF0A964736F6C634300080A STOP CALLER ",
							"sourceMap": "208:4313:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;763:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1988:85;;;:::i;:::-;;597:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:194;;;:::i;:::-;;1451:159;;;:::i;:::-;;3784:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;2375:118:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;734:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:20:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2938:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2782:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3432:185;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2511:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;339:368:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:26:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3861:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3054:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1896:88;;;:::i;:::-;;3940:291;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3621:159:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:25;;;;:::o;449:20::-;;;;;;;;;;;;;:::o;1614:278::-;1094:13:0;:11;:13::i;:::-;4304:14:3::1;4294:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;4279:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1709:34:::2;1727:15;1709:17;:34::i;:::-;;1749:42;1765:10;1778:12;1777:13;1749:15;:42::i;:::-;1797:28;1807:17;1797:9;:28::i;:::-;;1863:7;1845:15;:25;;;;:::i;:::-;1831:11;:39;;;;1886:1;1876:6;;:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1614:278:::0;;:::o;763:23::-;;;;;;;;;;;;;:::o;1988:85::-;1094:13:0;:11;:13::i;:::-;4440::3::1;4430:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4415:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2039:29:::2;2049:18;2039:9;:29::i;:::-;;1988:85::o:0;597:28::-;;;;:::o;2077:194::-;1094:13:0;:11;:13::i;:::-;4440::3::1;4430:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4415:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2163:1:::2;2143:16;:14;:16::i;:::-;:21;;2128:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:29;2247:18;2237:9;:29::i;:::-;;2077:194::o:0;1451:159::-;1094:13:0;:11;:13::i;:::-;4440::3::1;4430:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4415:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1525:1:::2;1516:6;;;;;;;;;;;:10;;;1508:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1571:7;1556:11;;:22;;;;;;;:::i;:::-;;;;;;;;1584:21;1603:1;1594:6;;;;;;;;;;;:10;;;;:::i;:::-;1584:9;:21::i;:::-;;1451:159::o:0;3784:73::-;3825:7;3847:5;;;;;;;;;;;3840:12;;3784:73;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2375:118:3:-;2437:4;4440:13;4430:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4415:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2476:11:::1;;2457:15;:30;;2449:39;;2375:118:::0;:::o;474:29::-;;;;:::o;734:25::-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;710:20:3:-;;;;;;;;;;;;;:::o;2938:112::-;2998:7;1094:13:0;:11;:13::i;:::-;3021:6:3::1;3013:5;;:14;;;;;;;;;;;;;;;;;;3040:5;;;;;;;;;;;3033:12;;2938:112:::0;;;:::o;536:31::-;;;;:::o;2782:152::-;1094:13:0;:11;:13::i;:::-;2868:8:3::1;:61;;2905:24;2915:13;2905:9;:24::i;:::-;2868:61;;;2879:23;2888:13;2879:8;:23::i;:::-;2868:61;;2782:152:::0;;:::o;3432:185::-;3474:17;;:::i;:::-;3499:113;;;;;;;;3514:14;;3499:113;;;;3536:10;;3499:113;;;;3554:16;;3499:113;;;;3578:7;;3499:113;;;;3593:13;;3499:113;;;;;3432:185;:::o;2511:147::-;2579:7;2611:15;2594:14;:32;;;;2639:14;;2632:21;;2511:147;;;:::o;339:368:4:-;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;629:26:3:-;;;;:::o;3861:75::-;3903:7;3925:6;;;;;;;;;;;3918:13;;3861:75;:::o;571:22::-;;;;:::o;3054:117::-;3116:7;1094:13:0;:11;:13::i;:::-;3140:7:3::1;3131:6;;:16;;;;;;;;;;;;;;;;;;3160:6;;;;;;;;;;;3153:13;;3054:117:::0;;;:::o;1896:88::-;1094:13:0;:11;:13::i;:::-;4304:14:3::1;4294:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;4279:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1949:30:::2;1959:19;1949:9;:30::i;:::-;;1896:88::o:0;3940:291::-;3987:7;4002:17;4022:23;4035:9;;;;;;;;;;;4022:12;:23::i;:::-;4002:43;;4068:9;4055:10;;:22;4051:51;;;4094:1;4087:8;;;;;4051:51;4120:106;4159:16;;4185:14;;4209:9;4120:13;;:29;;:106;;;;;;:::i;:::-;4107:119;;;3940:291;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3621:159:3:-;3670:7;3692:83;3732:16;;3756:13;;3692:14;;:32;;:83;;;;;:::i;:::-;3685:90;;3621:159;:::o;2275:96::-;2334:4;4440:13;4430:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4415:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2364:1:::1;2354:6;;;;;;;;;;;:11;;;2346:20;;2275:96:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2662:116:3:-;2724:6;1094:13:0;:11;:13::i;:::-;2747:7:3::1;2738:6;;:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2767:6;;;;;;;;;;;2760:13;;2662:116:::0;;;:::o;3175:::-;3237:6;1094:13:0;:11;:13::i;:::-;3260:7:3::1;3251:6;;:16;;;;;;;;;;;;;;;;;;3280:6;;;;;;;;;;;3273:13;;3175:116:::0;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;167:421:6:-;311:7;326:19;371:8;355:12;:24;351:209;;403:8;389:22;;351:209;;;432:18;453:40;466:26;479:12;466:8;:12;;:26;;;;:::i;:::-;453:8;:12;;:40;;;;:::i;:::-;432:61;;515:38;530:22;543:8;530;:12;;:22;;;;:::i;:::-;515:10;:14;;:38;;;;:::i;:::-;501:52;;424:136;351:209;572:11;565:18;;;167:421;;;;;;:::o;592:203::-;722:7;744:46;763:26;776:12;763:8;:12;;:26;;;;:::i;:::-;744:14;:18;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;3122::2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:115;711:1;704:5;701:12;691:46;;717:18;;:::i;:::-;691:46;628:115;:::o;749:131::-;796:7;825:5;814:16;;831:43;868:5;831:43;:::i;:::-;749:131;;;:::o;886:::-;944:9;977:34;1005:5;977:34;:::i;:::-;964:47;;886:131;;;:::o;1023:147::-;1118:45;1157:5;1118:45;:::i;:::-;1113:3;1106:58;1023:147;;:::o;1176:238::-;1277:4;1315:2;1304:9;1300:18;1292:26;;1328:79;1404:1;1393:9;1389:17;1380:6;1328:79;:::i;:::-;1176:238;;;;:::o;1501:117::-;1610:1;1607;1600:12;1747:122;1820:24;1838:5;1820:24;:::i;:::-;1813:5;1810:35;1800:63;;1859:1;1856;1849:12;1800:63;1747:122;:::o;1875:139::-;1921:5;1959:6;1946:20;1937:29;;1975:33;2002:5;1975:33;:::i;:::-;1875:139;;;;:::o;2020:90::-;2054:7;2097:5;2090:13;2083:21;2072:32;;2020:90;;;:::o;2116:116::-;2186:21;2201:5;2186:21;:::i;:::-;2179:5;2176:32;2166:60;;2222:1;2219;2212:12;2166:60;2116:116;:::o;2238:133::-;2281:5;2319:6;2306:20;2297:29;;2335:30;2359:5;2335:30;:::i;:::-;2238:133;;;;:::o;2377:468::-;2442:6;2450;2499:2;2487:9;2478:7;2474:23;2470:32;2467:119;;;2505:79;;:::i;:::-;2467:119;2625:1;2650:53;2695:7;2686:6;2675:9;2671:22;2650:53;:::i;:::-;2640:63;;2596:117;2752:2;2778:50;2820:7;2811:6;2800:9;2796:22;2778:50;:::i;:::-;2768:60;;2723:115;2377:468;;;;;:::o;2851:93::-;2887:7;2927:10;2920:5;2916:22;2905:33;;2851:93;;;:::o;2950:115::-;3035:23;3052:5;3035:23;:::i;:::-;3030:3;3023:36;2950:115;;:::o;3071:218::-;3162:4;3200:2;3189:9;3185:18;3177:26;;3213:69;3279:1;3268:9;3264:17;3255:6;3213:69;:::i;:::-;3071:218;;;;:::o;3295:126::-;3332:7;3372:42;3365:5;3361:54;3350:65;;3295:126;;;:::o;3427:96::-;3464:7;3493:24;3511:5;3493:24;:::i;:::-;3482:35;;3427:96;;;:::o;3529:118::-;3616:24;3634:5;3616:24;:::i;:::-;3611:3;3604:37;3529:118;;:::o;3653:222::-;3746:4;3784:2;3773:9;3769:18;3761:26;;3797:71;3865:1;3854:9;3850:17;3841:6;3797:71;:::i;:::-;3653:222;;;;:::o;3881:109::-;3962:21;3977:5;3962:21;:::i;:::-;3957:3;3950:34;3881:109;;:::o;3996:210::-;4083:4;4121:2;4110:9;4106:18;4098:26;;4134:65;4196:1;4185:9;4181:17;4172:6;4134:65;:::i;:::-;3996:210;;;;:::o;4212:122::-;4285:24;4303:5;4285:24;:::i;:::-;4278:5;4275:35;4265:63;;4324:1;4321;4314:12;4265:63;4212:122;:::o;4340:139::-;4386:5;4424:6;4411:20;4402:29;;4440:33;4467:5;4440:33;:::i;:::-;4340:139;;;;:::o;4485:329::-;4544:6;4593:2;4581:9;4572:7;4568:23;4564:32;4561:119;;;4599:79;;:::i;:::-;4561:119;4719:1;4744:53;4789:7;4780:6;4769:9;4765:22;4744:53;:::i;:::-;4734:63;;4690:117;4485:329;;;;:::o;4820:468::-;4885:6;4893;4942:2;4930:9;4921:7;4917:23;4913:32;4910:119;;;4948:79;;:::i;:::-;4910:119;5068:1;5093:53;5138:7;5129:6;5118:9;5114:22;5093:53;:::i;:::-;5083:63;;5039:117;5195:2;5221:50;5263:7;5254:6;5243:9;5239:22;5221:50;:::i;:::-;5211:60;;5166:115;4820:468;;;;;:::o;5294:104::-;5359:6;5387:4;5377:14;;5294:104;;;:::o;5404:143::-;5501:11;5538:3;5523:18;;5404:143;;;;:::o;5553:98::-;5618:4;5641:3;5633:11;;5553:98;;;:::o;5657:108::-;5734:24;5752:5;5734:24;:::i;:::-;5729:3;5722:37;5657:108;;:::o;5771:179::-;5840:10;5861:46;5903:3;5895:6;5861:46;:::i;:::-;5939:4;5934:3;5930:14;5916:28;;5771:179;;;;:::o;5956:111::-;6024:4;6056;6051:3;6047:14;6039:22;;5956:111;;;:::o;6105:694::-;6241:52;6287:5;6241:52;:::i;:::-;6309:84;6386:6;6381:3;6309:84;:::i;:::-;6302:91;;6417:54;6465:5;6417:54;:::i;:::-;6494:7;6525:1;6510:282;6535:6;6532:1;6529:13;6510:282;;;6611:6;6605:13;6638:63;6697:3;6682:13;6638:63;:::i;:::-;6631:70;;6724:58;6775:6;6724:58;:::i;:::-;6714:68;;6570:222;6557:1;6554;6550:9;6545:14;;6510:282;;;6514:14;6217:582;;;6105:694;;:::o;6805:315::-;6944:4;6982:3;6971:9;6967:19;6959:27;;6996:117;7110:1;7099:9;7095:17;7086:6;6996:117;:::i;:::-;6805:315;;;;:::o;7126:329::-;7185:6;7234:2;7222:9;7213:7;7209:23;7205:32;7202:119;;;7240:79;;:::i;:::-;7202:119;7360:1;7385:53;7430:7;7421:6;7410:9;7406:22;7385:53;:::i;:::-;7375:63;;7331:117;7126:329;;;;:::o;7461:120::-;7533:23;7550:5;7533:23;:::i;:::-;7526:5;7523:34;7513:62;;7571:1;7568;7561:12;7513:62;7461:120;:::o;7587:137::-;7632:5;7670:6;7657:20;7648:29;;7686:32;7712:5;7686:32;:::i;:::-;7587:137;;;;:::o;7730:327::-;7788:6;7837:2;7825:9;7816:7;7812:23;7808:32;7805:119;;;7843:79;;:::i;:::-;7805:119;7963:1;7988:52;8032:7;8023:6;8012:9;8008:22;7988:52;:::i;:::-;7978:62;;7934:116;7730:327;;;;:::o;8063:169::-;8147:11;8181:6;8176:3;8169:19;8221:4;8216:3;8212:14;8197:29;;8063:169;;;;:::o;8238:226::-;8378:34;8374:1;8366:6;8362:14;8355:58;8447:9;8442:2;8434:6;8430:15;8423:34;8238:226;:::o;8470:366::-;8612:3;8633:67;8697:2;8692:3;8633:67;:::i;:::-;8626:74;;8709:93;8798:3;8709:93;:::i;:::-;8827:2;8822:3;8818:12;8811:19;;8470:366;;;:::o;8842:419::-;9008:4;9046:2;9035:9;9031:18;9023:26;;9095:9;9089:4;9085:20;9081:1;9070:9;9066:17;9059:47;9123:131;9249:4;9123:131;:::i;:::-;9115:139;;8842:419;;;:::o;9267:180::-;9315:77;9312:1;9305:88;9412:4;9409:1;9402:15;9436:4;9433:1;9426:15;9453:305;9493:3;9512:20;9530:1;9512:20;:::i;:::-;9507:25;;9546:20;9564:1;9546:20;:::i;:::-;9541:25;;9700:1;9632:66;9628:74;9625:1;9622:81;9619:107;;;9706:18;;:::i;:::-;9619:107;9750:1;9747;9743:9;9736:16;;9453:305;;;;:::o;9764:188::-;9803:4;9823:19;9840:1;9823:19;:::i;:::-;9818:24;;9856:19;9873:1;9856:19;:::i;:::-;9851:24;;9894:1;9891;9888:8;9885:34;;;9899:18;;:::i;:::-;9885:34;9944:1;9941;9937:9;9929:17;;9764:188;;;;:::o;9958:225::-;10098:34;10094:1;10086:6;10082:14;10075:58;10167:8;10162:2;10154:6;10150:15;10143:33;9958:225;:::o;10189:366::-;10331:3;10352:67;10416:2;10411:3;10352:67;:::i;:::-;10345:74;;10428:93;10517:3;10428:93;:::i;:::-;10546:2;10541:3;10537:12;10530:19;;10189:366;;;:::o;10561:419::-;10727:4;10765:2;10754:9;10750:18;10742:26;;10814:9;10808:4;10804:20;10800:1;10789:9;10785:17;10778:47;10842:131;10968:4;10842:131;:::i;:::-;10834:139;;10561:419;;;:::o;10986:238::-;11126:34;11122:1;11114:6;11110:14;11103:58;11195:21;11190:2;11182:6;11178:15;11171:46;10986:238;:::o;11230:366::-;11372:3;11393:67;11457:2;11452:3;11393:67;:::i;:::-;11386:74;;11469:93;11558:3;11469:93;:::i;:::-;11587:2;11582:3;11578:12;11571:19;;11230:366;;;:::o;11602:419::-;11768:4;11806:2;11795:9;11791:18;11783:26;;11855:9;11849:4;11845:20;11841:1;11830:9;11826:17;11819:47;11883:131;12009:4;11883:131;:::i;:::-;11875:139;;11602:419;;;:::o;12027:169::-;12167:21;12163:1;12155:6;12151:14;12144:45;12027:169;:::o;12202:366::-;12344:3;12365:67;12429:2;12424:3;12365:67;:::i;:::-;12358:74;;12441:93;12530:3;12441:93;:::i;:::-;12559:2;12554:3;12550:12;12543:19;;12202:366;;;:::o;12574:419::-;12740:4;12778:2;12767:9;12763:18;12755:26;;12827:9;12821:4;12817:20;12813:1;12802:9;12798:17;12791:47;12855:131;12981:4;12855:131;:::i;:::-;12847:139;;12574:419;;;:::o;12999:143::-;13056:5;13087:6;13081:13;13072:22;;13103:33;13130:5;13103:33;:::i;:::-;12999:143;;;;:::o;13148:351::-;13218:6;13267:2;13255:9;13246:7;13242:23;13238:32;13235:119;;;13273:79;;:::i;:::-;13235:119;13393:1;13418:64;13474:7;13465:6;13454:9;13450:22;13418:64;:::i;:::-;13408:74;;13364:128;13148:351;;;;:::o;13505:225::-;13645:34;13641:1;13633:6;13629:14;13622:58;13714:8;13709:2;13701:6;13697:15;13690:33;13505:225;:::o;13736:366::-;13878:3;13899:67;13963:2;13958:3;13899:67;:::i;:::-;13892:74;;13975:93;14064:3;13975:93;:::i;:::-;14093:2;14088:3;14084:12;14077:19;;13736:366;;;:::o;14108:419::-;14274:4;14312:2;14301:9;14297:18;14289:26;;14361:9;14355:4;14351:20;14347:1;14336:9;14332:17;14325:47;14389:131;14515:4;14389:131;:::i;:::-;14381:139;;14108:419;;;:::o;14533:182::-;14673:34;14669:1;14661:6;14657:14;14650:58;14533:182;:::o;14721:366::-;14863:3;14884:67;14948:2;14943:3;14884:67;:::i;:::-;14877:74;;14960:93;15049:3;14960:93;:::i;:::-;15078:2;15073:3;15069:12;15062:19;;14721:366;;;:::o;15093:419::-;15259:4;15297:2;15286:9;15282:18;15274:26;;15346:9;15340:4;15336:20;15332:1;15321:9;15317:17;15310:47;15374:131;15500:4;15374:131;:::i;:::-;15366:139;;15093:419;;;:::o;15518:180::-;15566:77;15563:1;15556:88;15663:4;15660:1;15653:15;15687:4;15684:1;15677:15;15704:185;15744:1;15761:20;15779:1;15761:20;:::i;:::-;15756:25;;15795:20;15813:1;15795:20;:::i;:::-;15790:25;;15834:1;15824:35;;15839:18;;:::i;:::-;15824:35;15881:1;15878;15874:9;15869:14;;15704:185;;;;:::o;15895:191::-;15935:4;15955:20;15973:1;15955:20;:::i;:::-;15950:25;;15989:20;16007:1;15989:20;:::i;:::-;15984:25;;16028:1;16025;16022:8;16019:34;;;16033:18;;:::i;:::-;16019:34;16078:1;16075;16071:9;16063:17;;15895:191;;;;:::o;16092:348::-;16132:7;16155:20;16173:1;16155:20;:::i;:::-;16150:25;;16189:20;16207:1;16189:20;:::i;:::-;16184:25;;16377:1;16309:66;16305:74;16302:1;16299:81;16294:1;16287:9;16280:17;16276:105;16273:131;;;16384:18;;:::i;:::-;16273:131;16432:1;16429;16425:9;16414:20;;16092:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1449400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accept(uint256,bool)": "infinite",
								"assetType()": "2567",
								"cancel()": "infinite",
								"checkPayDatePassed()": "4824",
								"checkRoundsZero()": "4912",
								"claim()": "infinite",
								"claimPrice()": "2476",
								"close()": "infinite",
								"getAmountOfAsset()": "infinite",
								"getBuyer()": "2590",
								"getClaimReward()": "infinite",
								"getCurrPrice(uint32)": "infinite",
								"getPrices()": "infinite",
								"getSeller()": "2567",
								"initAssetPrice()": "2474",
								"liquidationPrice()": "2497",
								"nextPayDate()": "2540",
								"owner()": "2611",
								"premium()": "2496",
								"premiumPaid()": "infinite",
								"renounceOwnership()": "30488",
								"rounds()": "2632",
								"sellerDeposit()": "2519",
								"setBuyer(address)": "infinite",
								"setInitAssetPrice(uint256)": "infinite",
								"setParticipants(address,bool)": "infinite",
								"setSeller(address)": "infinite",
								"status()": "2679",
								"totalRounds()": "2588",
								"transferOwnership(address)": "30813"
							},
							"internal": {
								"setNextPayDate()": "infinite",
								"setRounds(uint32)": "infinite",
								"setStatus(enum CDS.Status)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 247,
									"end": 289,
									"name": "PUSH",
									"source": 3,
									"value": "21558C2CDA098E7E0AC7D38775B3E2B4A0945222"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1008,
									"end": 1023,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1005,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1023,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1023,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1023,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1023,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1042,
									"end": 1053,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1029,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1029,
									"end": 1053,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1029,
									"end": 1053,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1029,
									"end": 1053,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1029,
									"end": 1053,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1095,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1059,
									"end": 1075,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1059,
									"end": 1095,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1059,
									"end": 1095,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1059,
									"end": 1095,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1059,
									"end": 1095,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1111,
									"end": 1119,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1141,
									"end": 1155,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1125,
									"end": 1138,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1125,
									"end": 1155,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1125,
									"end": 1155,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1125,
									"end": 1155,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1125,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1170,
									"end": 1177,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1177,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1204,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1194,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1183,
									"end": 1194,
									"name": "PUSH",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1204,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1240,
									"end": 1241,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1236,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1241,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1226,
									"end": 1241,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1241,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 1255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1245,
									"end": 1260,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1260,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1279,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1264,
									"end": 1274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1264,
									"end": 1279,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1264,
									"end": 1279,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1264,
									"end": 1279,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1226,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1211,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1333,
									"end": 1343,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1330,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1321,
									"end": 1330,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1366,
									"end": 1367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1355,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1350,
									"end": 1355,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1368,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1380,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1374,
									"end": 1380,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1374,
									"end": 1393,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1408,
									"end": 1422,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1399,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1399,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 791,
									"end": 1427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 730,
									"end": 737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 780,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 763,
									"end": 768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 759,
									"end": 781,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 882,
									"end": 887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 858,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 855,
									"end": 889,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 903,
									"end": 904,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 901,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 893,
									"end": 905,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 975,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 1012,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1013,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1048,
									"end": 1053,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1288,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1283,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1289,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1413,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1493,
									"end": 1500,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1491,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1511,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1552,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1632,
									"end": 1639,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1630,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1771,
									"end": 1778,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1760,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1660,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1910,
									"end": 1917,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1899,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1908,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1928,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 1970,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2050,
									"end": 2057,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2030,
									"end": 2039,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2048,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1938,
									"end": 2068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2110,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2189,
									"end": 2196,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2187,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2078,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2249,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2319,
									"end": 2325,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2317,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2326,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2477,
									"end": 2483,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2472,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2465,
									"end": 2484,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2522,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2696,
									"name": "PUSH",
									"source": 7,
									"value": "4254433A302C204554483A312C204C494E4B3A32000000000000000000000000"
								},
								{
									"begin": 2670,
									"end": 2671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2662,
									"end": 2668,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2937,
									"end": 2939,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2932,
									"end": 2935,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3038,
									"end": 3041,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3069,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3062,
									"end": 3065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3058,
									"end": 3070,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3288,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3275,
									"end": 3284,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3289,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3335,
									"end": 3344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3345,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3319,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3346,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3489,
									"end": 3493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3632,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3545,
									"end": 3633,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3652,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3649,
									"end": 3650,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3676,
									"end": 3680,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3673,
									"end": 3674,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3681,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4521,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ca7d2132eb91ebc6b0122add36941a571e685cb3772e5cefe11162925cdf0a964736f6c634300080a0033",
									".code": [
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "A3F09AD6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "DBD0E1B6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "F26CC58E"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "F26CC58E"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "FCB341DF"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "FFD0E69F"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "DBD0E1B6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "E0A73A93"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "E99D2866"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "EA8A1AF0"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "BD9A548B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "BD9A548B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "BEF904E3"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "CBED2449"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "D8683798"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "A3F09AD6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "B6FC2D5F"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "BAB215F8"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "5B6A251B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "86BE75B7"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "86BE75B7"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "8A568299"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "A2E800AD"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "5B6A251B"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "603DAF9A"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "839966AF"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "3FE3347A"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "3FE3347A"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "43D726D6"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "4C1786EA"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "4E71D92D"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "15D655C9"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "200D2ED2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "3B41E19C"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4521,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 710,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 629,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1727,
											"end": 1742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1765,
											"end": 1775,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1790,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "24EA00"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1870,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1892,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 786,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4440,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2039,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2073,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4440,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2143,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2143,
											"end": 2159,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2143,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2128,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2271,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4440,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1508,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "PUSH",
											"source": 3,
											"value": "24EA00"
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1610,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3857,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2487,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2487,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2493,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 503,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 734,
											"end": 759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 759,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 710,
											"end": 730,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 710,
											"end": 730,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3050,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 536,
											"end": 567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2915,
											"end": 2928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2905,
											"end": 2929,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 2929,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2905,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2879,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2888,
											"end": 2901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2879,
											"end": 2902,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2902,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2879,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2934,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3528,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3514,
											"end": 3528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3546,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3570,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3554,
											"end": 3570,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3585,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3578,
											"end": 3585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3593,
											"end": 3606,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3593,
											"end": 3606,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3617,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2608,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2653,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2639,
											"end": 2653,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2658,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3936,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3147,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3171,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4279,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1984,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4077,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4077,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4051,
											"end": 4102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4087,
											"end": 4095,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4102,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4051,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4199,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4185,
											"end": 4199,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4120,
											"end": 4149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4120,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 4231,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3732,
											"end": 3748,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3732,
											"end": 3748,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3769,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3756,
											"end": 3769,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3706,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3692,
											"end": 3706,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3692,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 4415,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2371,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3251,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 371,
											"end": 379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 355,
											"end": 379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 411,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 479,
											"end": 491,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 474,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 453,
											"end": 461,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 453,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 453,
											"end": 465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 543,
											"end": 551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 530,
											"end": 538,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 515,
											"end": 525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 515,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 424,
											"end": 560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 776,
											"end": 788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 763,
											"end": 771,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 763,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 763,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 744,
											"end": 758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 713,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 796,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 944,
											"end": 953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1157,
											"end": 1162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1106,
											"end": 1164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1747,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1838,
											"end": 1843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1820,
											"end": 1844,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1844,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1820,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1845,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 1800,
											"end": 1863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1857,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1863,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 1800,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1869,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 1966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 1966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2002,
											"end": 2007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2014,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2110,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2116,
											"end": 2232,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2116,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2201,
											"end": 2206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2166,
											"end": 2226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2226,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2166,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2232,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2467,
											"end": 2586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2505,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 2505,
											"end": 2584,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2584,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2505,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2467,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2650,
											"end": 2703,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2650,
											"end": 2703,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2650,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2703,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2778,
											"end": 2828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2778,
											"end": 2828,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2778,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2845,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2920,
											"end": 2925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2938,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2944,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3065,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2950,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3035,
											"end": 3058,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3035,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3065,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3213,
											"end": 3282,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3282,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3213,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3289,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3414,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3415,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3421,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3523,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3529,
											"end": 3647,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3529,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3616,
											"end": 3640,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3640,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3616,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3647,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3797,
											"end": 3868,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3797,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3875,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 3990,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3881,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3990,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4206,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4334,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4212,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4303,
											"end": 4308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4285,
											"end": 4309,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4285,
											"end": 4309,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4285,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4275,
											"end": 4310,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4334,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4440,
											"end": 4473,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4440,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4479,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4568,
											"end": 4591,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4564,
											"end": 4596,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4680,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 4561,
											"end": 4680,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4599,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4599,
											"end": 4678,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4599,
											"end": 4678,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4599,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4680,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 4561,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4778,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4744,
											"end": 4797,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4797,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4744,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4814,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4928,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4945,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4910,
											"end": 5029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4948,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4948,
											"end": 5027,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4948,
											"end": 5027,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4948,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5029,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4910,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 5138,
											"end": 5145,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5127,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5377,
											"end": 5391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5398,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5547,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5651,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5657,
											"end": 5765,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5657,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5734,
											"end": 5758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5734,
											"end": 5758,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5734,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5765,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 5903,
											"end": 5906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5861,
											"end": 5907,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5861,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 5861,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5943,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5950,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6047,
											"end": 6061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6067,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6799,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6105,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6241,
											"end": 6293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6241,
											"end": 6293,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6241,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6309,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6309,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 6309,
											"end": 6393,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6309,
											"end": 6393,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6309,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6393,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6465,
											"end": 6470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 6417,
											"end": 6471,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6471,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6417,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6542,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 6618,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6697,
											"end": 6700,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6682,
											"end": 6695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6701,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6724,
											"end": 6782,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6724,
											"end": 6782,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6724,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6510,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6799,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 6985,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6971,
											"end": 6980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 7110,
											"end": 7111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6996,
											"end": 7113,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7113,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6996,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7120,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7232,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7237,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7202,
											"end": 7321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7240,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7240,
											"end": 7319,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7319,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7240,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7321,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7202,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7430,
											"end": 7437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7419,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7385,
											"end": 7438,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7438,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7385,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7455,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7461,
											"end": 7581,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7461,
											"end": 7581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7550,
											"end": 7555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7557,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7513,
											"end": 7575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7573,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7575,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7513,
											"end": 7575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7461,
											"end": 7581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7461,
											"end": 7581,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7677,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7712,
											"end": 7717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7686,
											"end": 7718,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7686,
											"end": 7718,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7686,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7724,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7823,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7840,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 8032,
											"end": 8039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8008,
											"end": 8030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 8040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 8040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8057,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8225,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8238,
											"end": 8464,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8238,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8412,
											"name": "PUSH",
											"source": 7,
											"value": "54686520737461747573206F6620746865204344532073686F756C6420626520"
										},
										{
											"begin": 8374,
											"end": 8375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8447,
											"end": 8456,
											"name": "PUSH",
											"source": 7,
											"value": "70656E64696E6700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8434,
											"end": 8440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8709,
											"end": 8802,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8709,
											"end": 8802,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8709,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 8830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8836,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9079,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9267,
											"end": 9447,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9267,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9315,
											"end": 9392,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9416,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9402,
											"end": 9417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9440,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9433,
											"end": 9434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9441,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9493,
											"end": 9496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9532,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9566,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9700,
											"end": 9701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9628,
											"end": 9702,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9622,
											"end": 9703,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9726,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9619,
											"end": 9726,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9726,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9619,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9750,
											"end": 9751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9758,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9823,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9823,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 9823,
											"end": 9842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9823,
											"end": 9842,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 9823,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9856,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9856,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 9856,
											"end": 9875,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9856,
											"end": 9875,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 9856,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9896,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9937,
											"end": 9946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9929,
											"end": 9946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9929,
											"end": 9946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9952,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9958,
											"end": 10183,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9958,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10098,
											"end": 10132,
											"name": "PUSH",
											"source": 7,
											"value": "54686520737461747573206F6620746865204344532073686F756C6420626520"
										},
										{
											"begin": 10094,
											"end": 10095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10082,
											"end": 10096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10075,
											"end": 10133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10167,
											"end": 10175,
											"name": "PUSH",
											"source": 7,
											"value": "6163746976650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10183,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 10416,
											"end": 10418,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10411,
											"end": 10414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 10517,
											"end": 10520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10546,
											"end": 10548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10541,
											"end": 10544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10530,
											"end": 10549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10530,
											"end": 10549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10767,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10763,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10750,
											"end": 10768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10808,
											"end": 10812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10825,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 10968,
											"end": 10972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10834,
											"end": 10973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10834,
											"end": 10973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10986,
											"end": 11224,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 10986,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11126,
											"end": 11160,
											"name": "PUSH",
											"source": 7,
											"value": "43757272656E7420707269636520697320686967686572207468616E20746865"
										},
										{
											"begin": 11122,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11110,
											"end": 11124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11216,
											"name": "PUSH",
											"source": 7,
											"value": "20636C61696D20707269636520696E2043445300000000000000000000000000"
										},
										{
											"begin": 11190,
											"end": 11192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10986,
											"end": 11224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10986,
											"end": 11224,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11372,
											"end": 11375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11393,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 11452,
											"end": 11455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11393,
											"end": 11460,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11393,
											"end": 11460,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 11393,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11386,
											"end": 11460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11386,
											"end": 11460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11469,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11558,
											"end": 11561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11469,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 11469,
											"end": 11562,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11469,
											"end": 11562,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11469,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11589,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11582,
											"end": 11585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11571,
											"end": 11590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11571,
											"end": 11590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11230,
											"end": 11596,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11768,
											"end": 11772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11806,
											"end": 11808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11795,
											"end": 11804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11791,
											"end": 11809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11855,
											"end": 11864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11849,
											"end": 11853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11845,
											"end": 11865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11841,
											"end": 11842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11819,
											"end": 11866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 12009,
											"end": 12013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11883,
											"end": 12014,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11883,
											"end": 12014,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 11883,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11875,
											"end": 12014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11875,
											"end": 12014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11602,
											"end": 12021,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12027,
											"end": 12196,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 12027,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12167,
											"end": 12188,
											"name": "PUSH",
											"source": 7,
											"value": "526F756E6420616C726561647920656E64656400000000000000000000000000"
										},
										{
											"begin": 12163,
											"end": 12164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12144,
											"end": 12189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12196,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12344,
											"end": 12347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12429,
											"end": 12431,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 12424,
											"end": 12427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12365,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 12365,
											"end": 12432,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12365,
											"end": 12432,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12365,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12441,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12530,
											"end": 12533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12441,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 12441,
											"end": 12534,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12441,
											"end": 12534,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12441,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12559,
											"end": 12561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12554,
											"end": 12557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12550,
											"end": 12562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12202,
											"end": 12568,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12740,
											"end": 12744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12778,
											"end": 12780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12755,
											"end": 12781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12755,
											"end": 12781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12817,
											"end": 12837,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12798,
											"end": 12815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12981,
											"end": 12985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 12855,
											"end": 12986,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12855,
											"end": 12986,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12855,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12993,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13087,
											"end": 13093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13081,
											"end": 13094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13072,
											"end": 13094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13103,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 13130,
											"end": 13135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13103,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 13103,
											"end": 13136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13103,
											"end": 13136,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 13103,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13142,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13255,
											"end": 13264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13246,
											"end": 13253,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13242,
											"end": 13265,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13238,
											"end": 13270,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13354,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 13235,
											"end": 13354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13273,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13273,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 13273,
											"end": 13352,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13273,
											"end": 13352,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13273,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13354,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 13235,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13474,
											"end": 13481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13454,
											"end": 13463,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13450,
											"end": 13472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 13418,
											"end": 13482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13418,
											"end": 13482,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13418,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13408,
											"end": 13482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13408,
											"end": 13482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13364,
											"end": 13492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13499,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13505,
											"end": 13730,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 13505,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13645,
											"end": 13679,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13641,
											"end": 13642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13629,
											"end": 13643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13622,
											"end": 13680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13714,
											"end": 13722,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13709,
											"end": 13711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13701,
											"end": 13707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13690,
											"end": 13723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13730,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13878,
											"end": 13881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13899,
											"end": 13966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 13963,
											"end": 13965,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13958,
											"end": 13961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13899,
											"end": 13966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 13899,
											"end": 13966,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13899,
											"end": 13966,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 13899,
											"end": 13966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13892,
											"end": 13966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13892,
											"end": 13966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 14064,
											"end": 14067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 13975,
											"end": 14068,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13975,
											"end": 14068,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 13975,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14093,
											"end": 14095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14088,
											"end": 14091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14084,
											"end": 14096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14077,
											"end": 14096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14077,
											"end": 14096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 14102,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14274,
											"end": 14278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14361,
											"end": 14370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14355,
											"end": 14359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14325,
											"end": 14372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14389,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14515,
											"end": 14519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14389,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 14389,
											"end": 14520,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14389,
											"end": 14520,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14389,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14527,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14533,
											"end": 14715,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14533,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14707,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14669,
											"end": 14670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14661,
											"end": 14667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14657,
											"end": 14671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 14708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14533,
											"end": 14715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14533,
											"end": 14715,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14863,
											"end": 14866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14884,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14943,
											"end": 14946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14884,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 14884,
											"end": 14951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14884,
											"end": 14951,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 14884,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14877,
											"end": 14951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14877,
											"end": 14951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15049,
											"end": 15052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14960,
											"end": 15053,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14960,
											"end": 15053,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 14960,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15078,
											"end": 15080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15073,
											"end": 15076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15069,
											"end": 15081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15062,
											"end": 15081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15062,
											"end": 15081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15087,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15259,
											"end": 15263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15297,
											"end": 15299,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15274,
											"end": 15300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15274,
											"end": 15300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 15344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15356,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15332,
											"end": 15333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15321,
											"end": 15330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15317,
											"end": 15334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15310,
											"end": 15357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15374,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15500,
											"end": 15504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15374,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 15374,
											"end": 15505,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15374,
											"end": 15505,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15374,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15366,
											"end": 15505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15366,
											"end": 15505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15512,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15518,
											"end": 15698,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 15518,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15566,
											"end": 15643,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15563,
											"end": 15564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15663,
											"end": 15667,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15660,
											"end": 15661,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15653,
											"end": 15668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15684,
											"end": 15685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15677,
											"end": 15692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15761,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15761,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15761,
											"end": 15781,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15761,
											"end": 15781,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15761,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15756,
											"end": 15781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15756,
											"end": 15781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15795,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15813,
											"end": 15814,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15795,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15795,
											"end": 15815,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15795,
											"end": 15815,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15795,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15790,
											"end": 15815,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15790,
											"end": 15815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15834,
											"end": 15835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15824,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15824,
											"end": 15859,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15824,
											"end": 15859,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15824,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15881,
											"end": 15882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15878,
											"end": 15879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15874,
											"end": 15883,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 15883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 15883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 15973,
											"end": 15974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 15975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15955,
											"end": 15975,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15955,
											"end": 15975,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 15955,
											"end": 15975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15950,
											"end": 15975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15950,
											"end": 15975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16007,
											"end": 16008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15989,
											"end": 16009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15989,
											"end": 16009,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 15989,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 16009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 16009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16025,
											"end": 16026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16030,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16053,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16019,
											"end": 16053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16053,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16019,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16078,
											"end": 16079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16075,
											"end": 16076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16080,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16063,
											"end": 16080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16063,
											"end": 16080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 16086,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 16173,
											"end": 16174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16150,
											"end": 16175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16150,
											"end": 16175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 16207,
											"end": 16208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16189,
											"end": 16209,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16189,
											"end": 16209,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 16189,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16184,
											"end": 16209,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16184,
											"end": 16209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16305,
											"end": 16379,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16302,
											"end": 16303,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16299,
											"end": 16380,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16294,
											"end": 16295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16296,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16297,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16276,
											"end": 16381,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16273,
											"end": 16404,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16273,
											"end": 16404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16273,
											"end": 16404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16384,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 16384,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 16384,
											"end": 16402,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16384,
											"end": 16402,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 16384,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16273,
											"end": 16404,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16273,
											"end": 16404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16434,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16414,
											"end": 16434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16414,
											"end": 16434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16440,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accept(uint256,bool)": "3b41e19c",
							"assetType()": "3fe3347a",
							"cancel()": "ea8a1af0",
							"checkPayDatePassed()": "839966af",
							"checkRoundsZero()": "ffd0e69f",
							"claim()": "4e71d92d",
							"claimPrice()": "15d655c9",
							"close()": "43d726d6",
							"getAmountOfAsset()": "fcb341df",
							"getBuyer()": "603daf9a",
							"getClaimReward()": "f26cc58e",
							"getCurrPrice(uint32)": "cbed2449",
							"getPrices()": "bd9a548b",
							"getSeller()": "dbd0e1b6",
							"initAssetPrice()": "86be75b7",
							"liquidationPrice()": "b6fc2d5f",
							"nextPayDate()": "d8683798",
							"owner()": "8da5cb5b",
							"premium()": "e0a73a93",
							"premiumPaid()": "5b6a251b",
							"renounceOwnership()": "715018a6",
							"rounds()": "a2e800ad",
							"sellerDeposit()": "4c1786ea",
							"setBuyer(address)": "a3f09ad6",
							"setInitAssetPrice(uint256)": "bef904e3",
							"setParticipants(address,bool)": "bab215f8",
							"setSeller(address)": "e99d2866",
							"status()": "200d2ed2",
							"totalRounds()": "8a568299",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBuyerHost\",\"type\":\"bool\"}],\"name\":\"accept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetType\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPayDatePassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRoundsZero\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premiumPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"setBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"}],\"name\":\"setInitAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participants\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBuyer\",\"type\":\"bool\"}],\"name\":\"setParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"setSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/CDS.sol\":\"CDS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/CDS.sol\":{\"keccak256\":\"0x6b44e8388e2690379a9c84045773fc688725aa262feba991710694236404957d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b458af3eb1c268e5fbb6d3b427fb039464163f64db00bdc454aecbc74bcd0c\",\"dweb:/ipfs/QmTqj4XSNhj51B6YV2QowhrqKcVSRZZ1XrLmYAs1DbnCdD\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 936,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(PriceOracleMock)1077"
							},
							{
								"astId": 462,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PriceOracleMock)1077"
							},
							{
								"astId": 471,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "status",
								"offset": 20,
								"slot": "2",
								"type": "t_enum(Status)468"
							},
							{
								"astId": 473,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "initAssetPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 475,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "claimPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "liquidationPrice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 479,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "premium",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "sellerDeposit",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 483,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "nextPayDate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 485,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "buyer",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "seller",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 489,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "rounds",
								"offset": 20,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 491,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "totalRounds",
								"offset": 24,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 493,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "assetType",
								"offset": 28,
								"slot": "10",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(PriceOracleMock)1077": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							},
							"t_enum(Status)468": {
								"encoding": "inplace",
								"label": "enum CDS.Status",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumer.sol": {
				"PriceConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcbed2449\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_12\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_18)\n    tag_11:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_20\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_24)\n    tag_19:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_26\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_25:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_24:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_18:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_36:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_37:\n        /* \"#utility.yul\":505:528   */\n      tag_51\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_52:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_38:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_54\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_6:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_57\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":777:896   */\n    tag_56:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_58\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1112   */\n    tag_39:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1101:1106   */\n      dup2\n        /* \"#utility.yul\":1090:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1236   */\n    tag_40:\n        /* \"#utility.yul\":1205:1229   */\n      tag_61\n        /* \"#utility.yul\":1223:1228   */\n      dup2\n        /* \"#utility.yul\":1205:1229   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1230   */\n      mstore\n        /* \"#utility.yul\":1118:1236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1464   */\n    tag_9:\n        /* \"#utility.yul\":1335:1339   */\n      0x00\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1362:1371   */\n      dup3\n        /* \"#utility.yul\":1358:1376   */\n      add\n        /* \"#utility.yul\":1350:1376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1457   */\n      tag_63\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1443:1452   */\n      dup4\n        /* \"#utility.yul\":1439:1456   */\n      add\n        /* \"#utility.yul\":1430:1436   */\n      dup5\n        /* \"#utility.yul\":1386:1457   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1242:1464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1592   */\n    tag_41:\n        /* \"#utility.yul\":1543:1567   */\n      tag_65\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1533:1568   */\n      eq\n        /* \"#utility.yul\":1523:1586   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1579:1580   */\n      dup1\n        /* \"#utility.yul\":1572:1584   */\n      revert\n        /* \"#utility.yul\":1523:1586   */\n    tag_66:\n        /* \"#utility.yul\":1470:1592   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:1741   */\n    tag_42:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1686:1692   */\n      dup2\n        /* \"#utility.yul\":1680:1693   */\n      mload\n        /* \"#utility.yul\":1671:1693   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1735   */\n      tag_68\n        /* \"#utility.yul\":1729:1734   */\n      dup2\n        /* \"#utility.yul\":1702:1735   */\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1598:1741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1747:2098   */\n    tag_16:\n        /* \"#utility.yul\":1817:1823   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1854:1863   */\n      dup3\n        /* \"#utility.yul\":1845:1852   */\n      dup5\n        /* \"#utility.yul\":1841:1864   */\n      sub\n        /* \"#utility.yul\":1837:1869   */\n      slt\n        /* \"#utility.yul\":1834:1953   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1872:1951   */\n      tag_71\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1834:1953   */\n    tag_70:\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":2017:2081   */\n      tag_72\n        /* \"#utility.yul\":2073:2080   */\n      dup5\n        /* \"#utility.yul\":2064:2070   */\n      dup3\n        /* \"#utility.yul\":2053:2062   */\n      dup6\n        /* \"#utility.yul\":2049:2071   */\n      add\n        /* \"#utility.yul\":2017:2081   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2007:2081   */\n      swap2\n      pop\n        /* \"#utility.yul\":1963:2091   */\n      pop\n        /* \"#utility.yul\":1747:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2284   */\n    tag_43:\n        /* \"#utility.yul\":2152:2229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2149:2150   */\n      0x00\n        /* \"#utility.yul\":2142:2230   */\n      mstore\n        /* \"#utility.yul\":2249:2253   */\n      0x12\n        /* \"#utility.yul\":2246:2247   */\n      0x04\n        /* \"#utility.yul\":2239:2254   */\n      mstore\n        /* \"#utility.yul\":2273:2277   */\n      0x24\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2278   */\n      revert\n        /* \"#utility.yul\":2476:2661   */\n    tag_32:\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2533:2553   */\n      tag_76\n        /* \"#utility.yul\":2551:2552   */\n      dup3\n        /* \"#utility.yul\":2533:2553   */\n      tag_39\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2528:2553   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2587   */\n      tag_77\n        /* \"#utility.yul\":2585:2586   */\n      dup4\n        /* \"#utility.yul\":2567:2587   */\n      tag_39\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2562:2587   */\n      swap3\n      pop\n        /* \"#utility.yul\":2606:2607   */\n      dup3\n        /* \"#utility.yul\":2596:2631   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2611:2629   */\n      tag_79\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2596:2631   */\n    tag_78:\n        /* \"#utility.yul\":2653:2654   */\n      dup3\n        /* \"#utility.yul\":2650:2651   */\n      dup3\n        /* \"#utility.yul\":2646:2655   */\n      div\n        /* \"#utility.yul\":2641:2655   */\n      swap1\n      pop\n        /* \"#utility.yul\":2476:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_948": {
									"entryPoint": null,
									"id": 948,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610559380380610559833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610442806101176000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x559 CODESIZE SUB DUP1 PUSH2 0x559 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x442 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;255:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;321:8;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;157:552;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;157:552:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_355": {
									"entryPoint": 667,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrPrice_1009": {
									"entryPoint": 96,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2664:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:7"
															},
															"nodeType": "YulIf",
															"src": "485:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:7",
														"type": ""
													}
												],
												"src": "433:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "559:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:7"
															},
															"nodeType": "YulIf",
															"src": "777:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:7",
														"type": ""
													}
												],
												"src": "702:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1101:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:7",
														"type": ""
													}
												],
												"src": "1035:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1223:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1205:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:7",
														"type": ""
													}
												],
												"src": "1118:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1362:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1350:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1430:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1386:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1335:4:7",
														"type": ""
													}
												],
												"src": "1242:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1570:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1572:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1572:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1572:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1536:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1561:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1543:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1543:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1533:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:43:7"
															},
															"nodeType": "YulIf",
															"src": "1523:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1506:5:7",
														"type": ""
													}
												],
												"src": "1470:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1680:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1729:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1702:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1639:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1647:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1655:5:7",
														"type": ""
													}
												],
												"src": "1598:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1870:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1872:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1845:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:32:7"
															},
															"nodeType": "YulIf",
															"src": "1834:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1963:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2007:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2064:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2017:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2007:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1794:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1805:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"src": "1747:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2104:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2318:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2328:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2290:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2533:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2528:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2567:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2562:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:9:7"
															},
															"nodeType": "YulIf",
															"src": "2596:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2641:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2653:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2641:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2507:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2510:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2516:1:7",
														"type": ""
													}
												],
												"src": "2476:185:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:7:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:77::-;1072:7;1101:5;1090:16;;1035:77;;;:::o;1118:118::-;1205:24;1223:5;1205:24;:::i;:::-;1200:3;1193:37;1118:118;;:::o;1242:222::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1386:71;1454:1;1443:9;1439:17;1430:6;1386:71;:::i;:::-;1242:222;;;;:::o;1470:122::-;1543:24;1561:5;1543:24;:::i;:::-;1536:5;1533:35;1523:63;;1582:1;1579;1572:12;1523:63;1470:122;:::o;1598:143::-;1655:5;1686:6;1680:13;1671:22;;1702:33;1729:5;1702:33;:::i;:::-;1598:143;;;;:::o;1747:351::-;1817:6;1866:2;1854:9;1845:7;1841:23;1837:32;1834:119;;;1872:79;;:::i;:::-;1834:119;1992:1;2017:64;2073:7;2064:6;2053:9;2049:22;2017:64;:::i;:::-;2007:74;;1963:128;1747:351;;;;:::o;2104:180::-;2152:77;2149:1;2142:88;2249:4;2246:1;2239:15;2273:4;2270:1;2263:15;2476:185;2516:1;2533:20;2551:1;2533:20;:::i;:::-;2528:25;;2567:20;2585:1;2567:20;:::i;:::-;2562:25;;2606:1;2596:35;;2611:18;;:::i;:::-;2596:35;2653:1;2650;2646:9;2641:14;;2476:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrPrice(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
									".code": [
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "CBED2449"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1568,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1584,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1729,
											"end": 1734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrPrice(uint32)": "cbed2449"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 936,
								"contract": "contracts/CDS/PriceConsumer.sol:PriceConsumer",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(PriceOracleMock)1077"
							}
						],
						"types": {
							"t_contract(PriceOracleMock)1077": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"PriceOracleMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "btcPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Oracle/PriceOracleMock.sol\":169:277  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":203:216  2500000000000 */\n  0x0246139ca800\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:200  btcPrice */\n  0x00\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:216  btcPrice = 2500000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":233:245  160000000000 */\n  0x2540be4000\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:230  ethPrice */\n  0x01\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:245  ethPrice = 160000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":263:272  750000000 */\n  0x2cb41780\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:260  linkPrice */\n  0x02\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:272  linkPrice = 750000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09c7a25c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf78535\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8ad52d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc7dce06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea13ed8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff186b2e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_12:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":360:366  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:357  btcPrice */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:366  btcPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":379:387  btcPrice */\n      sload(0x00)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":372:387  return btcPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":449:456  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":475:481  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:472  ethPrice */\n      0x01\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:481  ethPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":494:502  ethPrice */\n      sload(0x01)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":487:502  return ethPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":565:572  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":592:598  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:589  linkPrice */\n      0x02\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:598  linkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":611:620  linkPrice */\n      sload(0x02)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":604:620  return linkPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_48\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_49:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_51\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":766:885   */\n    tag_53:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_55\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_41:\n        /* \"#utility.yul\":1112:1136   */\n      tag_57\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1034": {
									"entryPoint": null,
									"id": 1034,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50650246139ca800600081905550642540be4000600181905550632cb41780600281905550610264806100446000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0x246139CA800 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH5 0x2540BE4000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH4 0x2CB41780 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x264 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;169:108;;;;;;;;;;203:13;192:8;:24;;;;233:12;222:8;:23;;;;263:9;251;:21;;;;57:570;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btcPrice_1014": {
									"entryPoint": 362,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethPrice_1016": {
									"entryPoint": 406,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkPrice_1018": {
									"entryPoint": 356,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBTCPrice_1048": {
									"entryPoint": 337,
									"id": 1048,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setETHPrice_1062": {
									"entryPoint": 368,
									"id": 1062,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setLinkPrice_1076": {
									"entryPoint": 387,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:7",
														"type": ""
													}
												],
												"src": "1025:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:7",
														"type": ""
													}
												],
												"src": "1149:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:111;334:7;360:6;349:8;:17;;;;379:8;;372:15;;281:111;;;:::o;140:24::-;;;;:::o;86:23::-;;;;:::o;396:111::-;449:7;475:6;464:8;:17;;;;494:8;;487:15;;396:111;;;:::o;511:114::-;565:7;592:6;580:9;:18;;;;611:9;;604:16;;511:114;;;:::o;113:23::-;;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "66513",
								"totalCost": "188913"
							},
							"external": {
								"btcPrice()": "2451",
								"ethPrice()": "2517",
								"linkPrice()": "2429",
								"setBTCPrice(uint256)": "infinite",
								"setETHPrice(uint256)": "infinite",
								"setLinkPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 203,
									"end": 216,
									"name": "PUSH",
									"source": 5,
									"value": "246139CA800"
								},
								{
									"begin": 192,
									"end": 200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 233,
									"end": 245,
									"name": "PUSH",
									"source": 5,
									"value": "2540BE4000"
								},
								{
									"begin": 222,
									"end": 230,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "2CB41780"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 251,
									"end": 272,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
									".code": [
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "9C7A25C"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "CF78535"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "A8AD52D1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "BC7DCE06"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "EEA13ED8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "FF186B2E"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 589,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"btcPrice()": "a8ad52d1",
							"ethPrice()": "ff186b2e",
							"linkPrice()": "0cf78535",
							"setBTCPrice(uint256)": "09c7a25c",
							"setETHPrice(uint256)": "bc7dce06",
							"setLinkPrice(uint256)": "eea13ed8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/PriceOracleMock.sol\":\"PriceOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1014,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "btcPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1016,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "ethPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "linkPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/LibSwap.sol": {
				"LibSwap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"calcAmountOfAsset(uint256,uint256,uint256)": "infinite",
								"calcClaimReward(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
									".code": [
										{
											"begin": 116,
											"end": 797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibSwap.sol\":\"LibSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"contracts/CDS/CDS.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/CDS.sol",
					"exportedSymbols": {
						"CDS": [
							926
						],
						"Context": [
							134
						],
						"LibSwap": [
							1153
						],
						"Ownable": [
							112
						],
						"PriceConsumer": [
							1010
						],
						"PriceOracleMock": [
							1077
						],
						"SafeMath": [
							446
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/CDS/PriceConsumer.sol",
							"file": "./PriceConsumer.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1011,
							"src": "57:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/LibSwap.sol",
							"file": "../libs/LibSwap.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1154,
							"src": "87:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 113,
							"src": "117:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 452,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "224:7:3"
									},
									"id": 453,
									"nodeType": "InheritanceSpecifier",
									"src": "224:7:3"
								},
								{
									"arguments": [
										{
											"hexValue": "307832313535384332634441303938653765306163376433383737354233453262346130393435323232",
											"id": 455,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "247:42:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"value": "0x21558C2cDA098e7e0ac7d38775B3E2b4a0945222"
										}
									],
									"baseName": {
										"id": 454,
										"name": "PriceConsumer",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1010,
										"src": "233:13:3"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "233:57:3"
								}
							],
							"canonicalName": "CDS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1010,
								112,
								134
							],
							"name": "CDS",
							"nameLocation": "217:3:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 459,
									"libraryName": {
										"id": 457,
										"name": "LibSwap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1153,
										"src": "301:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "295:26:3",
									"typeName": {
										"id": 458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "349:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "325:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 461,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 460,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1077,
											"src": "325:15:3"
										},
										"referencedDeclaration": 1077,
										"src": "325:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CDS.Status",
									"id": 468,
									"members": [
										{
											"id": 463,
											"name": "inactive",
											"nameLocation": "383:8:3",
											"nodeType": "EnumValue",
											"src": "383:8:3"
										},
										{
											"id": 464,
											"name": "pending",
											"nameLocation": "397:7:3",
											"nodeType": "EnumValue",
											"src": "397:7:3"
										},
										{
											"id": 465,
											"name": "active",
											"nameLocation": "410:6:3",
											"nodeType": "EnumValue",
											"src": "410:6:3"
										},
										{
											"id": 466,
											"name": "claimed",
											"nameLocation": "422:7:3",
											"nodeType": "EnumValue",
											"src": "422:7:3"
										},
										{
											"id": 467,
											"name": "expired",
											"nameLocation": "435:7:3",
											"nodeType": "EnumValue",
											"src": "435:7:3"
										}
									],
									"name": "Status",
									"nameLocation": "370:6:3",
									"nodeType": "EnumDefinition",
									"src": "365:81:3"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 471,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "463:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "449:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$468",
										"typeString": "enum CDS.Status"
									},
									"typeName": {
										"id": 470,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 469,
											"name": "Status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 468,
											"src": "449:6:3"
										},
										"referencedDeclaration": 468,
										"src": "449:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$468",
											"typeString": "enum CDS.Status"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86be75b7",
									"id": 473,
									"mutability": "mutable",
									"name": "initAssetPrice",
									"nameLocation": "489:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "474:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15d655c9",
									"id": 475,
									"mutability": "mutable",
									"name": "claimPrice",
									"nameLocation": "522:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "507:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fc2d5f",
									"id": 477,
									"mutability": "mutable",
									"name": "liquidationPrice",
									"nameLocation": "551:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "536:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "536:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0a73a93",
									"id": 479,
									"mutability": "mutable",
									"name": "premium",
									"nameLocation": "586:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "571:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c1786ea",
									"id": 481,
									"mutability": "mutable",
									"name": "sellerDeposit",
									"nameLocation": "612:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "597:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "597:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8683798",
									"id": 483,
									"mutability": "mutable",
									"name": "nextPayDate",
									"nameLocation": "644:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "629:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 482,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "buyer",
									"nameLocation": "675:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "659:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 484,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "700:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "684:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 486,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "684:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a2e800ad",
									"id": 489,
									"mutability": "mutable",
									"name": "rounds",
									"nameLocation": "724:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "710:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 488,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "710:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a568299",
									"id": 491,
									"mutability": "mutable",
									"name": "totalRounds",
									"nameLocation": "748:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "734:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 490,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "734:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fe3347a",
									"id": 493,
									"mutability": "mutable",
									"name": "assetType",
									"nameLocation": "777:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "763:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 492,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "763:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "985:442:3",
										"statements": [
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "991:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1008:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "991:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "991:32:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1029:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 515,
														"name": "_claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1042:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1029:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1029:24:3"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1059:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "_liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1078:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1059:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "1059:36:3"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 523,
														"name": "_premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1111:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1101:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1101:18:3"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "1125:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "_sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "1141:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1125:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1125:30:3"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1161:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1170:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1161:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1161:16:3"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "totalRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1183:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1197:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1183:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1183:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 539,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1226:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1240:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1226:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 542,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1245:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1259:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1245:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1226:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "_assetType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "1264:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1278:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1264:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1226:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1287:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															},
															"value": "BTC:0, ETH:1, LINK:2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "1211:104:3"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1321:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1333:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1321:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1321:22:3"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1350:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1358:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1358:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1358:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1350:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "1350:18:3"
											},
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1374:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1391:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1383:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1383:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1383:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1374:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1374:19:3"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 571,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1399:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 572,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "1408:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																"typeString": "type(enum CDS.Status)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "pending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 464,
														"src": "1408:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "1399:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1399:23:3"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "816:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "808:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_claimPrice",
												"nameLocation": "845:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "837:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_liquidationPrice",
												"nameLocation": "870:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "862:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "901:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "893:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "923:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "915:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "943:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 504,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "970:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "963:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 506,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "963:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:182:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:3"
									},
									"scope": 926,
									"src": "791:636:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "1502:108:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1516:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1525:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1516:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420616c726561647920656e646564",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1528:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															},
															"value": "Round already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1508:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1508:42:3"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1556:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1571:7:3",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "4"
													},
													"src": "1556:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1556:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1594:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1594:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 595,
														"name": "setRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "1584:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$_t_uint32_$",
															"typeString": "function (uint32) returns (uint32)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "1584:21:3"
											}
										]
									},
									"functionSelector": "5b6a251b",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1483:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1483:9:3"
										},
										{
											"id": 582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 581,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "1493:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1493:8:3"
										}
									],
									"name": "premiumPaid",
									"nameLocation": "1460:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:2:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1502:0:3"
									},
									"scope": 926,
									"src": "1451:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1703:189:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "_initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1727:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "setInitAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "1709:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1709:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1709:34:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1765:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1765:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1777:13:3",
															"subExpression": {
																"id": 620,
																"name": "_isBuyerHost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "1778:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 617,
														"name": "setParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1749:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "1749:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 625,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "1807:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$926_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "1807:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 465,
															"src": "1807:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 624,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "1797:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "1797:28:3"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 630,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1831:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 631,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1845:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1845:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "34",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1863:7:3",
															"subdenomination": "weeks",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2419200_by_1",
																"typeString": "int_const 2419200"
															},
															"value": "4"
														},
														"src": "1845:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1831:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1831:39:3"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1876:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1876:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1876:11:3"
											}
										]
									},
									"functionSelector": "3b41e19c",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 609,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 608,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1683:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1683:9:3"
										},
										{
											"id": 611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 610,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 913,
												"src": "1693:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1693:9:3"
										}
									],
									"name": "accept",
									"nameLocation": "1623:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "1638:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1630:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "_isBuyerHost",
												"nameLocation": "1660:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1655:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:44:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:0:3"
									},
									"scope": 926,
									"src": "1614:278:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1943:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 650,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "1959:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$926_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "1959:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "inactive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 463,
															"src": "1959:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 649,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "1949:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1949:30:3"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 645,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 644,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1923:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:9:3"
										},
										{
											"id": 647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 646,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 913,
												"src": "1933:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1933:9:3"
										}
									],
									"name": "cancel",
									"nameLocation": "1905:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:3"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:0:3"
									},
									"scope": 926,
									"src": "1896:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "2033:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 664,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "2049:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$926_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "2049:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "expired",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "2049:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 663,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2039:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "2039:29:3"
											}
										]
									},
									"functionSelector": "43d726d6",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 658,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2014:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2014:9:3"
										},
										{
											"id": 661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 660,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2024:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2024:8:3"
										}
									],
									"name": "close",
									"nameLocation": "1997:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:0:3"
									},
									"scope": 926,
									"src": "1988:85:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "2122:149:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 678,
																	"name": "getClaimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2143:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2143:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2163:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2143:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e7420707269636520697320686967686572207468616e2074686520636c61696d20707269636520696e20434453",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																"typeString": "literal_string \"Current price is higher than the claim price in CDS\""
															},
															"value": "Current price is higher than the claim price in CDS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																"typeString": "literal_string \"Current price is higher than the claim price in CDS\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2128:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:103:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "2128:103:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 686,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "2247:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$926_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "2247:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 466,
															"src": "2247:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 685,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2237:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "2237:29:3"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2103:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2103:9:3"
										},
										{
											"id": 675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 674,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2113:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2113:8:3"
										}
									],
									"name": "claim",
									"nameLocation": "2086:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2091:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:0:3"
									},
									"scope": 926,
									"src": "2077:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "2340:31:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2354:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2364:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2354:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 702,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2353:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 698,
												"id": 703,
												"nodeType": "Return",
												"src": "2346:20:3"
											}
										]
									},
									"functionSelector": "ffd0e69f",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 694,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2316:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2316:8:3"
										}
									],
									"name": "checkRoundsZero",
									"nameLocation": "2284:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2299:2:3"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2334:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2334:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:6:3"
									},
									"scope": 926,
									"src": "2275:96:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "2443:50:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 712,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2457:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2457:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 714,
																"name": "nextPayDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2476:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2457:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 716,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2456:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 711,
												"id": 717,
												"nodeType": "Return",
												"src": "2449:39:3"
											}
										]
									},
									"functionSelector": "839966af",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 708,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 707,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2419:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2419:8:3"
										}
									],
									"name": "checkPayDatePassed",
									"nameLocation": "2384:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2402:2:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2437:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2437:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:6:3"
									},
									"scope": 926,
									"src": "2375:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2588:70:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2594:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 727,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2611:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2594:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2594:32:3"
											},
											{
												"expression": {
													"id": 730,
													"name": "initAssetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "2639:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 731,
												"nodeType": "Return",
												"src": "2632:21:3"
											}
										]
									},
									"functionSelector": "bef904e3",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInitAssetPrice",
									"nameLocation": "2520:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "2546:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2538:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:25:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2579:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:9:3"
									},
									"scope": 926,
									"src": "2511:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "2732:46:3",
										"statements": [
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2738:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 745,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "2747:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "2738:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "2738:16:3"
											},
											{
												"expression": {
													"id": 748,
													"name": "status",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "2767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"functionReturnParameters": 743,
												"id": 749,
												"nodeType": "Return",
												"src": "2760:13:3"
											}
										]
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 738,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2705:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2705:9:3"
										}
									],
									"name": "setStatus",
									"nameLocation": "2671:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2688:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "2681:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2681:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2681:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:16:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "2724:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 740,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2724:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2724:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2723:8:3"
									},
									"scope": 926,
									"src": "2662:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "2862:72:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 760,
														"name": "_isBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "2868:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 765,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "2915:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 764,
															"name": "setSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2905:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2905:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2868:61:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 762,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "2888:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 761,
															"name": "setBuyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2879:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2879:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "2868:61:3"
											}
										]
									},
									"functionSelector": "bab215f8",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 758,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 757,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2852:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2852:9:3"
										}
									],
									"name": "setParticipants",
									"nameLocation": "2791:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_participants",
												"nameLocation": "2815:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "2807:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_isBuyer",
												"nameLocation": "2835:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "2830:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2806:38:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2862:0:3"
									},
									"scope": 926,
									"src": "2782:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "3007:43:3",
										"statements": [
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 779,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3013:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 780,
														"name": "_buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3021:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3013:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "3013:14:3"
											},
											{
												"expression": {
													"id": 783,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "3040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 778,
												"id": 784,
												"nodeType": "Return",
												"src": "3033:12:3"
											}
										]
									},
									"functionSelector": "a3f09ad6",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 774,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2979:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2979:9:3"
										}
									],
									"name": "setBuyer",
									"nameLocation": "2947:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "2964:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2956:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:16:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2998:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:3"
									},
									"scope": 926,
									"src": "2938:112:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "3125:46:3",
										"statements": [
											{
												"expression": {
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 795,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3131:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 796,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3140:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3131:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "3131:16:3"
											},
											{
												"expression": {
													"id": 799,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "3160:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 794,
												"id": 800,
												"nodeType": "Return",
												"src": "3153:13:3"
											}
										]
									},
									"functionSelector": "e99d2866",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 790,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3097:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3097:9:3"
										}
									],
									"name": "setSeller",
									"nameLocation": "3063:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "3081:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "3073:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3072:17:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "3116:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3115:9:3"
									},
									"scope": 926,
									"src": "3054:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "3245:46:3",
										"statements": [
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3251:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "3260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3251:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3251:16:3"
											},
											{
												"expression": {
													"id": 815,
													"name": "rounds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "3280:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 810,
												"id": 816,
												"nodeType": "Return",
												"src": "3273:13:3"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3218:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3218:9:3"
										}
									],
									"name": "setRounds",
									"nameLocation": "3184:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "3201:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3194:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 803,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3194:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:16:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3237:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 808,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3237:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:8:3"
									},
									"scope": 926,
									"src": "3175:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "3357:57:3",
										"statements": [
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 825,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3363:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3378:7:3",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "4"
													},
													"src": "3363:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "3363:22:3"
											},
											{
												"expression": {
													"id": 829,
													"name": "nextPayDate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 483,
													"src": "3398:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 830,
												"nodeType": "Return",
												"src": "3391:18:3"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 820,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3329:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3329:9:3"
										}
									],
									"name": "setNextPayDate",
									"nameLocation": "3304:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3318:2:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "3348:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:9:3"
									},
									"scope": 926,
									"src": "3295:119:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3493:124:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 839,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3514:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 840,
															"name": "claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3536:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 841,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3554:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 842,
															"name": "premium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3578:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 843,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3593:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 844,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3506:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
														"typeString": "uint256[5] memory"
													}
												},
												"functionReturnParameters": 838,
												"id": 845,
												"nodeType": "Return",
												"src": "3499:113:3"
											}
										]
									},
									"functionSelector": "bd9a548b",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nameLocation": "3441:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3450:2:3"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3474:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 834,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3474:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 836,
													"length": {
														"hexValue": "35",
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3482:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "3474:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:19:3"
									},
									"scope": 926,
									"src": "3432:185:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "3679:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3732:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3756:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 852,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3692:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcAmountOfAsset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "3692:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3692:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 851,
												"id": 857,
												"nodeType": "Return",
												"src": "3685:90:3"
											}
										]
									},
									"functionSelector": "fcb341df",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOfAsset",
									"nameLocation": "3630:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3646:2:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3670:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3669:9:3"
									},
									"scope": 926,
									"src": "3621:159:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "3834:23:3",
										"statements": [
											{
												"expression": {
													"id": 864,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "3847:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 863,
												"id": 865,
												"nodeType": "Return",
												"src": "3840:12:3"
											}
										]
									},
									"functionSelector": "603daf9a",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "3793:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3801:2:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "3825:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:3"
									},
									"scope": 926,
									"src": "3784:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3912:24:3",
										"statements": [
											{
												"expression": {
													"id": 872,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "3925:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 871,
												"id": 873,
												"nodeType": "Return",
												"src": "3918:13:3"
											}
										]
									},
									"functionSelector": "dbd0e1b6",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSeller",
									"nameLocation": "3870:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3879:2:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3903:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:9:3"
									},
									"scope": 926,
									"src": "3861:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "3996:235:3",
										"statements": [
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "currPrice",
														"nameLocation": "4010:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "4002:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4002:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"arguments": [
														{
															"id": 883,
															"name": "assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4035:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 882,
														"name": "getCurrPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4022:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_uint256_$",
															"typeString": "function (uint32) view returns (uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4022:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4002:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "4055:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 887,
														"name": "currPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "4068:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "4051:51:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "4079:23:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 879,
															"id": 890,
															"nodeType": "Return",
															"src": "4087:8:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4159:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 896,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4185:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 897,
															"name": "currPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4209:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 893,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4120:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcClaimReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1132,
														"src": "4120:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4120:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 899,
												"nodeType": "Return",
												"src": "4107:119:3"
											}
										]
									},
									"functionSelector": "f26cc58e",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimReward",
									"nameLocation": "3949:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3963:2:3"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3987:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3986:9:3"
									},
									"scope": 926,
									"src": "3940:291:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "4273:112:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4294:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 905,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "4304:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "pending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 464,
																"src": "4304:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "4294:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c642062652070656e64696e67",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4326:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															},
															"value": "The status of the CDS should be pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															}
														],
														"id": 903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4279:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4279:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "4279:94:3"
											},
											{
												"id": 911,
												"nodeType": "PlaceholderStatement",
												"src": "4379:1:3"
											}
										]
									},
									"id": 913,
									"name": "isPending",
									"nameLocation": "4261:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4270:2:3"
									},
									"src": "4252:133:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "4409:110:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4430:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 917,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "4440:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 465,
																"src": "4440:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "4430:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520616374697665",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4461:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															},
															"value": "The status of the CDS should be active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4415:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4415:92:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "4415:92:3"
											},
											{
												"id": 923,
												"nodeType": "PlaceholderStatement",
												"src": "4513:1:3"
											}
										]
									},
									"id": 925,
									"name": "isActive",
									"nameLocation": "4398:8:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4406:2:3"
									},
									"src": "4389:130:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 927,
							"src": "208:4313:3",
							"usedErrors": []
						}
					],
					"src": "32:4490:3"
				},
				"id": 3
			},
			"contracts/CDS/PriceConsumer.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumer.sol",
					"exportedSymbols": {
						"PriceConsumer": [
							1010
						],
						"PriceOracleMock": [
							1077
						],
						"SafeMath": [
							446
						]
					},
					"id": 1011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
							"file": "../Oracle/PriceOracleMock.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1011,
							"sourceUnit": 1078,
							"src": "57:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1011,
							"sourceUnit": 447,
							"src": "97:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1010,
							"linearizedBaseContracts": [
								1010
							],
							"name": "PriceConsumer",
							"nameLocation": "166:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 933,
									"libraryName": {
										"id": 931,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "190:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:4",
									"typeName": {
										"id": 932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 936,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "239:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1010,
									"src": "215:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 935,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 934,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1077,
											"src": "215:15:4"
										},
										"referencedDeclaration": 1077,
										"src": "215:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "285:50:4",
										"statements": [
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 941,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "291:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
															"typeString": "contract PriceOracleMock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 943,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "321:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 942,
															"name": "PriceOracleMock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "305:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PriceOracleMock_$1077_$",
																"typeString": "type(contract PriceOracleMock)"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
															"typeString": "contract PriceOracleMock"
														}
													},
													"src": "291:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
														"typeString": "contract PriceOracleMock"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "291:39:4"
											}
										]
									},
									"id": 948,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "275:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "267:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:18:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:4"
									},
									"scope": 1010,
									"src": "255:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "410:297:4",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "424:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "416:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "416:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"nodeType": "VariableDeclarationStatement",
												"src": "416:13:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 958,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "439:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "439:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "524:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "524:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "_assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "609:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "623:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "609:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1003,
														"nodeType": "IfStatement",
														"src": "605:80:4",
														"trueBody": {
															"id": 1002,
															"nodeType": "Block",
															"src": "626:59:4",
															"statements": [
																{
																	"expression": {
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 991,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "634:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "670:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 997,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "676:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "670:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 992,
																							"name": "priceOracle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 936,
																							"src": "642:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
																								"typeString": "contract PriceOracleMock"
																							}
																						},
																						"id": 993,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "linkPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1018,
																						"src": "642:21:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "642:23:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 355,
																				"src": "642:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "642:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "634:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1001,
																	"nodeType": "ExpressionStatement",
																	"src": "634:44:4"
																}
															]
														}
													},
													"id": 1004,
													"nodeType": "IfStatement",
													"src": "520:165:4",
													"trueBody": {
														"id": 987,
														"nodeType": "Block",
														"src": "541:58:4",
														"statements": [
															{
																"expression": {
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 976,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "549:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "584:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "590:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "584:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 977,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "557:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
																							"typeString": "contract PriceOracleMock"
																						}
																					},
																					"id": 978,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "ethPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1016,
																					"src": "557:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "557:22:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 355,
																			"src": "557:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "557:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "549:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 986,
																"nodeType": "ExpressionStatement",
																"src": "549:43:4"
															}
														]
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "435:250:4",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "456:58:4",
													"statements": [
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 961,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "464:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "499:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "499:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 962,
																					"name": "priceOracle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "472:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PriceOracleMock_$1077",
																						"typeString": "contract PriceOracleMock"
																					}
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "btcPrice",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1014,
																				"src": "472:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "472:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "472:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "472:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "464:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "464:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1006,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 956,
													"src": "697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 1007,
												"nodeType": "Return",
												"src": "690:12:4"
											}
										]
									},
									"functionSelector": "cbed2449",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "348:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "368:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "361:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 949,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:19:4"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:4"
									},
									"scope": 1010,
									"src": "339:368:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1011,
							"src": "157:552:4",
							"usedErrors": []
						}
					],
					"src": "32:678:4"
				},
				"id": 4
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"ast": {
					"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
					"exportedSymbols": {
						"PriceOracleMock": [
							1077
						]
					},
					"id": 1078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1012,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1077,
							"linearizedBaseContracts": [
								1077
							],
							"name": "PriceOracleMock",
							"nameLocation": "66:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a8ad52d1",
									"id": 1014,
									"mutability": "mutable",
									"name": "btcPrice",
									"nameLocation": "101:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1077,
									"src": "86:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1013,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff186b2e",
									"id": 1016,
									"mutability": "mutable",
									"name": "ethPrice",
									"nameLocation": "128:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1077,
									"src": "113:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cf78535",
									"id": 1018,
									"mutability": "mutable",
									"name": "linkPrice",
									"nameLocation": "155:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1077,
									"src": "140:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "186:91:5",
										"statements": [
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1021,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "192:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030303030303030303030",
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "203:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500000000000_by_1",
															"typeString": "int_const 2500000000000"
														},
														"value": "2500000000000"
													},
													"src": "192:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "192:24:5"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "222:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313630303030303030303030",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160000000000_by_1",
															"typeString": "int_const 160000000000"
														},
														"value": "160000000000"
													},
													"src": "222:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "222:23:5"
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "251:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373530303030303030",
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_750000000_by_1",
															"typeString": "int_const 750000000"
														},
														"value": "750000000"
													},
													"src": "251:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "251:21:5"
											}
										]
									},
									"id": 1034,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:5:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:5"
									},
									"scope": 1077,
									"src": "169:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "343:49:5",
										"statements": [
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1041,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "349:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "360:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "349:17:5"
											},
											{
												"expression": {
													"id": 1045,
													"name": "btcPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1014,
													"src": "379:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1046,
												"nodeType": "Return",
												"src": "372:15:5"
											}
										]
									},
									"functionSelector": "09c7a25c",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBTCPrice",
									"nameLocation": "290:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "310:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "302:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "334:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:5"
									},
									"scope": 1077,
									"src": "281:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "458:49:5",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "464:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "475:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "464:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "464:17:5"
											},
											{
												"expression": {
													"id": 1059,
													"name": "ethPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1016,
													"src": "494:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1060,
												"nodeType": "Return",
												"src": "487:15:5"
											}
										]
									},
									"functionSelector": "bc7dce06",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setETHPrice",
									"nameLocation": "405:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "425:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "417:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:16:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 1077,
									"src": "396:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "574:51:5",
										"statements": [
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "580:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1070,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "592:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "580:18:5"
											},
											{
												"expression": {
													"id": 1073,
													"name": "linkPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1018,
													"src": "611:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1074,
												"nodeType": "Return",
												"src": "604:16:5"
											}
										]
									},
									"functionSelector": "eea13ed8",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLinkPrice",
									"nameLocation": "520:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "541:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "533:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:16:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "565:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:5"
									},
									"scope": 1077,
									"src": "511:114:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1078,
							"src": "57:570:5",
							"usedErrors": []
						}
					],
					"src": "32:596:5"
				},
				"id": 5
			},
			"contracts/libs/LibSwap.sol": {
				"ast": {
					"absolutePath": "contracts/libs/LibSwap.sol",
					"exportedSymbols": {
						"LibSwap": [
							1153
						],
						"SafeMath": [
							446
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 447,
							"src": "57:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSwap",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "LibSwap",
							"nameLocation": "124:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1083,
									"libraryName": {
										"id": 1081,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "142:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "136:27:6",
									"typeName": {
										"id": 1082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "320:268:6",
										"statements": [
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "claimReward",
														"nameLocation": "334:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1131,
														"src": "326:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "326:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"nodeType": "VariableDeclarationStatement",
												"src": "326:19:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "_liquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "355:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1100,
														"name": "_current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "371:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "355:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "424:136:6",
													"statements": [
														{
															"assignments": [
																1108
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1108,
																	"mutability": "mutable",
																	"name": "numOfAsset",
																	"nameLocation": "440:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1127,
																	"src": "432:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "432:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1116,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1113,
																				"name": "_liquidation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "479:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1111,
																				"name": "_initial",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "466:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 325,
																			"src": "466:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "466:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1109,
																		"name": "_deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "453:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "453:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "453:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "432:61:6"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1117,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "501:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "_current",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1091,
																					"src": "543:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1120,
																					"name": "_initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "530:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "530:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "530:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1118,
																			"name": "numOfAsset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "515:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 340,
																		"src": "515:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "515:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "501:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "501:52:6"
														}
													]
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "351:209:6",
												"trueBody": {
													"id": 1106,
													"nodeType": "Block",
													"src": "381:37:6",
													"statements": [
														{
															"expression": {
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1102,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "389:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1103,
																	"name": "_deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "403:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "389:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "389:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1129,
													"name": "claimReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "572:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1130,
												"nodeType": "Return",
												"src": "565:18:6"
											}
										]
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcClaimReward",
									"nameLocation": "176:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_deposit",
												"nameLocation": "205:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "197:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "227:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "219:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "253:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "245:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "275:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "267:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:96:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "311:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:9:6"
									},
									"scope": 1153,
									"src": "167:421:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "731:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1147,
																	"name": "_liquidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "776:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1145,
																	"name": "_initial",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "763:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "763:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "763:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1143,
															"name": "_sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "744:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "744:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1150,
												"nodeType": "Return",
												"src": "737:53:6"
											}
										]
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmountOfAsset",
									"nameLocation": "601:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "632:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "624:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "654:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "646:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "680:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "672:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:80:6"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "722:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:9:6"
									},
									"scope": 1153,
									"src": "592:203:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "116:681:6",
							"usedErrors": []
						}
					],
					"src": "32:766:6"
				},
				"id": 6
			}
		}
	}
}